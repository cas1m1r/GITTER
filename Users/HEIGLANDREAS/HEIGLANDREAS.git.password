======================: FILES :======================
======================: README CONTENT :======================
# org_heigl/password

An Object for passwords - Stop leaking passwords to logs or stacktraces!

[![Password-Workflow](https://github.com/heiglandreas/password/workflows/Password-Workflow/badge.svg)](https://github.com/heiglandreas/password/actions)
[![Build Status](https://travis-ci.org/heiglandreas/password.svg?branch=master)](https://travis-ci.org/heiglandreas/password)
[![Coverage Status](https://coveralls.io/repos/github/heiglandreas/password/badge.svg)](https://coveralls.io/github/heiglandreas/password)
[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/heiglandreas/password/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/heiglandreas/password/?branch=master)

[![License](https://poser.pugx.org/org_heigl/password/license)](https://packagist.org/packages/org_heigl/password)
[![Latest Stable Version](https://poser.pugx.org/org_heigl/password/v/stable)](https://packagist.org/packages/org_heigl/password)
[![Total Downloads](https://poser.pugx.org/org_heigl/password/downloads)](https://packagist.org/packages/org_heigl/password)


## Scope

This package contains an Object that can be used and passed just like you would
use a plaintext-password. The only difference is that the plaintext-password will not
be accidentaly leaked into log-files or stacktraces or `var_dump`-output.

The scope is **not** to provide a Cryptographically Secure Password or a ValueObject
that you can just pass to your Persistence-Layer for storage. On the contrary. **You shall
never store this Object**

This is only a thin wrapper around your password-string that tries to guard you from
accidentally leaking the password string where you don't want to see it.

The object stores the password encrypted using `sodium_crypto_secretbox`. So should one
find a way to expose the private property to the public there will only be an encrypted
binary code. The nonce and the key to encrypt and decrypt are stored in constants and
will be replaced on every request. So when you create two Password-objects within one
request they will both use the same nonce and key. As those value are stored as constants
they will not leak by accident. You will have to actively address them. Preventing **that**
is outside the scope of this package!

As the goal of this Object is not to store the password in a secure way (you will
use a hashing algorithm for that, won't you?) but to prohibit it from accidentally
leaking in cleartext that is a compromise I'm willing to take.

## Why?

The discussions that spun up around twitter leaking passwords to logfiles left me thinking.

It can actually happen quite easily to have passwords come up into log-files when
you put stack-traces into logs. And that brought me to thinking how to avoid that
accidentally. The answer to me is a vaule-object with a bit of logic that handles the password but
won't accidentaly leak it.

Just today (21st of March 2019) another leakage of cleartext passwords was 
announced. This time multiple 100 million accounts at facebook where leaked over multiple years.
Read more on [Krebs on Security](https://krebsonsecurity.com/2019/03/facebook-stored-hundreds-of-millions-of-user-passwords-in-plain-text-for-years/) or directly at [Facebook](https://newsroom.fb.com/news/2019/03/keeping-passwords-secure/)

## Installation

This is best installed using composer like this:

```bash
composer require org_heigl/password
```

## Usage

Instead of passing the password as a string create a Password-Object and pass that.

```php
$password = Password::createFromPlainText($request->getParam('password'));
// Do not forget to remove the password from your request-object!!
$request->setParam('password', '*****');
```

You can additionally directly use PHPs password-hashing API:

```php
$password->matchesHash($hashFromPhpPasswordHashingApi);
```

Additionally you can get a new hash for the password like this:

```php
$hash = $password->getNewHash();
```

And to wrap up the API of PHPs password-hashing API there's also a method to check
whether the password should be rehashed

```php
$password->shouldBeRehashed();
```

And to be able to store the password securely in a database you can retrieve the password hashed
using

```php
$password->hash($algorithm, $options);
```

where `$argument` and `$options` are the corresponding arguments to 
[password_hash](https://php.net/password_hash)

If you **really** need to get the plaintext password the password-object was initialized with
(f.e. for use with ```ldap_bind```) you can do that as well:

```php
$plaintextPassword = $password->getPlainTextPasswordAndYesIKnowWhatIAmDoingHere();
```


====================== GIT HISTORY: ======================
27c51ba HEAD@{0}: clone: from https://github.com/heiglandreas/password
commit 27c51baa2a118361c97db9e817cd9e74c32a8ad3
Merge: 24cd708 23a3846
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Fri Nov 20 17:55:58 2020 +0100

    Merge pull request #4 from heiglandreas/fixIssues
    
    Add more info to README

commit 23a3846c358eeaa2d2bb735e70d1c74d72d54a81
Author: Andreas Heigl <andreas@heigl.org>
Date:   Fri Nov 20 14:48:37 2020 +0100

    Fix Tests

commit 7ea898d5ed830f0c5f079bc42fb25687821d9531
Author: Andreas Heigl <andreas@heigl.org>
Date:   Fri Nov 20 13:47:48 2020 +0100

    Fix composer install for actions

commit 76592ca0b22939108bfd26aa8c897f01a3748553
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Fri Nov 20 13:42:06 2020 +0100

    Update actions.yml

commit 280ebf03332dd1bcf64a48aa930405787e377ba6
Author: Andreas Heigl <andreas@heigl.org>
Date:   Fri Nov 20 13:39:08 2020 +0100

    Add github-action

commit 6c7235fee7b599d6a3df71e294aaed53857493d6
Author: Andreas Heigl <andreas@heigl.org>
Date:   Fri Nov 20 09:04:02 2020 +0100

    Add more info to README
    
    Additional some minor fixes

commit 24cd7088835196c53b5b07170fea9cf3d85d6195
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Fri Mar 22 10:29:20 2019 +0100

    Update tests to include PHP 7.3

commit 4c1ecd25711cc9a0038697c9b257cb9d23baaf54
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Fri Mar 22 10:28:09 2019 +0100

    Update Links and usage-example

commit 6596da3c3ff26f748e5f2fd4bcf7cf698944fb8f
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Thu Mar 21 19:00:17 2019 +0100

    Add info aboit facebook password leak

commit 3205bca1928a45b6c362e7bd7e777579a56951ed
Author: Andreas Heigl <andreas@heigl.org>
Date:   Tue May 8 08:09:08 2018 +0200

    Fix travis failure

commit a2114259cd849cc0bca87cef05fcc4df59214074
Author: Andreas Heigl <andreas@heigl.org>
Date:   Tue May 8 07:51:38 2018 +0200

    Fix travis failure

commit c00edc72f1ab7a9d6af0d087e6fa9cbe6a1c9466
Author: Andreas Heigl <andreas@heigl.org>
Date:   Tue May 8 07:37:19 2018 +0200

    Fix travis failure

commit 968768d4c66ef72bedd0446c2cea3d15d36837a6
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 21:47:16 2018 +0200

    Add new Test

commit 1a2315e85943dbadf984351d0a63eb0b62bde78b
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 21:34:38 2018 +0200

    Add minor fixes

commit 7bb9cad17e1f26f0d844eb4689d1decb3733fb38
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 21:19:36 2018 +0200

    Update composer.json

commit 5fd0f59341763a0633913f2e3bec4fff66c15832
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 21:03:21 2018 +0200

    Add more code

commit 6f4fa3e550995eb05ea0170540f701b05834465d
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 20:25:59 2018 +0200

    Add more code

commit 7d5105f74fbd797a8836b559ebddbb759a599986
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 18:42:39 2018 +0200

    Add a description of what happens under the hood

commit e6a46b1d2bd1b4488a02281036cbee81ae0be74b
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 18:34:55 2018 +0200

    Store password only encrypted
    
    That way it will not be possible to get the cleartext-password
    accidentally even with hardcore means of Reflection-API or Closure-bind
    
    All passwords within one thread will use the same nonce and key but
    that's still better than having the password in cleartext or the nonce
    and the key stored together with the encrypted password.

commit 77de677729e02f0940a46883507a95076bc3e2c1
Author: Andreas Heigl <andreas@heigl.org>
Date:   Mon May 7 16:50:12 2018 +0200

    Fix a test

commit f8107009fdc8041cfa5002883eb6e07121789b29
Merge: 8103240 55faf0a
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Mon May 7 15:01:49 2018 +0200

    Merge pull request #3 from aboks/debuginfo
    
    Prevent leaking password through var_dump or print_r

commit 810324060189de62c2c6decb462b717290a217bc
Merge: 09f65e4 6e22ef2
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Mon May 7 14:59:02 2018 +0200

    Merge pull request #2 from aboks/fix-failing-tests
    
    Fix failing tests

commit 55faf0a0a19054ac920e3fbc5a005a00b3038915
Author: Arnout Boks <arnoutboks@gmail.com>
Date:   Mon May 7 14:51:17 2018 +0200

    Prevent leaking password through var_dump or print_r
    
    By overriding the __debugInfo magic method, exposure of the plaintext
    password through a var_dump or print_r call can be prevented.
    
    http://php.net/manual/en/language.oop5.magic.php#object.debuginfo

commit 6e22ef25064e948d39b49f4391815d452ca07312
Author: Arnout Boks <arnoutboks@gmail.com>
Date:   Mon May 7 14:41:35 2018 +0200

    Fix failing tests
    
    * PHPUnit 7.1 only has namespaced testcase class
    * Mismatch in number of '*' between implementation and test
    * Typo in test value
    * Suppress warning, separately test for it being triggered

commit 09f65e43662ca99cdc0789f78090cc00ec9b86c5
Merge: 21e18ee a2c8f55
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Sun May 6 22:30:40 2018 +0200

    Merge pull request #1 from shochdoerfer/patch-1
    
    Fix typos

commit a2c8f5567822ac611868b9e168b8e802106ca5a2
Author: Stephan Hochdörfer <S.Hochdoerfer@bitExpert.de>
Date:   Sun May 6 13:49:45 2018 +0200

    Fix typos

commit 21e18eeef84eb2e0711b120e4536cc574204de7d
Author: Andreas Heigl <andreas@heigl.org>
Date:   Sun May 6 10:35:09 2018 +0200

    Add first working commit

commit 3dd63967478f7d5bef8da2bd6ccd73893ccc653d
Author: Andreas Heigl <heiglandreas@users.noreply.github.com>
Date:   Sun May 6 09:45:25 2018 +0200

    Initial commit
