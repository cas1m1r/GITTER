======================: FILES :======================
======================: BRANCHES :======================
======================: LOGINFO :======================
commit 4b29a4b75ecf1bda6325d744c44745e77eefddab
Author: Michael <gbps@ctf.re>
Date:   Sat Dec 8 11:10:01 2018 -0500

    Added parens to match code style

commit 2d40258b129a77f6537f64f60a39a1f2b60ecd56
Author: Michael <gbps@ctf.re>
Date:   Thu Dec 6 19:23:07 2018 -0500

    Fixed off-by-one edge case in memory type assignment

commit 0275e1e184bcf16314fcf789ddb16f0539440ec3
Merge: 0ed192a 3581425
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Mon Aug 13 15:00:50 2018 +0100

    Merge pull request #32 from wbenny/master
    
    Remove VM_EXIT_ACK_INTR_ON_EXIT flag and fix BSOD

commit 3581425b5bed4905db4460cd3ee1f4897d0d5cad
Author: Petr Benes <w.benny@outlook.com>
Date:   Sat Aug 4 16:32:18 2018 +0200

    Fix BSOD on shutdown when DriverEntry fails
    
    The registered power callback needs to be unregistered when ShvLoad happens to fail, as DriverUnload is not called when DriverEntry does not succeed.
    Code before patch allowed to create a situation, where ShvLoad in DriverEntry failed, which resulted in the leak of PowerCallback, which - on machine shutdown/reboot - resulted in critical pagefault in the area of the unloaded driver and the system went blue.

commit a2efa4b6c0e9191afe4b3d164941db8fa7b1f337
Author: Parallel Xenoexcite <w.benny@outlook.com>
Date:   Fri Aug 3 08:45:52 2018 +0200

    Remove unnecessary VM_EXIT_ACK_INTR_ON_EXIT flag
    
    Setting VM_EXIT_ACK_INTR_ON_EXIT makes sense only when PIN_BASED_EXT_INTR is set (see Intel Manual Vol3C[24.7.1(VM-Exit Controls)]).

commit 0ed192a566df15476f329b6adc4d638e65d4ea5c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Wed Jan 3 20:35:50 2018 -0800

    Update README.md

commit 2454d8417201c5f59f48dd6daeabd65dcdc0c52b
Merge: 0267295 333dcf9
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Tue Dec 12 14:59:47 2017 -0500

    Merge pull request #24 from tandasat/support-invpcid
    
    Fix bugcheck on Windows 10 RS4

commit 02672951d97f44958316ba52903442590bf43659
Merge: a2aafc3 d9a3aa6
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Tue Dec 12 14:59:18 2017 -0500

    Merge pull request #25 from tandasat/fix-warnings-and-typo
    
    Fix code analysis warnings and typo

commit d9a3aa6fb8f77434f1ecfbc9127d28067a2cc9b8
Author: Satoshi Tanda <tanda.sat@gmail.com>
Date:   Sat Nov 25 20:06:57 2017 -0800

    Fix code analysis warnings and typo
    
    This change fixes warnings seen with code analysis on VS2017 and
    typo. Also, excludes a .VC.db file.

commit 333dcf9187b87c8979d749cc0316ae877be5c651
Author: Satoshi Tanda <tanda.sat@gmail.com>
Date:   Sat Nov 25 19:54:55 2017 -0800

    Fix bugcheck on Windows 10 RS4
    
    Windows 10 RS4 uses the invpcid instruction. This instruction is
    disabled by the hypervisor, and execution of it causes #UD, which
    triggers bugcheck.
    
    This change is to allow the kernel to execute the instruction.

commit a2aafc35b86f8e17080f66d3137998359cfaea38
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Nov 6 20:22:52 2017 -0800

    Fix UEFI issues -- SimpleVisor now works on UEFI MP systems.
    
    1) On failures after vmxon, but before vmxlaunch, make sure to vmxoff.
    2) On failure to initialize hypervisor, don't return SHV_STATUS_SUCCESS
    ultimately. This was going to get caught later by the hypervisor CPUID
    bit not being present, but this helps debugging.
    3) Hypervisor should be an EFI driver (and runtime driver actually somee
    day), not EFI application
    4) Fix ShvOsFreeContiguousAlignedMemory to use pages, not bytes.

commit 23f7da3a3cd78a54c51cb53a8246e8e553cac6c7
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Nov 6 06:47:45 2017 -0800

    Fix Issue #20
    
    Use EFI_SIZE_TO_PAGES to fix issue #20

commit a44424d9a8e8756d1deeb8fdb8dc6aeef99b5d57
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Nov 6 06:36:23 2017 -0800

    Properly support building for UEFI vs NT with VisualUefi
    
    Refactor all project files/settings to support dual build. User should
    set EDK_PATH to their checked out copy of VisualUefi.

commit 6ca25d46717cdce217cc2cea1cc49a05a102deac
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Sat Mar 25 09:52:29 2017 -0700

    Add power-state callback to handle sleep/hibernate/resume correctly.
    
    The hypervisor unloads on S0->Sx transitions, and loads back on Sx->S0
    transitions.

commit 348c552266f89ac5ad2bbf0bf1f8bc449d7b207d
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Sat Mar 25 09:51:56 2017 -0700

    Fix bug on unload when no hypervisor loaded. CPUID still returns valid data when leaf is invalid!
    
    To address this, return a magic value in RCX so we can be sure that
    RAX:RBX are trustworthy and contain VP_DATA.

commit 64f9ae2254c10bdc984e52a34c74af7b65d662b0
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Sat Mar 25 07:46:17 2017 -0700

    Use 2MB pages. It's only a few more lines of code and avoids the perf costs of 1GB UC regions.
    
    Also has the benefit of allowing this to run on VMWare systems now.

commit 9891d1048fc6e08b3d2b5929c6def43f7112698f
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Mar 20 09:01:36 2017 -0700

    Re-enable EPT support, with correct parsing of MTRR registers to respect caching properties.

commit e538c4b6fd8bb9587cddbc34263b03fb9a241322
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Mar 20 09:00:53 2017 -0700

    Update EPT structure definitions and add MTRR structure definitions.

commit 50a9f74a86cac9863c8c59cd282c767392cbdc1a
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Mar 20 08:59:56 2017 -0700

    Fix ShvOsDebugPrint (at least on Windows).

commit d2894e306403cb00428c6c1fd943ebeee0118f4c
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Wed Mar 15 08:34:06 2017 -0700

    Final RS2 Fix and Disable EPTs -- WHEA errors on some systems.

commit da15fb2990add069c6a659b4248122b46b09f4a4
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Tue Mar 14 20:13:17 2017 -0700

    Cleanup source

commit 57b0e633538b67e03804caffb5d8c59227c68adf
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Tue Mar 14 18:52:49 2017 -0700

    WIP: Redstone 2 fix

commit 42dc94556b1e396251508989ed7168a7f219ade5
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Tue Mar 14 13:42:02 2017 -0700

    EDK-II Build File
    
    Thanks to d_olex / Dmytro Oleksiuk

commit 6a777f8fdff63c99a4cab6b1b28c2cb28714a1f5
Merge: a597172 b1f6461
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sun Oct 30 13:46:33 2016 -0700

    Merge pull request #15 from saaramar/patch-1
    
    Fix memory leak in shvvp.c

commit b1f6461c0c212f8e82aeacbfd5ba44b2a3be38e4
Author: Saar Amar <saaramar5@gmail.com>
Date:   Sun Oct 30 13:07:27 2016 -0700

    Fix memory leak in ShvVpLoadCallback

commit dfdb01a1a9697a6a48fae9ea17fdc0c59585728c
Author: Saar Amar <saaramar5@gmail.com>
Date:   Wed Oct 26 20:07:43 2016 -0700

    Fix memory leak in ShvVpLoadCallback

commit 944df2f9c0269dbac75eaec0ba260053a7788ea8
Author: Saar Amar <saaramar5@gmail.com>
Date:   Mon Oct 24 15:30:57 2016 -0700

    Update shvvp.c
    
    Fix memory leak in ShvVpLoadCallback. There is a flow (when ShvVpInitialize is failed) that the per-processor data is not freed before the goto Failure and return. Of-course, we can't free it in the Failure, since we need to distinguish between different flows of failures (fail to allocate, fail to initialize, hypervisor not present) So just keep freeing it anytime we fail for some reason (just as when our hypervisor is not present on line 275).
    Thanks :)

commit a5971726bc6a25aea9f5fc8c336e2c1516e900f5
Merge: 99fa8fe 3a9f54d
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Oct 20 17:13:49 2016 +0100

    Merge pull request #13 from saaramar/patch-1
    
    Update shvos.c

commit 3a9f54d5e57a7817d68546a541848221a94938f0
Author: Saar Amar <saaramar5@gmail.com>
Date:   Thu Oct 20 03:37:12 2016 -0700

    Update shvos.c
    
    In ShvVpInitialize, there is a branch checking for SHV_STATUS_SUCCESS, added in one of the commits supporting UEFI (f5dd1af).
    If you want to share code between nt and uefi, the nt version of ShvOsPrepareProcessor should return SHV_STATUS_SUCCESS in default flow :)

commit 99fa8feda896c7ed19ffb74a2b167345b9d8570e
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Oct 15 22:01:16 2016 +0200

    Update README.md

commit 47cdda477e42c7a6ac227513225b58b6260ae153
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Oct 15 21:59:59 2016 +0200

    Update README.md

commit 98af3a870a27d66e820379056ea09153ef823332
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 09:12:39 2016 -0700

    Officially add support for UEFI: Uefisor!
    
    Documentation to follow.

commit f5dd1af02f22e2caf564dea4705bce2d42167061
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 09:05:42 2016 -0700

    Last fixes. Now builds/works in UEFI with a shared code base.

commit dfd4909816fc06841cffc86d1c2170e5cd68bfbd
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:57:31 2016 -0700

    Invert files... idiot.

commit 0903433af27e842c6d7c73874cb340ae5c44db5d
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:56:25 2016 -0700

    Reflect this is non-portable.

commit a0ec38ceb9fccc6f91ac7c194be65d16c115d157
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:55:08 2016 -0700

    Final factoring -- separate portable from non-portable ASM code.

commit 84c5f91b4c2c86438dfa703f514c5dbf05eddf03
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:50:58 2016 -0700

    Support VMWARE/non-EPT sytems. More portability support with non-NT systems.  Refactoring. Reject NULL/LDT selectors when building VMCS.
    
    Support systems without 1GB HugePage EPT support (such as Vmware) by
    simply not enabling EPT for the.
    Refactor header files and some definitions again to support non-NT.
    Deallocation routines on some platform need to have a size. Refactor
    alloc and free so this is easy to maintain portably.
    Make ShvVmxLaunchOnVpreturn a status code instead of VOID, so we can
    actually know if launch failed instead of just relying on CPUID (which,
    if the hypervisor was already loaded, misidentified that a second load
    failed, and instead assumed success).
    Refactor the launch/off-on-failure code into a ShvVmxLaunch routine.
    Fix some comments to reflect the new portability layer/refactoring.
    Factor out OS-specific load/unload logic
    (ShvOsPrepareProcessor/ShvOsUnprepareProcessor)
    Fix ShvUtilConvertGdtEntry to reject selectors with the TI bit set, or
    NULL selectors, and correctly mark them as unusable.

commit d580e2e5b8bac8b814927242ce773f366db62fde
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 15:06:08 2016 -0700

    More portability.
    
    Fix the last few stragglers.

commit d9177eedf1993573e06f36beb41455ac36a76d42
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 14:44:21 2016 -0700

    Fix sign extension bug.

commit 00b06d061bd8c60e99e1b4f52c95e918ef2181b9
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 14:25:06 2016 -0700

    Fix bug not correctly translating success back.

commit c246a1affa2cfb42722dd2869cdd742a5eb2a574
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 14:07:03 2016 -0700

    A few more OS layer separations. Fix unload bug when SimpleVisor is not present.
    
    If SimpleVisor got unloaded, __cpuidex might not return valid data in
    EAX:EBX. Handle this case.

commit 2bc0a27d447902930ed725269a35a96a3d32f562
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 13:51:13 2016 -0700

    Move to what should be much more portable types. Fix straggler NT-specific APIs.
    
    SimpleVisor no longer builds with NT headers -- instead, ntint.h
    provides the necessary NT"isms" and compiler definitions.
    Create a bridge header (shv_x.h) between the OS layer and SimpleVisor
    layer.
    ShvOs.c builds with the NT Headers, and don't use ntint.h, importing
    only shv_x.h

commit f35f5b35bf3dfda2b65b92ccf47a2e7953351563
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 10:49:52 2016 -0700

    Separate Hypervisor Core from OS Layer. Don't touch IRQL in Hypervisor. Separate Load vs Unload callback. Misc. portability fixes.
    
    Create a layer of OS-specific functions to handle the various
    requirements around memory allocation, context save/restore,
    entrypoint/unloadpoint, and multi-CPU execution and topology
    information. SimpleVisor no longer uses NT-specific functions (some
    structures and types still remain).
    Additionally, the hypervisor should not know that "NT" is running
    underneath, so it has no business touching the IRQL. As we won't call
    Windows functions, and as interrupts are disabled, this doesn't 'change'
    anything and is correct.
    Don't use the same callback for load and unload. We can make unload its
    own callback now, as we've separated out the DPC-specific logic. This
    makes the load callback cleaner as well.
    Remove NT_ASSERTS which don't work anyway, and use portable
    definitions/types when possible (more to do here).
    Return the failed CPU and status in all cases during load. Sometimes
    this wasn't done before.

commit dd64f6a1cdc6d7a396d0e9c9fd2f875685effb37
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 23:24:11 2016 -0700

    Remove debug print

commit e26207398fbaf6e502724e15dbd3c48ab6e6cbe5
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 23:21:25 2016 -0700

    When unloading the hypervisor on each core, returnt he VP Data structure
    
    This allows us to now free the data for each processor, by returning its
    pointer through the CPUID interface.

commit aef226a992149007c513e8bbcb4dc2e7b73cc7b9
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 23:20:28 2016 -0700

    Fix bug which was causing us to return with hypervisor's RFLAGS
    
    This led to interrupts being disabled inside of ShvVpUninitialize, which
    is why when calling MmFreeContigousMemory, we were sometimes getting
    hangs, if a TLB flush had to be performed (IPI would not be delivered).
    Correct restore RFLAGS back to correct guest state.

commit 34472d9045d16280c9a4502ac83b383d75b7f740
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 22:43:50 2016 -0700

    Death to global data!
    
    Each routine knew exactly how to get its VP Data except the
    post-launch-guest-resumer. We now run it on the hypervisor stack (which
    shouldn't matter -- because it uses no stack variables other than the
    home space), which means it can essentially "containing record" its VP
    data based on it.

commit 20e2c570c3c5ca080143fb49c2d340a66d494e04
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 22:27:03 2016 -0700

    Uee nice define.

commit bc631c7fb0eaf31069e5439030aa4c2e833ca90e
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 22:25:23 2016 -0700

    Continue WIP VP data cleanup.
    
    We no longer need the VmxEnabled flag and confusing logic around it.

commit 75ed51f8f7f8d2b29b1407515d1f0a633a4c0482
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 21:56:18 2016 -0700

    WIP Cleaner way to launch.

commit 77fb2e9985648546e3f6824f6a2b8b75f1b82586
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 21:54:49 2016 -0700

    Fix race condition and support >64 LP. Don't free data on unload.
    
    Freeing the data on unload seems to cause a hang. WIP investigation.
    The old way we OR'ed the InitMask was both prone to racing and causing
    incorrect failure codes, as well as was limited by 64 processors.

commit 42798f3de13f237c75bcea5608ec69139de516bc
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 20:20:17 2016 -0700

    Simplify access to VP_DATA in the hypervisor, save 4KB per CPU.
    
    Some of the fields used during CPU initialization are never needed
    later, so put them in a union with the hypervisor stack. Additionally,
    by putting the hypervisor stack at the beginning of the VP Data, we can
    retrieve it without calling a kernel function.

commit 0a7f4aed4db944cb8b8d3c468a303538120f53aa
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 20:09:30 2016 -0700

    Fix regression

commit 3b0428646368e7a38312d7e11a64a7e0c9e960aa
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:58:08 2016 -0700

    WIP

commit ed0c96469bc818a47b85ab391b409e5c5f13839e
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:57:39 2016 -0700

    WIP Cleanup VP Data

commit c4b296c5bd3fd293853694de6b32a0a906c48283
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:35:43 2016 -0700

    Fix a silly bug
    
    Computed the mask incorrectly for success case.

commit cac433f845c1713b83f78fa5b6a0bdbcafd8fe37
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:31:52 2016 -0700

    Use per-processor data. Track per-processor initialization state.
    
    Each processor now allocates its own node-local memory, instead of
    relying on a single global array on an arbitrary node. This should help
    performance on NUMA system.
    Additionally, each processor now checks its own VMX status, and reports
    back its unique VMX initialization, isntead of assuming all CPUs
    initialized or all failed. A mask is used to report which CPUs did not
    initialize, and a failure status can now be returned.

commit 66119bfbf70b9c8270d55a83939c9dee79fdfda6
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 13:26:37 2016 -0700

    Get rid of global data -- all data is now per-processor
    
    The MSR Bitmap and EPML4/EPDPTEs were allocated globally, with each LP's
    VMCS pointing to the same physical address. Make things simpler and more
    efficient (especially if we take advantage of NUMA) by giving each
    LP/VMCS its own MSR Bitmap and EPT structures. The intent here is not to
    de-synchronize this data, as we have no exits which would cause either
    of these structures to change and require synchronization.

commit bbc18f49a677f7e452c14cf614bace6131411c5b
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 13:07:25 2016 -0700

    Fix SimpleVisor to work on VMWare, stop using KeSaveStateForHibernate and misc. cleanups
    
    SimpleVisor was previously using the presence of *ANY* hypervisor as a
    sign that it is already loaded. This breaks if the loaded hypervisor
    actually supports nesting and/or isn't SimpleVisor. As such, always try
    to enable SimpleVisor -- ShvVmxProbe will fail if we can't, and detect
    SimpleVisor explicitly using the Hyper-V Detection Interface (used by
    all hypervisors these days).
    
    Second, stop using KeSaveStateForHibernate. While it saved us the need
    for two more assembly instructions (str/sldt), it appears to have bugs
    around handling of DebugControl, on top of the other bugs we already had
    to work around. Instead, just use compiler instrincs to grab the
    required state, which is faster anyway.
    
    Move Intel VT-x specific structures into vmx.h instead of shv.h

commit 16b6c8ffe1beb92e250f3f094b89ce97a0f3a94a
Author: Alex Ionescu <alex@crowdstrike.com>
Date:   Fri Aug 26 14:06:52 2016 -0700

    Update README.MD

commit 574bfb56c91b0e780223b5a6ecd5874754a6c4d7
Author: Alex Ionescu <alex@crowdstrike.com>
Date:   Fri Aug 26 13:57:00 2016 -0700

    Add VPID support
    
    Give each CPU the same VPID as they are sharing the same physical
    address space.

commit fd1d7e043a24fd4afd72dc5f040d04475f9e5acd
Author: Alex Ionescu <alex@crowdstrike.com>
Date:   Fri Aug 26 13:53:20 2016 -0700

    Add EPT Support
    
    Create 1:1 512GB hugepage mappings with EPT enabled.

commit 5ed95527bf8dbfda4b783811acafcf3739940ac0
Merge: ee1c889 e60dc9a
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Wed May 18 18:15:21 2016 +0200

    Merge pull request #11 from tezeb/patch-1
    
    Fix Joanna's name

commit e60dc9aac69891bacc3719d75d50b5df3cfdbc3f
Author: tezeb <tezeb@users.noreply.github.com>
Date:   Mon May 16 17:45:19 2016 +0200

    Her name is Joanna

commit ee1c889658c408508251c25eaf2aca8277fc4c18
Merge: 43383d7 3d2c0da
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sun Apr 17 14:37:14 2016 -0700

    Merge pull request #9 from jtsylve/ionescu007-PR
    
    Fixed link to MoRE project in documentation

commit 3d2c0da367295fa3e1c424be7e81122e9448849f
Author: Joe Sylve <joe.sylve@gmail.com>
Date:   Sat Apr 16 21:45:58 2016 -0500

    Fixed another documentation link

commit ff0b5f4fa14a14582597b42fcf0eb8eba0029abc
Author: Joe Sylve <joe.sylve@gmail.com>
Date:   Sat Apr 16 17:20:01 2016 -0500

    Fixed link to MoRE project in documentation

commit 43383d780a7fead017c5c0dd47fde1fcebbbd1d5
Merge: fd34922 4d68009
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Fri Apr 15 07:50:09 2016 -0700

    Merge pull request #7 from jtsylve/ionescu007-issue5
    
    Remove read from MSR_IA32_VMX_VMFUNC

commit 4d680097ccaf564d0778feffefd960d8dbb913c6
Author: Joe Sylve <joe.sylve@gmail.com>
Date:   Tue Apr 12 23:51:29 2016 -0500

    Adjusted the MsrData in order to avoid reading from the MSR_IA32_VMX_VMFUNC MSR, which is not available on processors before Haswell.  This MSR was not referenced in this project anyway.

commit fd34922d68259a9a0a56054d92a7c5e2ca86e765
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Mar 19 14:02:28 2016 -0700

    Update README.md

commit 382a91f22694dbb7ccf14f0d42f81f94bf5ec959
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Mar 19 14:01:54 2016 -0700

    Update README.md

commit d606663971e5cb0222d021a96587462c0ba8d132
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Mar 19 13:57:31 2016 -0700

    Fixes for issue #2 and #3
    
    Also build PDB

commit 4ed2e078e5e6640f8e6a80c107c2c7f3cd7d67f8
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 20:04:17 2016 -0700

    Update README.md

commit dc673e4f003c70d1fbe5155324fcfa2c10181ed0
Merge: 20a12bb 97a0c42
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:44:01 2016 -0700

    Merge pull request #1 from zachriggle/master
    
    Fix some spelling mistakes

commit 20a12bb0ce058da9f87d48fc6d4385d2e954a15c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:41:03 2016 -0700

    Update README.md

commit 2676c9b3f3c1cdc122fd6c521bfe28623b58577d
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:35:55 2016 -0700

    Update README.md

commit 87f0afe16682fdd75206e412d6128dfda3b0ff4c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:34:41 2016 -0700

    Update README.md

commit 97a0c42d9535de36d4796587e792c06c3344c44b
Author: Zach Riggle <riggle@google.com>
Date:   Thu Mar 17 15:02:25 2016 -0400

    Speling

commit a716fa320cf9413a59001a69f09c92ad91e2272c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 07:43:17 2016 -0700

    Update README.md

commit be9f7376e69445e5b02ade8b72574a138114efd3
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 22:56:55 2016 -0700

    Update README.md

commit 74b769e0230c9bf87aba0b76d463a3efd941e175
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 22:55:45 2016 -0700

    Update README.md

commit 77b45ab829ec2bcad02440f5abfdb570e5582658
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 22:53:06 2016 -0700

    Final round of cleanups

commit cae69b02e1d3fe7e569a7c898ff2e1ed95941a4f
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:51:52 2016 -0700

    Update README.md

commit a9234ac00ff6cc6eccc6a1e42997e9c06e65f388
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:42:59 2016 -0700

    Update README.md

commit 1b22bbf40ecf7fefff14f1967c8e5f8524291fe3
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:37:47 2016 -0700

    Update README.md

commit 6c7bccdc4ac6153b3f161797d498f4fcd04575ce
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:36:45 2016 -0700

    Update README.md

commit f1d07f5195e23a2e9ba79c3c99e6adda5481a978
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:30:40 2016 -0700

    Update README.md

commit 568339066664de41afd8844e6bd90ae05f33d09a
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:30:14 2016 -0700

    Update README.md

commit 09ca259b6e54650f21566cd3dd7ef2cb0916d7e0
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:27:55 2016 -0700

    Update README.md

commit 5fd1a064e4abedc1cde13db87bb857da6a8e786f
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 16:23:30 2016 -0700

    Continued cleanup

commit 468dd0f4f8cc429eb930d532d8c0e7c5bcaeec08
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 15:26:35 2016 -0700

    Continued cleanups

commit 4478976173a68f5b227580f9c617bb62c975da83
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 15:15:00 2016 -0700

    First round of cleanup
    
    Begin refactoring and commenting efforts.

commit 64bc6768a191fcea6b7aacd009a6280526b2862e
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 09:32:51 2016 -0700

    Create README.MD

commit ce26ff62497136c0858a2e2ee492b399dee3ae7c
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 09:30:21 2016 -0700

    Initial check-in
    
    SimpleVisor initial check-in. Tested on Windows 8.1 on Haswell, Windows
    10 TH2 on Skylake, Windows 10 RS1 on Sandy Bridge. Comments & readme to
    follow.

commit fce6895c5e705ff659d5a2271b02931238f89843
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 09:28:12 2016 -0700

    :confetti_ball: Added .gitattributes
======================: FILES :======================
======================: BRANCHES :======================
======================: LOGINFO :======================
commit 4b29a4b75ecf1bda6325d744c44745e77eefddab
Author: Michael <gbps@ctf.re>
Date:   Sat Dec 8 11:10:01 2018 -0500

    Added parens to match code style

commit 2d40258b129a77f6537f64f60a39a1f2b60ecd56
Author: Michael <gbps@ctf.re>
Date:   Thu Dec 6 19:23:07 2018 -0500

    Fixed off-by-one edge case in memory type assignment

commit 0275e1e184bcf16314fcf789ddb16f0539440ec3
Merge: 0ed192a 3581425
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Mon Aug 13 15:00:50 2018 +0100

    Merge pull request #32 from wbenny/master
    
    Remove VM_EXIT_ACK_INTR_ON_EXIT flag and fix BSOD

commit 3581425b5bed4905db4460cd3ee1f4897d0d5cad
Author: Petr Benes <w.benny@outlook.com>
Date:   Sat Aug 4 16:32:18 2018 +0200

    Fix BSOD on shutdown when DriverEntry fails
    
    The registered power callback needs to be unregistered when ShvLoad happens to fail, as DriverUnload is not called when DriverEntry does not succeed.
    Code before patch allowed to create a situation, where ShvLoad in DriverEntry failed, which resulted in the leak of PowerCallback, which - on machine shutdown/reboot - resulted in critical pagefault in the area of the unloaded driver and the system went blue.

commit a2efa4b6c0e9191afe4b3d164941db8fa7b1f337
Author: Parallel Xenoexcite <w.benny@outlook.com>
Date:   Fri Aug 3 08:45:52 2018 +0200

    Remove unnecessary VM_EXIT_ACK_INTR_ON_EXIT flag
    
    Setting VM_EXIT_ACK_INTR_ON_EXIT makes sense only when PIN_BASED_EXT_INTR is set (see Intel Manual Vol3C[24.7.1(VM-Exit Controls)]).

commit 0ed192a566df15476f329b6adc4d638e65d4ea5c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Wed Jan 3 20:35:50 2018 -0800

    Update README.md

commit 2454d8417201c5f59f48dd6daeabd65dcdc0c52b
Merge: 0267295 333dcf9
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Tue Dec 12 14:59:47 2017 -0500

    Merge pull request #24 from tandasat/support-invpcid
    
    Fix bugcheck on Windows 10 RS4

commit 02672951d97f44958316ba52903442590bf43659
Merge: a2aafc3 d9a3aa6
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Tue Dec 12 14:59:18 2017 -0500

    Merge pull request #25 from tandasat/fix-warnings-and-typo
    
    Fix code analysis warnings and typo

commit d9a3aa6fb8f77434f1ecfbc9127d28067a2cc9b8
Author: Satoshi Tanda <tanda.sat@gmail.com>
Date:   Sat Nov 25 20:06:57 2017 -0800

    Fix code analysis warnings and typo
    
    This change fixes warnings seen with code analysis on VS2017 and
    typo. Also, excludes a .VC.db file.

commit 333dcf9187b87c8979d749cc0316ae877be5c651
Author: Satoshi Tanda <tanda.sat@gmail.com>
Date:   Sat Nov 25 19:54:55 2017 -0800

    Fix bugcheck on Windows 10 RS4
    
    Windows 10 RS4 uses the invpcid instruction. This instruction is
    disabled by the hypervisor, and execution of it causes #UD, which
    triggers bugcheck.
    
    This change is to allow the kernel to execute the instruction.

commit a2aafc35b86f8e17080f66d3137998359cfaea38
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Nov 6 20:22:52 2017 -0800

    Fix UEFI issues -- SimpleVisor now works on UEFI MP systems.
    
    1) On failures after vmxon, but before vmxlaunch, make sure to vmxoff.
    2) On failure to initialize hypervisor, don't return SHV_STATUS_SUCCESS
    ultimately. This was going to get caught later by the hypervisor CPUID
    bit not being present, but this helps debugging.
    3) Hypervisor should be an EFI driver (and runtime driver actually somee
    day), not EFI application
    4) Fix ShvOsFreeContiguousAlignedMemory to use pages, not bytes.

commit 23f7da3a3cd78a54c51cb53a8246e8e553cac6c7
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Nov 6 06:47:45 2017 -0800

    Fix Issue #20
    
    Use EFI_SIZE_TO_PAGES to fix issue #20

commit a44424d9a8e8756d1deeb8fdb8dc6aeef99b5d57
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Nov 6 06:36:23 2017 -0800

    Properly support building for UEFI vs NT with VisualUefi
    
    Refactor all project files/settings to support dual build. User should
    set EDK_PATH to their checked out copy of VisualUefi.

commit 6ca25d46717cdce217cc2cea1cc49a05a102deac
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Sat Mar 25 09:52:29 2017 -0700

    Add power-state callback to handle sleep/hibernate/resume correctly.
    
    The hypervisor unloads on S0->Sx transitions, and loads back on Sx->S0
    transitions.

commit 348c552266f89ac5ad2bbf0bf1f8bc449d7b207d
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Sat Mar 25 09:51:56 2017 -0700

    Fix bug on unload when no hypervisor loaded. CPUID still returns valid data when leaf is invalid!
    
    To address this, return a magic value in RCX so we can be sure that
    RAX:RBX are trustworthy and contain VP_DATA.

commit 64f9ae2254c10bdc984e52a34c74af7b65d662b0
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Sat Mar 25 07:46:17 2017 -0700

    Use 2MB pages. It's only a few more lines of code and avoids the perf costs of 1GB UC regions.
    
    Also has the benefit of allowing this to run on VMWare systems now.

commit 9891d1048fc6e08b3d2b5929c6def43f7112698f
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Mar 20 09:01:36 2017 -0700

    Re-enable EPT support, with correct parsing of MTRR registers to respect caching properties.

commit e538c4b6fd8bb9587cddbc34263b03fb9a241322
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Mar 20 09:00:53 2017 -0700

    Update EPT structure definitions and add MTRR structure definitions.

commit 50a9f74a86cac9863c8c59cd282c767392cbdc1a
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Mon Mar 20 08:59:56 2017 -0700

    Fix ShvOsDebugPrint (at least on Windows).

commit d2894e306403cb00428c6c1fd943ebeee0118f4c
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Wed Mar 15 08:34:06 2017 -0700

    Final RS2 Fix and Disable EPTs -- WHEA errors on some systems.

commit da15fb2990add069c6a659b4248122b46b09f4a4
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Tue Mar 14 20:13:17 2017 -0700

    Cleanup source

commit 57b0e633538b67e03804caffb5d8c59227c68adf
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Tue Mar 14 18:52:49 2017 -0700

    WIP: Redstone 2 fix

commit 42dc94556b1e396251508989ed7168a7f219ade5
Author: Alex Ionescu <aionescu@gmail.com>
Date:   Tue Mar 14 13:42:02 2017 -0700

    EDK-II Build File
    
    Thanks to d_olex / Dmytro Oleksiuk

commit 6a777f8fdff63c99a4cab6b1b28c2cb28714a1f5
Merge: a597172 b1f6461
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sun Oct 30 13:46:33 2016 -0700

    Merge pull request #15 from saaramar/patch-1
    
    Fix memory leak in shvvp.c

commit b1f6461c0c212f8e82aeacbfd5ba44b2a3be38e4
Author: Saar Amar <saaramar5@gmail.com>
Date:   Sun Oct 30 13:07:27 2016 -0700

    Fix memory leak in ShvVpLoadCallback

commit dfdb01a1a9697a6a48fae9ea17fdc0c59585728c
Author: Saar Amar <saaramar5@gmail.com>
Date:   Wed Oct 26 20:07:43 2016 -0700

    Fix memory leak in ShvVpLoadCallback

commit 944df2f9c0269dbac75eaec0ba260053a7788ea8
Author: Saar Amar <saaramar5@gmail.com>
Date:   Mon Oct 24 15:30:57 2016 -0700

    Update shvvp.c
    
    Fix memory leak in ShvVpLoadCallback. There is a flow (when ShvVpInitialize is failed) that the per-processor data is not freed before the goto Failure and return. Of-course, we can't free it in the Failure, since we need to distinguish between different flows of failures (fail to allocate, fail to initialize, hypervisor not present) So just keep freeing it anytime we fail for some reason (just as when our hypervisor is not present on line 275).
    Thanks :)

commit a5971726bc6a25aea9f5fc8c336e2c1516e900f5
Merge: 99fa8fe 3a9f54d
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Oct 20 17:13:49 2016 +0100

    Merge pull request #13 from saaramar/patch-1
    
    Update shvos.c

commit 3a9f54d5e57a7817d68546a541848221a94938f0
Author: Saar Amar <saaramar5@gmail.com>
Date:   Thu Oct 20 03:37:12 2016 -0700

    Update shvos.c
    
    In ShvVpInitialize, there is a branch checking for SHV_STATUS_SUCCESS, added in one of the commits supporting UEFI (f5dd1af).
    If you want to share code between nt and uefi, the nt version of ShvOsPrepareProcessor should return SHV_STATUS_SUCCESS in default flow :)

commit 99fa8feda896c7ed19ffb74a2b167345b9d8570e
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Oct 15 22:01:16 2016 +0200

    Update README.md

commit 47cdda477e42c7a6ac227513225b58b6260ae153
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Oct 15 21:59:59 2016 +0200

    Update README.md

commit 98af3a870a27d66e820379056ea09153ef823332
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 09:12:39 2016 -0700

    Officially add support for UEFI: Uefisor!
    
    Documentation to follow.

commit f5dd1af02f22e2caf564dea4705bce2d42167061
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 09:05:42 2016 -0700

    Last fixes. Now builds/works in UEFI with a shared code base.

commit dfd4909816fc06841cffc86d1c2170e5cd68bfbd
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:57:31 2016 -0700

    Invert files... idiot.

commit 0903433af27e842c6d7c73874cb340ae5c44db5d
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:56:25 2016 -0700

    Reflect this is non-portable.

commit a0ec38ceb9fccc6f91ac7c194be65d16c115d157
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:55:08 2016 -0700

    Final factoring -- separate portable from non-portable ASM code.

commit 84c5f91b4c2c86438dfa703f514c5dbf05eddf03
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Sep 3 08:50:58 2016 -0700

    Support VMWARE/non-EPT sytems. More portability support with non-NT systems.  Refactoring. Reject NULL/LDT selectors when building VMCS.
    
    Support systems without 1GB HugePage EPT support (such as Vmware) by
    simply not enabling EPT for the.
    Refactor header files and some definitions again to support non-NT.
    Deallocation routines on some platform need to have a size. Refactor
    alloc and free so this is easy to maintain portably.
    Make ShvVmxLaunchOnVpreturn a status code instead of VOID, so we can
    actually know if launch failed instead of just relying on CPUID (which,
    if the hypervisor was already loaded, misidentified that a second load
    failed, and instead assumed success).
    Refactor the launch/off-on-failure code into a ShvVmxLaunch routine.
    Fix some comments to reflect the new portability layer/refactoring.
    Factor out OS-specific load/unload logic
    (ShvOsPrepareProcessor/ShvOsUnprepareProcessor)
    Fix ShvUtilConvertGdtEntry to reject selectors with the TI bit set, or
    NULL selectors, and correctly mark them as unusable.

commit d580e2e5b8bac8b814927242ce773f366db62fde
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 15:06:08 2016 -0700

    More portability.
    
    Fix the last few stragglers.

commit d9177eedf1993573e06f36beb41455ac36a76d42
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 14:44:21 2016 -0700

    Fix sign extension bug.

commit 00b06d061bd8c60e99e1b4f52c95e918ef2181b9
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 14:25:06 2016 -0700

    Fix bug not correctly translating success back.

commit c246a1affa2cfb42722dd2869cdd742a5eb2a574
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 14:07:03 2016 -0700

    A few more OS layer separations. Fix unload bug when SimpleVisor is not present.
    
    If SimpleVisor got unloaded, __cpuidex might not return valid data in
    EAX:EBX. Handle this case.

commit 2bc0a27d447902930ed725269a35a96a3d32f562
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 13:51:13 2016 -0700

    Move to what should be much more portable types. Fix straggler NT-specific APIs.
    
    SimpleVisor no longer builds with NT headers -- instead, ntint.h
    provides the necessary NT"isms" and compiler definitions.
    Create a bridge header (shv_x.h) between the OS layer and SimpleVisor
    layer.
    ShvOs.c builds with the NT Headers, and don't use ntint.h, importing
    only shv_x.h

commit f35f5b35bf3dfda2b65b92ccf47a2e7953351563
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Mon Aug 29 10:49:52 2016 -0700

    Separate Hypervisor Core from OS Layer. Don't touch IRQL in Hypervisor. Separate Load vs Unload callback. Misc. portability fixes.
    
    Create a layer of OS-specific functions to handle the various
    requirements around memory allocation, context save/restore,
    entrypoint/unloadpoint, and multi-CPU execution and topology
    information. SimpleVisor no longer uses NT-specific functions (some
    structures and types still remain).
    Additionally, the hypervisor should not know that "NT" is running
    underneath, so it has no business touching the IRQL. As we won't call
    Windows functions, and as interrupts are disabled, this doesn't 'change'
    anything and is correct.
    Don't use the same callback for load and unload. We can make unload its
    own callback now, as we've separated out the DPC-specific logic. This
    makes the load callback cleaner as well.
    Remove NT_ASSERTS which don't work anyway, and use portable
    definitions/types when possible (more to do here).
    Return the failed CPU and status in all cases during load. Sometimes
    this wasn't done before.

commit dd64f6a1cdc6d7a396d0e9c9fd2f875685effb37
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 23:24:11 2016 -0700

    Remove debug print

commit e26207398fbaf6e502724e15dbd3c48ab6e6cbe5
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 23:21:25 2016 -0700

    When unloading the hypervisor on each core, returnt he VP Data structure
    
    This allows us to now free the data for each processor, by returning its
    pointer through the CPUID interface.

commit aef226a992149007c513e8bbcb4dc2e7b73cc7b9
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 23:20:28 2016 -0700

    Fix bug which was causing us to return with hypervisor's RFLAGS
    
    This led to interrupts being disabled inside of ShvVpUninitialize, which
    is why when calling MmFreeContigousMemory, we were sometimes getting
    hangs, if a TLB flush had to be performed (IPI would not be delivered).
    Correct restore RFLAGS back to correct guest state.

commit 34472d9045d16280c9a4502ac83b383d75b7f740
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 22:43:50 2016 -0700

    Death to global data!
    
    Each routine knew exactly how to get its VP Data except the
    post-launch-guest-resumer. We now run it on the hypervisor stack (which
    shouldn't matter -- because it uses no stack variables other than the
    home space), which means it can essentially "containing record" its VP
    data based on it.

commit 20e2c570c3c5ca080143fb49c2d340a66d494e04
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 22:27:03 2016 -0700

    Uee nice define.

commit bc631c7fb0eaf31069e5439030aa4c2e833ca90e
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 22:25:23 2016 -0700

    Continue WIP VP data cleanup.
    
    We no longer need the VmxEnabled flag and confusing logic around it.

commit 75ed51f8f7f8d2b29b1407515d1f0a633a4c0482
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 21:56:18 2016 -0700

    WIP Cleaner way to launch.

commit 77fb2e9985648546e3f6824f6a2b8b75f1b82586
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 21:54:49 2016 -0700

    Fix race condition and support >64 LP. Don't free data on unload.
    
    Freeing the data on unload seems to cause a hang. WIP investigation.
    The old way we OR'ed the InitMask was both prone to racing and causing
    incorrect failure codes, as well as was limited by 64 processors.

commit 42798f3de13f237c75bcea5608ec69139de516bc
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 20:20:17 2016 -0700

    Simplify access to VP_DATA in the hypervisor, save 4KB per CPU.
    
    Some of the fields used during CPU initialization are never needed
    later, so put them in a union with the hypervisor stack. Additionally,
    by putting the hypervisor stack at the beginning of the VP Data, we can
    retrieve it without calling a kernel function.

commit 0a7f4aed4db944cb8b8d3c468a303538120f53aa
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 20:09:30 2016 -0700

    Fix regression

commit 3b0428646368e7a38312d7e11a64a7e0c9e960aa
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:58:08 2016 -0700

    WIP

commit ed0c96469bc818a47b85ab391b409e5c5f13839e
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:57:39 2016 -0700

    WIP Cleanup VP Data

commit c4b296c5bd3fd293853694de6b32a0a906c48283
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:35:43 2016 -0700

    Fix a silly bug
    
    Computed the mask incorrectly for success case.

commit cac433f845c1713b83f78fa5b6a0bdbcafd8fe37
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 19:31:52 2016 -0700

    Use per-processor data. Track per-processor initialization state.
    
    Each processor now allocates its own node-local memory, instead of
    relying on a single global array on an arbitrary node. This should help
    performance on NUMA system.
    Additionally, each processor now checks its own VMX status, and reports
    back its unique VMX initialization, isntead of assuming all CPUs
    initialized or all failed. A mask is used to report which CPUs did not
    initialize, and a failure status can now be returned.

commit 66119bfbf70b9c8270d55a83939c9dee79fdfda6
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 13:26:37 2016 -0700

    Get rid of global data -- all data is now per-processor
    
    The MSR Bitmap and EPML4/EPDPTEs were allocated globally, with each LP's
    VMCS pointing to the same physical address. Make things simpler and more
    efficient (especially if we take advantage of NUMA) by giving each
    LP/VMCS its own MSR Bitmap and EPT structures. The intent here is not to
    de-synchronize this data, as we have no exits which would cause either
    of these structures to change and require synchronization.

commit bbc18f49a677f7e452c14cf614bace6131411c5b
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sun Aug 28 13:07:25 2016 -0700

    Fix SimpleVisor to work on VMWare, stop using KeSaveStateForHibernate and misc. cleanups
    
    SimpleVisor was previously using the presence of *ANY* hypervisor as a
    sign that it is already loaded. This breaks if the loaded hypervisor
    actually supports nesting and/or isn't SimpleVisor. As such, always try
    to enable SimpleVisor -- ShvVmxProbe will fail if we can't, and detect
    SimpleVisor explicitly using the Hyper-V Detection Interface (used by
    all hypervisors these days).
    
    Second, stop using KeSaveStateForHibernate. While it saved us the need
    for two more assembly instructions (str/sldt), it appears to have bugs
    around handling of DebugControl, on top of the other bugs we already had
    to work around. Instead, just use compiler instrincs to grab the
    required state, which is faster anyway.
    
    Move Intel VT-x specific structures into vmx.h instead of shv.h

commit 16b6c8ffe1beb92e250f3f094b89ce97a0f3a94a
Author: Alex Ionescu <alex@crowdstrike.com>
Date:   Fri Aug 26 14:06:52 2016 -0700

    Update README.MD

commit 574bfb56c91b0e780223b5a6ecd5874754a6c4d7
Author: Alex Ionescu <alex@crowdstrike.com>
Date:   Fri Aug 26 13:57:00 2016 -0700

    Add VPID support
    
    Give each CPU the same VPID as they are sharing the same physical
    address space.

commit fd1d7e043a24fd4afd72dc5f040d04475f9e5acd
Author: Alex Ionescu <alex@crowdstrike.com>
Date:   Fri Aug 26 13:53:20 2016 -0700

    Add EPT Support
    
    Create 1:1 512GB hugepage mappings with EPT enabled.

commit 5ed95527bf8dbfda4b783811acafcf3739940ac0
Merge: ee1c889 e60dc9a
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Wed May 18 18:15:21 2016 +0200

    Merge pull request #11 from tezeb/patch-1
    
    Fix Joanna's name

commit e60dc9aac69891bacc3719d75d50b5df3cfdbc3f
Author: tezeb <tezeb@users.noreply.github.com>
Date:   Mon May 16 17:45:19 2016 +0200

    Her name is Joanna

commit ee1c889658c408508251c25eaf2aca8277fc4c18
Merge: 43383d7 3d2c0da
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sun Apr 17 14:37:14 2016 -0700

    Merge pull request #9 from jtsylve/ionescu007-PR
    
    Fixed link to MoRE project in documentation

commit 3d2c0da367295fa3e1c424be7e81122e9448849f
Author: Joe Sylve <joe.sylve@gmail.com>
Date:   Sat Apr 16 21:45:58 2016 -0500

    Fixed another documentation link

commit ff0b5f4fa14a14582597b42fcf0eb8eba0029abc
Author: Joe Sylve <joe.sylve@gmail.com>
Date:   Sat Apr 16 17:20:01 2016 -0500

    Fixed link to MoRE project in documentation

commit 43383d780a7fead017c5c0dd47fde1fcebbbd1d5
Merge: fd34922 4d68009
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Fri Apr 15 07:50:09 2016 -0700

    Merge pull request #7 from jtsylve/ionescu007-issue5
    
    Remove read from MSR_IA32_VMX_VMFUNC

commit 4d680097ccaf564d0778feffefd960d8dbb913c6
Author: Joe Sylve <joe.sylve@gmail.com>
Date:   Tue Apr 12 23:51:29 2016 -0500

    Adjusted the MsrData in order to avoid reading from the MSR_IA32_VMX_VMFUNC MSR, which is not available on processors before Haswell.  This MSR was not referenced in this project anyway.

commit fd34922d68259a9a0a56054d92a7c5e2ca86e765
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Mar 19 14:02:28 2016 -0700

    Update README.md

commit 382a91f22694dbb7ccf14f0d42f81f94bf5ec959
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Sat Mar 19 14:01:54 2016 -0700

    Update README.md

commit d606663971e5cb0222d021a96587462c0ba8d132
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Sat Mar 19 13:57:31 2016 -0700

    Fixes for issue #2 and #3
    
    Also build PDB

commit 4ed2e078e5e6640f8e6a80c107c2c7f3cd7d67f8
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 20:04:17 2016 -0700

    Update README.md

commit dc673e4f003c70d1fbe5155324fcfa2c10181ed0
Merge: 20a12bb 97a0c42
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:44:01 2016 -0700

    Merge pull request #1 from zachriggle/master
    
    Fix some spelling mistakes

commit 20a12bb0ce058da9f87d48fc6d4385d2e954a15c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:41:03 2016 -0700

    Update README.md

commit 2676c9b3f3c1cdc122fd6c521bfe28623b58577d
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:35:55 2016 -0700

    Update README.md

commit 87f0afe16682fdd75206e412d6128dfda3b0ff4c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 13:34:41 2016 -0700

    Update README.md

commit 97a0c42d9535de36d4796587e792c06c3344c44b
Author: Zach Riggle <riggle@google.com>
Date:   Thu Mar 17 15:02:25 2016 -0400

    Speling

commit a716fa320cf9413a59001a69f09c92ad91e2272c
Author: Alex Ionescu <ionescu007@users.noreply.github.com>
Date:   Thu Mar 17 07:43:17 2016 -0700

    Update README.md

commit be9f7376e69445e5b02ade8b72574a138114efd3
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 22:56:55 2016 -0700

    Update README.md

commit 74b769e0230c9bf87aba0b76d463a3efd941e175
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 22:55:45 2016 -0700

    Update README.md

commit 77b45ab829ec2bcad02440f5abfdb570e5582658
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 22:53:06 2016 -0700

    Final round of cleanups

commit cae69b02e1d3fe7e569a7c898ff2e1ed95941a4f
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:51:52 2016 -0700

    Update README.md

commit a9234ac00ff6cc6eccc6a1e42997e9c06e65f388
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:42:59 2016 -0700

    Update README.md

commit 1b22bbf40ecf7fefff14f1967c8e5f8524291fe3
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:37:47 2016 -0700

    Update README.md

commit 6c7bccdc4ac6153b3f161797d498f4fcd04575ce
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:36:45 2016 -0700

    Update README.md

commit f1d07f5195e23a2e9ba79c3c99e6adda5481a978
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:30:40 2016 -0700

    Update README.md

commit 568339066664de41afd8844e6bd90ae05f33d09a
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:30:14 2016 -0700

    Update README.md

commit 09ca259b6e54650f21566cd3dd7ef2cb0916d7e0
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 17:27:55 2016 -0700

    Update README.md

commit 5fd1a064e4abedc1cde13db87bb857da6a8e786f
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 16:23:30 2016 -0700

    Continued cleanup

commit 468dd0f4f8cc429eb930d532d8c0e7c5bcaeec08
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 15:26:35 2016 -0700

    Continued cleanups

commit 4478976173a68f5b227580f9c617bb62c975da83
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 15:15:00 2016 -0700

    First round of cleanup
    
    Begin refactoring and commenting efforts.

commit 64bc6768a191fcea6b7aacd009a6280526b2862e
Author: ionescu007 <ionescu007@users.noreply.github.com>
Date:   Wed Mar 16 09:32:51 2016 -0700

    Create README.MD

commit ce26ff62497136c0858a2e2ee492b399dee3ae7c
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 09:30:21 2016 -0700

    Initial check-in
    
    SimpleVisor initial check-in. Tested on Windows 8.1 on Haswell, Windows
    10 TH2 on Skylake, Windows 10 RS1 on Sandy Bridge. Comments & readme to
    follow.

commit fce6895c5e705ff659d5a2271b02931238f89843
Author: ionescu007 <aionescu+git@gmail.com>
Date:   Wed Mar 16 09:28:12 2016 -0700

    :confetti_ball: Added .gitattributes
