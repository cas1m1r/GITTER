======================: FILES :======================
MalwareClassifier
├── bin
│   ├── graph.py
│   └── import.py
├── doc
│   ├── graph.png
│   ├── redis-datastruct.dot
│   └── redis-datastruct.png
├── README.md
└── REQUIREMENTS

2 directories, 7 files
======================: README CONTENT :======================
# Malware Classifier From Network Capture

*Malware Classifier* is a simple free software project done during an [university workshop of 4 hours](http://www.foo.be/cours/dess-20142015/Redis-Introduction.pdf). The objective of the 4 hours workshop was to introduce network forensic and simple techniques to classify malware network capture (from their execution in a virtual machine). So the software was kept very simple while using and learning existing tools ([networkx](https://networkx.github.io/), [redis](http://www.redis.io/) and [Gephi](http://gephi.github.io/)).

## Requirements

 * Python 2.7
 * networkx and redis modules (pip install -r REQUIREMENTS)
 * tshark (part of Wireshark)
 * a Redis server

# How to use the Malware Classifier

You'll need of a set of network packet captures. In the workshop, we use a dataset with more than 5000 pcap files generated from the execution of malware in virtual machines.

```
...
0580c82f6f90b75fcf81fd3ac779ae84.pcap
05a0f4f7a72f04bda62e3a6c92970f6e.pcap
05b4a945e5f1f7675c19b74748fd30d1.pcap
05b57374486ce8a5ce33d3b7d6c9ba48.pcap
05bbddc8edac3615754f93139cf11674.pcap
...
```

The filename includes the MD5 malware executed in the virtual machine.

If you want to classify malware communications based on the Server HTTP headers of the (potential) C&C communication.

```shell
cd capture
ls -1 . | parallel --gnu "cat {1} | tshark -E header=yes -E separator=, -Tfields -e http.server -r {1} | python ./bin/import.py  -f {1} "
```

You can add additional attributes like any fields from the dissectors available within tshark (tshark -G fields). You can add additional fields in the command above. This will update the redis data structure. Then when you have enough attributes, you can dump a graph out of the relationships between the attributes and the malware packet captures.

```shell
python ./bin/graph.py
```

graph.py generates a GEXF file that you can import in [gephi](https://gephi.org).

The output in Gephi can look like this:

![a sample graph of clustering per User-Agent of each malware activity](./doc/graph.png)

## Redis data structure

![An overview of the Redis data structure used in MalwareClassifier](https://raw.github.com/adulau/MalwareClassifier/master/doc/redis-datastruct.png)
## Notes for the student

Check the git log and the commits, these include the steps performed during the workshop especially regarding the improvement of the Python scripts.

## Slides of the training session

[Classifying malware using network traffic analysis.  Or how to learn Redis, git, tshark and Python in 4 hours.](https://www.foo.be/cours/dess-20162017/pub/Redis-Introduction.pdf)
====================== GIT HISTORY: ======================
94b738c HEAD@{0}: clone: from https://github.com/adulau/MalwareClassifier
commit 94b738cdfc8084bd55136050cd0729f84e480f1a
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Fri Jan 27 21:42:15 2017 +0100

    Slides of the training added

commit 61dd78d239bda21e1325c61afec59c21dfde9658
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Fri Jan 27 21:08:29 2017 +0100

    Visualisation with Gephi added

commit e19703ad8b52ab189c2864e9ea5c9ac34e518d75
Merge: f448631 5ca0a28
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Fri Jan 27 21:05:57 2017 +0100

    Merge branch 'master' of github.com:adulau/MalwareClassifier

commit f448631de673de3b753526e3ee2fdf9ec025f4a5
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Fri Jan 27 21:05:36 2017 +0100

    Gephi graphic visualisation added

commit 5ca0a28b9cd81a7fa6d33365c03849c78edcdcc5
Merge: 5ef2a49 5106f89
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 23 12:21:48 2016 +0100

    Merge pull request #1 from Rafiot/master
    
    Add counter on fields

commit 5106f89bc9092b6ac71862b5e131f954cfaf1232
Author: Raphaël Vinot <raphael@vinot.info>
Date:   Sat Jan 23 12:13:54 2016 +0100

    Add counter on fields

commit 5ef2a497029940f3c6da9fed232805a9f6d89ea3
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sun Jan 11 00:20:10 2015 +0100

    graph.py and Gephi usage

commit 3a5ac67b8b9a1a33235fd254dee11c4415b1a897
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sun Jan 11 00:03:36 2015 +0100

    Clarification of tshark usage

commit 411e39b5012618cbfee2a67c8f191ef1b5d2e6f2
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 23:15:22 2015 +0100

    Requirements added

commit ffe19b07fa59e41adf4cf7466dc74b5080251801
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 23:11:41 2015 +0100

    Redis data structure overview

commit f08340aeffe25841fd7d4780bd93d423d978f6e3
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 23:06:11 2015 +0100

    Overview of the Redis data structures

commit bdbbeb45eb5822209ce49e39abcc9505c4cb31fa
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 22:28:06 2015 +0100

    Basic HOWTO added

commit 8a420fb43ffdd38e0146b3b35def93003b55832f
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:47:48 2015 +0100

    Introduction to the university workshop

commit 25dcaa87c8d62fad5dbcad521960de6da34fa5bf
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:36:21 2015 +0100

    Redis and networkx requirements added

commit b27e7a4a747b1c5b372ecf43a472c26418b40e62
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:34:59 2015 +0100

    Generate graph relationship from Redis database
    
    Output format is gexf

commit 56a42333fa9d8b198772eca4fe1550b5a3aecde5
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:32:24 2015 +0100

    Workshop - 5th step added
    
    Mapping between malware MD5 and element MD5 added in Redis

commit 3b1ca45d06a885930a4b76eebc8c4bda8d8bf700
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:30:18 2015 +0100

    Workshop - fourth step
    
    Import element for each field seen in Redis

commit a7f73154b05dae299eeb49148402a062e368b58f
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:25:07 2015 +0100

    Workshop - third step
    
    Import tshark parsing headers in Redis

commit d3b76fd9bb3540553b07862ecc58c4bd417e5d8b
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:20:31 2015 +0100

    Workshop - second step
    
    Processed files are now added in the Redis set

commit 1cb5fe46d3e2d2e4c92c6207105e4dba4021c850
Author: Alexandre Dulaunoy <a@foo.be>
Date:   Sat Jan 10 19:19:23 2015 +0100

    Workshop - first step
