======================: FILES :======================
======================: README CONTENT :======================
# Splinter

Linux remote access trojan (RAT)


This is the starting code for a Linux RAT written in C.  I was tired of there being no real Linux RATs, most of the time it's just ncat.  It uses mbedTLS for encryption and miniz (but able to use zlib) compression for all the communications. I'm unsure if I did the crypto correctly, but I feel that it's good enough for now
I started this project to learn C and I've been working on it for a couple months.  If any problems happens or features wanted, please let me know.

rat.c

        -Port is configurable at runtime through the environment variable "P".  It will bind on all interfaces by default.
                -Uses poll to handle multiple connections
        -Capable of calling back via "I" environment variable.

rat-client.c

        -Command history and tab completion provided by readline
        -Currently has 4 native commands:
                .exit - Closes that current client's connection
                .kill - Kills off the rat process and all the client's connection
                download <remote file> <local file> - Chunks a file, compresses it and sends it over.  Will verify the file transfer via SHAA1 hash
                upload <local file> <remote file> - Performs the same operation as download but uploads instead

rat binds and client connects to it
        
        remote shell> P=12345 ./rat
        shell> ./rat-client 127.0.0.1 12345

rat calls back to client
        
        shell ./rat-client 12345
        remote_shell> I=127.0.0.1 P=12345 ./rat

TODO:
        
        Simple:
                -Move the rat.c output inside of DEBUG blocks so it's not spewing everywhere
                -Clean up rat-client.c output so it's a little nicer
                -Change the client command prompt to actually get the target's IP address

        Advanced:
                -Add in SSH-type tunnels to be able to do forward and reverse tunels
                -Add in the ability to fork and bind on a different port or callback via commands

====================== GIT HISTORY: ======================
a2864b9 HEAD@{0}: clone: from https://github.com/tuian/splinter
commit a2864b960330a83cfd88030b3255fcf08f81271f
Author: Marc <warfield.marc@gmail.com>
Date:   Fri Oct 7 14:06:32 2016 -0400

    Updated LICENSE

commit 58cf7dc7011d056c109b8ebac2aae05c132e55ea
Author: Marc <warfield.marc@gmail.com>
Date:   Fri Oct 7 13:07:33 2016 -0400

    Created .gitignore

commit 62ade1a3c007368c7458bf31bef8f4eaa41e161f
Author: snap <snap@localhost>
Date:   Fri Oct 7 17:07:00 2016 +0000

    Removed some tests and documentation from other libraries

commit a3dc047435b0d93f8c8b9340fa28dd2bb68cb9a9
Author: Marc <warfield.marc@gmail.com>
Date:   Fri Oct 7 12:33:59 2016 -0400

    Updated README.md formatting

commit f3b8a9a7f0856c5cc3cbe1a8f28ea0db9fa32edc
Author: snap <snap@localhost>
Date:   Fri Oct 7 16:30:19 2016 +0000

    Initial commit.

commit afc09e5cf2bc6a641a4f486fe1dd9c1f3b3d6a54
Author: Marc <warfield.marc@gmail.com>
Date:   Fri Oct 7 11:59:22 2016 -0400

    Initial commit
