======================: FILES :======================
======================: README CONTENT :======================
<div align="center">
<h1>Secret ü§´</h1>

<p>Prevent your secrets from accidental leak</p>
</div>

---
[![CircleCI](https://circleci.com/gh/pallad-ts/secret/tree/master.svg?style=svg)](https://circleci.com/gh/pallad-ts/secret/tree/master)
[![npm version](https://badge.fury.io/js/@pallad%2Fsecret.svg)](https://badge.fury.io/js/@pallad%2Fsecret)
[![Coverage Status](https://coveralls.io/repos/github/pallad-ts/secret/badge.svg?branch=master)](https://coveralls.io/github/pallad-ts/secret?branch=master)
[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://opensource.org/licenses/MIT)
---

![Example code](./assets/intro-code.png)

Wraps any value and prevents it to:

* be converted to string
* serialized (for example by `JSON.stringify`)
* inspected (through `util.inspect`)
* logged (through `console.log`) or debugged.

# Use cases

* Passing around un/encrypted passwords
* Storing confidential credentials (api keys, database passwords)
* Wrapping config values

# Features

* üë∑ Built with Typescript - full type friendly
* ‚úÖ Supports auto wrapping functions results with Secret
* üòç Easy integration with literally any library/framework

# Community

Join our [discord server](https://discord.gg/paTBKBxXnA)

# Installation

```shell
npm install @pallad/secret
```

# Usage

Just wrap it with `secret` or `new Secret`. It order to retrieve value you need to explicitly call `getValue` method

```typescript
import {Secret, secret} from '@pallad/secret';

const SECRET = 'someProtectedValue!3234#@#%4';

const protectedValue = new Secret(SECRET);
// or 
const protectedValue2 = secret(SECRET);

protectedValue + ''; // '**SECRET**'
protectedValue.toString(); // '**SECRET**'
util.inspect(protectedValue); // **SECRET**
console.log(protectedValue); // **SECRET**
util.inspect(protectedValue, {customInspect: false}); // Secret [**SECRET**] {}

console.log(protectedValue.getValue()); // 'someProtectedValue!3234#@#%4'
```

## Custom description

Instead of `'**SECRET**'` you can print something else.

```typescript
import {Secret} from '@pallad/secret';

const protectedValue = new Secret(SECRET, 'CustomDescription');

String(protectedValue); // 'CustomDescription'

console.log(protectedValue); // CustomDescription
util.inspect(protectedValue, {customInspect: false}); // CustomDescription
```

## Wrapping function result

`protect` wraps a function with another function that wraps returned value with secret for you.

```typescript
import {protect, Secret} from '@pallad/secret';

const result1 = protect(x => 'protectedValue')();
Secret.is(result1); // true
result1.getValue(); // 'protectedValue')
```

Promises are also handled (full type support)

```typescript
const result2 = protect(x => Promise.resolve('protectedValue'))();

result2.then(x => {
  Secret.is(x); // true
  x.getValue(); // 'protectedValue'
})
```

## Checking if value is Secret

```typescript
import {Secret, secret} from '@pallad/secret';

Secret.is(new Secret('test')) // true
Secret.is(secret('test')) // true
Secret.is(protect(() => 'test')()) // true
Secret.is('secret') // false
```
====================== GIT HISTORY: ======================
f87a674 HEAD@{0}: clone: from https://github.com/pallad-ts/secret
commit f87a674235e9c54aa61e274e4431d774ae453988
Merge: 4c4a0c1 7fa14f6
Author: ≈Åukasz Ku≈ºy≈Ñski <wookieb@users.noreply.github.com>
Date:   Tue Nov 9 20:18:06 2021 +0100

    Merge pull request #10 from pallad-ts/fix/9-secret-is-for-another-instance-of-module
    
    Fix/9 secret is for another instance of module

commit 7fa14f6473c73da6ff141fb1b30ae8b17358e321
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Tue Nov 9 20:17:14 2021 +0100

    fix: #9 fixed checking by with  if value comes from another copy of  module

commit 69d91c1d1d64e96f61f621495ceb29fdfe44d6d5
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Wed Oct 20 20:13:32 2021 +0200

    simple package update:

commit 4c4a0c1a0d6ee702a4fc5f37a5bd337ef9b73610
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Wed Oct 20 20:08:11 2021 +0200

    fixed intro code graphic

commit f65b50cefe7a32d768caf74a6503752d9c698516
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Wed Oct 20 20:06:17 2021 +0200

    updated readme

commit 219b51e6c0375dc0be6d3fbd2943d16504b33551
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Wed Oct 20 20:02:36 2021 +0200

    New readme and extra polish

commit 760254e4bf2fab8f0854d80ca8eee124ca7e4d52
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Wed Oct 20 19:39:11 2021 +0200

    CI and deps update

commit deee52b5f70a4d465cda3952311ec34c4f6dd809
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Sat Jan 11 16:16:33 2020 +0100

    Removed usage of WeakMap

commit e9f686d0caee7a7b700d0560a91f4a333db12738
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Fri Jan 3 08:42:58 2020 +0100

    Added tslib

commit f2dadadad22891c1c22038d96877892c94142a42
Author: ≈Åukasz Ku≈ºy≈Ñski <lukasz.kuzynski@gmail.com>
Date:   Fri Jan 3 00:18:48 2020 +0100

    Initial version

commit ac0ba6111e33c83d3995b4fba44a288435e07383
Author: ≈Åukasz Ku≈ºy≈Ñski <wookieb@users.noreply.github.com>
Date:   Thu Jan 2 23:01:35 2020 +0100

    Initial commit
