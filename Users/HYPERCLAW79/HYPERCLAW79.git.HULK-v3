======================: FILES :======================
======================: README CONTENT :======================
<!--
    Title: Hulk v3
    Description: Asynchronous HTTP Botnet for Distributed Denial of Service (DDoS)
    Author: Hyperclaw79
    Url: https://github.com/Hyperclaw79/HULK-v3
    Image: https://raw.githubusercontent.com/Hyperclaw79/Hulk-v3/async/assets/Hulk.png
-->

<meta name="title" content="Hulk v3" />
<meta name="description" content="Asynchronous HTTP Botnet for Distributed Denial of Service (DDoS)" />
<meta name="author" content="Hyperclaw79" />
<meta name="url" content="https://github.com/Hyperclaw79/HULK-v3" />
<meta name="image" content="https://raw.githubusercontent.com/Hyperclaw79/Hulk-v3/async/assets/Hulk.png" />
<meta name="keywords" content="async,asynchronous,ddos,ddos-attack,ddos-script,electron,gui,http,https,hulk,named-pipes,nextron,nodejs,python,python3,typescript,websockets" />
<meta name="og:title" content="Hulk v3" />
<meta name="og:description" content="Asynchronous HTTP Botnet for Distributed Denial of Service (DDoS)" />
<meta name="og:author" content="Hyperclaw79" />
<meta name="og:url" content="https://github.com/Hyperclaw79/HULK-v3" />
<meta name="og:image" content="https://raw.githubusercontent.com/Hyperclaw79/Hulk-v3/async/assets/Hulk.png" />
<meta name="og:keywords" content="async,asynchronous,ddos,ddos-attack,ddos-script,electron,gui,http,https,hulk,named-pipes,nextron,nodejs,python,python3,typescript,websockets" />


![Hulk_Banner](/assets/Hulk_banner.png)

![Python Version](https://img.shields.io/badge/python-3.8+-blue?style=for-the-badge)
![License](https://img.shields.io/badge/License-GNU-green?style=for-the-badge)
![Build and Package](https://img.shields.io/github/workflow/status/Hyperclaw79/HULK-v3/Build%20and%20Package/async?style=for-the-badge)
![Codacy branch grade](https://img.shields.io/codacy/grade/c4f7560e8231423691d819129c7b3afa/async?style=for-the-badge)


## ‚ö†Ô∏è Disclaimer

| **Hulk is meant for educational and research purposes only.<br />Any malicious usage of this tool is prohibited.<br />The authors must not to be held responsible for any consequences from the usage of this tool.** |
| :--- |


## Introducing **HULK-v3** :robot:

| :information_source: | **Hulk** is a *Distributed Denial of Service* tool that can put heavy load on HTTPS servers, in order to bring them to their knees, by exhausting the resource pool. |
| :---: | :--- |

### Check out Hulk in Action

**GUI :desktop_computer:**
![Hulk_demo](/assets/Hulk_demo.gif)

**Server :computer:**
![Hulk_server](/assets/Hulk_server.png)
**Client/Bot :space_invader:**
![Hulk_client](/assets/Hulk_client.png)

:green_circle: To get started, expand the sections below to read about them.


## Changelog :page_with_curl:
You can refer the Changelog [here](/CHANGELOG.md).


<details markdown=1><summary markdown="span"><h2>Usage :book:</h2></summary>

1.  Run `pip install -r requirements_(linux/win).txt` before starting this script.
    > Ex: On Windows: `pip install -r requirements_win.txt`
    > Ex: On Linux: `pip install -r requirements_linux.txt`

2.  Launch the `hulk_launcher.py server` with the target website as arg.
    > Ex: `python hulk_launcher.py server https://testdummysite.com`
    >
    > Append `--persistent False` to kill the botnet after a succesfull DDoS.
    >
    > Append `--gui` if you are running the GUI in parallel.

3.  Launch the `hulk_launcher.py client` to spawn multiple processes of hulk - one per CPU Core.
    > Ex: `python hulk_launcher.py client [localhost]`
    >
    > If the server is running remotely, replace localhost with the server's IP.

4. To run the GUI, you need to:
    * Install `NodeJS`, change to `gui` directory and use `npm install`.
    * Launch the GUI with `npm run dev`.

5.  Sit back and sip your coffee while the carnage unleashes! üòà

*(P.S. Do not run the binaries (except `hulk_gui`) directly, use them from command line like shown above without using `python`.)*

</details>


<details markdown=1><summary markdown="span"><h2>Syntax Help :scroll:</h2></summary>

### Server :computer:
```py
usage: hulk_launcher.py server [-h] [-p PORT] [-m MAX_MISSILES] [--persistent] [--gui] target

The Hulk Server Launcher

positional arguments:
target                the target url.

options:
-h, --help            show this help message
-p PORT, --port PORT  the Port to bind the server to.
-m MAX_MISSILES, --max_missiles MAX_MISSILES
                        the maximum number of missiles to connect to.
--persistent          keep attacking even after target goes down.
--gui                 run on the GUI mode.
```

### Client :space_invader:
```py
usage: hulk_launcher.py client [-h] [-r ROOT_IP] [-p ROOT_PORT] [-n NUM_PROCESSES] [-s]

The Hulk Bot Launcher

options:
-h, --help            show this help message
-r ROOT_IP, --root_ip ROOT_IP
                        IPv4 Address where Hulk Server is running.
-p ROOT_PORT, --root_port ROOT_PORT
                        Port where Hulk Server is running.
-n NUM_PROCESSES, --num_processes NUM_PROCESSES
                        Number of Processes to launch.
-s, --stealth         Stealth mode.
```

</details>


<details markdown=1><summary markdown="span"><h2>Architecture :gear:</h2></summary>

| :warning: The intention of Hulk is to demonstrate the damage that a DDoS attack can do to a server if unprotected. |
| :--- |
| :bulb: Please go through the code for full details. I'm keeping it well documented and request the contributors to do so too. |

Hulk consists of 2 major and 1 optional components:
 - Server
 - Client
 - [Gui]

<p align="center">

 ![Hulk_architecture](/assets/Hulk_architecture.svg)

</p>

**Client :space_invader:**

> The core part of Hulk is the `Hulk client` aka `Hulk.py`. \
This client\bot launches a barrage of `asynchronous HTTP requests` to the target server. \
These incoming requests, put a burden on the target and makes it slow to respond. \
With the launcher script, we can launch multiple instances of Hulk using `multi-threading`. \
The target will be hit with so many requests that it will ultimately break into a `500 error`. \
Usually, the client completes 500 attacks and sends back the list of status messages. \
In case of special events, the client will immediately send an Interrupt message to the server. \
Example Special Events: *Successful DDoS*, *404 Target Not Found*, etc.

**Server :computer:**

> Hulk was originally a single instanced DoS script. However, it has been modified to be run as multiple instances. \
The cluster of many such instances is called a `botnet`. And this botnet can be controlled and monitored by the `Server`. \
The `Server` and `Client` communicate with each other through TCP `WebSockets`.
Based on the settings, this is usally a persistent bidirectional channel. \
In case the server receives `Interrupts` from a client, it will send out a broadcast message to all the clients, asking them to stop the attacks. \
The clients go to Standby mode and await further instructions from the server.
>
> The server can also send information to the GUI to keep a track of the botnet. \
This information is sent via Unix\Windows `Named Pipes` for low latency `IPC`.

**GUI :desktop_computer:**

> The GUI is a `NextJS` web application that is used to monitor the botnet via Named Pipes. \
When run as a binary, GUI makes use of `Electron` which exposes the information directly to the Frontend. \
When run as a Node process, a node server listens to the Named Pipe and passes on the information to a HTTP Streaming API. \
Then the frontend will pick it up from the API using `EventSource`.

</details>


<details markdown=1><summary markdown="span"><h2>Acknowledgements :busts_in_silhouette:</h2></summary>

### Authors :writing_hand:
|         Name       | Version |
|--------------------|---------|
| **Hyperclaw79**    |   2.0+  |
| **Barry Shteiman** |   1.0   |

### Contributors :handshake:
Thanks for contributing to the repo. Follow the [Contribution Guide](/.github/CONTRIBUTING.md) and open a PR.

| Contributor | Contribution |
| :--: | :--: |
| [Nexuzzzz](https://github.com/Nexuzzzz) | Fixed typo in the code |

</details>


<details markdown=1><summary markdown="span"><h2>License :page_facing_up:</h2></summary>

HULK v3 is a Python 3 compatible Asynchronous Distributed Denial of Service Script.\
[Original script](http://www.sectorix.com/2012/05/17/hulk-web-server-dos-tool/) was created by Barry Shteiman.
You can use that one if you have Python 2.

Using a [GNU license](/LICENSE) cause there was no mention about any license used by Barry.
Feel free to modify and share it, but leave some credits to us both and don't hold us liable.

</details>
====================== GIT HISTORY: ======================
3606191 HEAD@{0}: clone: from https://github.com/Hyperclaw79/HULK-v3
commit 3606191dd228b4cd3f2e57a7e634420729e9ec2d
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Aug 13 00:16:49 2022 +0530

    Added a Contributor

commit 7fc4170e4b731cda389b8ea18fa58c06a1616822
Author: Nexus <78029616+Nexuzzzz@users.noreply.github.com>
Date:   Fri Aug 12 18:02:07 2022 +0000

    updated a tiiiny grammar error

commit e45a55a3af360488fdd7559681cc5bc32e6abc1a
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Aug 6 20:32:08 2022 +0530

    Enhanced Readme and templates

commit 59dc935bde0ee76a93d59a7a216177f27d4cb0a2
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Tue Aug 2 23:00:15 2022 +0530

    Added Workflows

commit 0422c858f7537e0fd0908e49ce6987690e1f49a7
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Tue Aug 2 20:45:48 2022 +0530

    Implemented GUI for Hulk

commit 78776ea70bfc146c842a4c0d7ef3b9784accb929
Merge: 75b274c 042c9f6
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Fri Jun 12 18:52:10 2020 +0530

    Merged conflicts

commit 042c9f6ca9f40fb10e4057160122780bc64bd195
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Fri Jun 12 18:48:57 2020 +0530

    Update README.md

commit 10f49eee477aacb3c4b926700ec21cca7f110cfc
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Fri Jun 12 18:48:01 2020 +0530

    Persistence (#13)

commit 75b274c7b1d23608fbc54ad4a211314e39fcfc7a
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Fri Jun 12 18:34:53 2020 +0530

    Persistence

commit 2b46c9c7419885809bef8fb49b12fde1a6a9cdc8
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Fri Jun 5 18:28:58 2020 +0530

    Update hulk.py (#11)
    
    Accepts both http and https without forcing https.

commit 36283dbc6617e58bd4afd20cb83779c4499069bc
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Mon Apr 13 18:32:05 2020 +0530

    Update hulk.py

commit 7d227302c530fdfd8d9df03868731f8cee034a55
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Tue Feb 4 18:56:45 2020 +0530

    Linux compatible Hulk-launcher.py

commit 2685c6e609fcc71b987380c364247042dc877657
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 04:16:08 2020 +0530

    Update hulk.py
    
    Removed trailing whitespace

commit 5d948ae05925046ceb65ac3c0ba48d35e283e716
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 04:05:43 2020 +0530

    refactored main()

commit 2784568b00b07d370180459f7f17bd625a47404d
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:59:47 2020 +0530

    fix except syntax

commit 8e2559285c9e81bcb48e1fb4ad87c3a91ec1bdcc
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:42:45 2020 +0530

    Codacy Fixes

commit 7e4771bc4ec5a5e79b4bf6099c27856e42183fbd
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:37:02 2020 +0530

    Codacy Fixes

commit ee86c48a0ee83b16b8db598587081ae3f0f28aed
Merge: c95c304 e2893a2
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:29:16 2020 +0530

    Merge branch 'async' of https://github.com/Hyperclaw79/HULK-v2 into async

commit c95c304f407a959a29b49d72320f463788ca0628
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:29:08 2020 +0530

    Codacy Fixes

commit e2893a28644523f8659a0151b7be7f8d5d3c5a86
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:11:17 2020 +0530

    Update CONTRIBUTING.md

commit ed667ed1b76ff493e42c032fdfc320e8d408175e
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 03:08:38 2020 +0530

    Update README.md

commit 11d42fe5acf5c8b0d8895172144d753d250c3278
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Sat Feb 1 02:34:27 2020 +0530

    Async Hulk v3

commit 2d1f6c006ab8cf8eb92b3e4a0297166c76f9723b
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Thu Jul 13 08:05:25 2017 +0530

    Multiprocessing Achieved! (#1)
    
    * Update hulk.py
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md

commit b15ab03ca829a8a4bc7cbf291793438348dd5306
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Thu Jun 22 23:05:55 2017 +0530

    Hulk v 2.1
    
    Implemented ThreadPooling, Payload Obfuscation, timeouts, etc.
    Fixed connection freezing bug.

commit 0549ee55abd6edad6673f0d2eab25ac7ec3760c0
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Thu Jun 22 22:49:48 2017 +0530

    Update requirements.txt

commit ea6612ae946eb5b2042acc7e4a5d4bb013a1b9ed
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Thu Jun 22 05:06:51 2017 +0530

    Create CONTRIBUTING.md

commit b70d3802acb5476d7c705c130cb7381994d31939
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Thu Jun 22 04:49:29 2017 +0530

    Create CODE_OF_CONDUCT.md

commit 8bd24994069ed69175a9630cf346cffc102395d5
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Wed Jun 21 21:01:21 2017 +0530

    Edited Readme.

commit 3a8274d2a477352f338bf058417180ea39d714c8
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Wed Jun 21 20:58:27 2017 +0530

    First Commit

commit 1a1537084b0f977c64ce1b05eb67a9ecffbefd6d
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Wed Jun 21 20:54:43 2017 +0530

    Edited Readme.

commit 88b2c7f1d80e2d2ffac881f50b27cfde59d5de54
Author: Harshith Thota <harshith.thota7@gmail.com>
Date:   Wed Jun 21 20:42:35 2017 +0530

    Initial commit
