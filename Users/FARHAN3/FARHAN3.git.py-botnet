======================: FILES :======================
======================: README CONTENT :======================
#py-botnet

## Description

The purpose of this project was to gain experience with Socket programming by creating a Distributed Denial of Service Botnet. The program synchronizes Bots in a Botnet by using a coordinator; the Bots then attack the Target Server at the specified time. 
## Disclaimer
This program is meant for educational purposes only. DDoS attacks are illegal in most countries, so only use this program on machines that you own or are authorized to use.

## Design
The Botnet consists of a separate script for the Bot, Master and the Target Server; it also includes a utility script containing utility methods which other scripts can call.

The overall design is quite simple, and each component is self-contained in their respective script file, with the exception that each of them uses components from Util.py. Each script also takes command line arguments and has help documentation which can be viewed by running the script with a –h flag.

The figure below shows a visual representation of the setup and how the scripts interact with each other. In the figure, the hostnames are not specified because all the scripts are assumed to be running on the localhost.

![Design](design.png)

### Bot.py
The Bot script creates a socket on the specified port and starts listening for the Master. Once the Master makes the connection, it is first authenticated using a handshake process, if the authentication is successful, the Bot sends the Master it’s current time. The Master then replies with a message containing the Target Server’s hostname and port number, as well as when to attack, taking into account any time difference between the Bot and the Master.

The Bot then sleeps until the specified attack time. Once it is time to attack, the Bot connects to the Target Server on the specified port and starts sending messages for 30 seconds, i.e. it simulates a DoS attack. Once the 30 seconds are up and the attack is complete, the Bot disconnects from the Target Server and exits.

### Master.py
The Master script reads the text file containing the Bot information and then loops through each Bot entry. For each Bot, it connects at the specified port and authenticates itself through a handshake process. Once authenticated, the Master asks the Bot for it’s current time and determines any time difference between itself and the Bot. It then sends the Bot the Target Server’s hostname and the port on which to attack, as well as when to attack, while accounting for any time difference between itself and the Bot. Once this information has been relayed to the Bot, it continues to the next Bot until all of the Bots are notified about the attack.

### TargetServer.py
The Target Server script simply runs a dummy server on the specified port. It listens on the port for clients to connect, for each new clients, it creates a new thread to handle the client. Within the client handler, it simply continues to receive data from the client until the client terminates the connection. In this case, it will listen for Bots to connect, once they are connected, a separate thread will be created for each. Within the thread, it will continue receive data from the Bot for 30 seconds. 

## Usage
In order to run the Botnet, the following steps need to be taken. Note however that a demo.py script has been created in order to automate the creation of four Bots.

1) Start the Target Server by running the following command:

```
$ python TargetServer.py –p <port number> | tee log.txt
```

2) Start the Bot by running the following command:

```
$ python Bot.py –p <port number>
```

3) Repeat Step 2 for each Bot and record the hostname and port number in bots_list.txt

4) Run the Master with the following command:

```
$ python Master.py –t <target host> -p <target host’s port number> -d <when to attack>
```

Note that the time to attack is specified by how many seconds from now the attack should occur. 

5) Wait for the Bots to attack; once the attack is completed, use Ctrl-C to stop each script.


## Known Issues and Bugs

* program does not handle different time zones (Solution: use UTC time) 
* on some machines if the attack rate of the Bot is too fast, i.e. less than 0.1 ms, some issues might be encountered 

## End Notes
This project is published under the Apache License Version 2.0.

====================== GIT HISTORY: ======================
44d9a63 HEAD@{0}: clone: from https://github.com/farhan3/py-botnet
commit 44d9a635d3ee377ce8c6224ddea5e9c09a0ef8e5
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Fri Dec 23 21:02:22 2016 -0500

    Update bots_list.txt

commit cf4c119ed2e0d83348c7f9026be1af9f78b40ec4
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Sat May 7 17:00:09 2016 -0400

    Update README.md

commit 96626f6e617d027fac9366cc8407ab38a0e44259
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Fri May 6 15:56:11 2016 -0400

    add don't be an idiot disclaimer

commit cc7f5f994fc66e9933b2b97f7a49a7a4f9eb04be
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Sun Mar 20 22:08:54 2016 -0400

    Update README.md

commit a305599d4e06b282f81dbc7e1843105b04e05c39
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Sun Mar 20 21:58:59 2016 -0400

    Add design image

commit 238859ef6921f98db517a0cbd0377e3ee1de072e
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Sat Nov 21 15:21:48 2015 -0500

    Delete SocketUtil.pyc

commit 72d8d52659ae7ab9b1c697b2f1b7818445f64742
Author: Farhan Arshad <farhan3@users.noreply.github.com>
Date:   Sat Nov 21 15:00:40 2015 -0500

    Create LICENSE.txt

commit a2fd257ee32ca448d011424bcc1bcc1991042673
Author: Farhan Arshad <Farhan3@users.noreply.github.com>
Date:   Sun Jul 12 14:03:31 2015 -0400

    Update README.md

commit 33a6b5a121e9606a01052a327618e114723dba74
Author: Farhan Arshad <Farhan3@users.noreply.github.com>
Date:   Sun Jul 12 14:00:39 2015 -0400

    Add disclaimer to README

commit 06fc8bb5ec69f6381ac90fa9849a29d691e8c4b8
Author: Farhan3 <Farhan3@users.noreply.github.com>
Date:   Fri Jun 12 23:11:00 2015 -0400

    Create README.md

commit 6bc51cdccd4fcada0ddc2bd99347030284afd81a
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Wed Apr 29 10:25:22 2015 -0400

    changed log file write rate to 500 ms

commit bf847bf7131363cfd84e722b13a74aec80f6826d
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Wed Apr 29 01:30:23 2015 -0400

    added comments and demo script

commit 5eb8684b3fcc7ada85a744c762c041dd30a4f2cd
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Sun Apr 19 23:06:46 2015 -0400

    added cmd line options to Bot.py

commit 9ca6f5ed24c3eda0a44a4f061748cd0db2dd1a63
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Sun Apr 19 22:26:23 2015 -0400

    botnet basics working

commit 705c48d8e12df8b33c77da78139c038ae224c456
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Sun Apr 19 22:23:22 2015 -0400

    added new line to gitignore

commit 8e4a0b85fb552b8d136c4a0a32f34b058920f8c2
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Sun Apr 19 20:34:43 2015 -0400

    commit before changing to SocketServer

commit 86759466c59931ddedbbeffb0c9d28d44ed2f24d
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Sun Apr 19 16:26:37 2015 -0400

    basic program working

commit 2284f676df23a5b0fb5a7abf8276d221a7f376ff
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Sun Apr 19 16:25:30 2015 -0400

    added gitignore

commit 65475d8ecb8922e46ee914022cde98b7facf19ae
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Wed Apr 15 10:42:17 2015 -0400

    added util file

commit acd7de7f8b2f6ce56889e65bcb1b9337c64de253
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Wed Apr 15 10:42:00 2015 -0400

    bot-master communication working; a lot of debug comments

commit c98b9ed7d4a4abc7da89cecd1c11ee50079a2f36
Author: Farhan Arshad <farhan_arshad@live.com>
Date:   Mon Apr 13 20:08:14 2015 -0400

    initial commit
