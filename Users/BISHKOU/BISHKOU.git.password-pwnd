======================: FILES :======================
======================: README CONTENT :======================
<h1 align="center">Welcome to password-pwnd üëã</h1>
<p>
  <a href="https://www.npmjs.com/package/password-pwnd" target="_blank">
    <img alt="Version" src="https://img.shields.io/npm/v/password-pwnd.svg">
  </a>
  <a href="https://github.com/bishkou/password-checker#readme" target="_blank">
    <img alt="Documentation" src="https://img.shields.io/badge/documentation-yes-brightgreen.svg" />
  </a>
  <a href="https://github.com/bishkou/password-checker/graphs/commit-activity" target="_blank">
    <img alt="Maintenance" src="https://img.shields.io/badge/Maintained%3F-yes-green.svg" />
  </a>
  <a href="https://github.com/bishkou/password-checker/blob/master/LICENSE" target="_blank">
    <img alt="License: MIT" src="https://img.shields.io/github/license/bishkou/password-pwnd" />
  </a>
</p>

* **Check a Password against 613,584,246 real world passwords previously exposed in data breaches.**

* **Check if a Password has been leaked before**
* **Check if a Password is Strong**


### üè† [Homepage](https://github.com/bishkou/password-checker)

## Install

```sh
npm i password-pwnd
```

## Check if a Password has been Leaked Before

```js
/** pwnd checks if the password your provided has been found in previous leaks **/

const { pwnd } = require('password-pwnd')

check = async () => {
    /** 
     Make sure to use the await syntax since we're fetching
    data from an API and it can take a second to get the result
    **/
    const leaked = await pwnd('password123')

    // if the value is 0
    if (!leaked) {
        console.log('You Are Good To Go')
    }
    // if the value is different from 0
    else {
        console.log('Please change your password, it has been found in a previous breach')
   
        /** if you want to get the count of how many times the
        password have been found in previous breaches **/
        console.log(`Password found ${leaked} times`)

    }  

}

```
**DISCLAIMER** :
If the Password isn't found when calling the API
That doesn't necessarily mean it's a good password,
 merely that it's not indexed on this API
 
**BUT** Testing the password against **613,584,246** real leaked passwords
is a good **INDICATOR** that the password is somewhat **SECURE**


## Catching Errors
```js
/** It is highly recommend you try to catch errors since we are making
 a call to an API and it can fail at any given moment **/

const leaked = await pwnd('password')
    .catch(err => {
        console.log(err)
    })
```

## Check if Your Password is Strong Enough

```js
/** strong checks if your password has
 the requirements of a strong password **/

const { strong } = require('password-pwnd')

check = async () => {
    const strength = await strong('password123')
    // if False
    if (!strength) {
        console.log('Your Password is Weak')
    }
    // if True
    else  console.log('You Are Good To Go')

}
/**
The Password must contain at least 1 lowercase** and 1 uppercase alphabetical character,
 at least 1 numeric character**, at least 1 special character and it must be 8 characters or longer.
 **/

```
**STRONG** :
 
 The Password must contain at least **1 lowercase** and **1 uppercase** alphabetical character,
 at least **1 numeric character**, at least **1 special character** and it must be **8 characters or longer**.
 
## Check if Your Password is Strong and hasn't been leaked

```js
/** super_strong checks the password against both
 previous functions **/

const { super_strong } = require('password-pwnd')

check = async () => {
    const strength = await super_strong('password123')
    // if False
    if (!strength) {
        console.log('Your Password is Weak')
    }
    // if True
    else  console.log('You Are Good To Go')

}
/**
The Password gets checked against both PWND and STRONG functions,
if the PWND API call fails for some reason only the STRONG function gets
executed, and you will get a WARNING in the console
 **/

```
**SUPER_STRONG** :
 
The Password gets checked against both **PWND** and **STRONG** functions,
if the PWND **API call fails** for some reason only the STRONG function gets
executed, and you will get a **WARNING** in the console


## HOW DOES THIS WORK
In order to protect the value of the source password being searched for,
Pwned Passwords also implements a k-Anonymity model that allows a password 
to be searched for by partial hash.<br/> This allows the first 5 characters of
a SHA-1 password hash (not case-sensitive) to be passed to the API (testable by [clicking here](https://api.pwnedpasswords.com/range/21BD1))
<br />
<br />
When a password hash with the same first 5 characters is found in the Pwned Passwords repository,
the API will respond with an HTTP 200 and include the suffix of every hash beginning with
the specified prefix, followed by a count of how many times it appears in the data set.
The API consumer can then search the results of the response for the presence of their source hash
and if not found, the password does not exist in the data set.  

**SOURCE** :  [HIBP](https://haveibeenpwned.com/API/v3)

## Author

üë§ **Chedy**

* Github: [@bishkou](https://github.com/bishkou)
* LinkedIn: [@chedyhm](https://linkedin.com/in/chedyhm)

## ü§ù Contributing

Contributions, issues and feature requests are welcome!<br />Feel free to check [issues page](https://github.com/bishkou/password-checker/issues). You can also take a look at the [contributing guide](https://github.com/bishkou/password-checker/blob/master/CONTRIBUTING.md).

## Show your support

Give a STAR if this project helped you!

## Source of the data

* All thanks to HIBP API.
* Their API provides 613,584,246 real world passwords previously exposed in data breaches.
* LINK: [HIBP API](https://haveibeenpwned.com/API/v3)


## üìù License

* Copyright ¬© 2021 [Chedy](https://github.com/bishkou).
* This project is [MIT](https://github.com/bishkou/password-checker/blob/master/LICENSE) licensed.

***
_This README was generated with by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_
====================== GIT HISTORY: ======================
19ad8c9 HEAD@{0}: clone: from https://github.com/bishkou/password-pwnd
commit 19ad8c9f3a3a3c00cbb763a211a136ba21b8cf39
Author: bishkou <chedyhammami@yahoo.com>
Date:   Thu May 13 12:21:27 2021 +0100

    fix pass

commit 1143058d0ca36444393c71c2afbad0237b11ad1b
Author: bishkou <chedyhammami@yahoo.com>
Date:   Wed May 12 13:55:44 2021 +0100

    1.0.7

commit c38da9392125d8de4ed500fe068dd2bcc69d1ea5
Author: bishkou <chedyhammami@yahoo.com>
Date:   Sun Apr 25 23:20:19 2021 +0100

    1.0.6

commit aba1d85e1778e4c26f68fe1a1b6e687b569ff369
Merge: 87987fe 9f1b4d6
Author: Chedy <40863881+bishkou@users.noreply.github.com>
Date:   Sun Apr 25 23:16:26 2021 +0100

    Merge pull request #4 from scr2em/master
    
    Deleted  "password = password.trim()"

commit 9f1b4d6d83a7172d95ef0a98f57ceb7c81e1e6fb
Author: Mohamed Abdelgwad <scr2em@yahoo.com>
Date:   Mon Apr 26 00:06:28 2021 +0200

    Deleted  "password = password.trim()"
    
    Some password might have a space at the end.

commit 87987fe67ee9c628328cfab4715d1b338203e6f8
Merge: 21f3b4f ef876e0
Author: Chedy <40863881+bishkou@users.noreply.github.com>
Date:   Sun Mar 21 13:12:58 2021 +0100

    Merge pull request #2 from BhoneyKim/patch-1
    
    typo in readme

commit ef876e0248baf4a517b0bbb556ad6b5624bbd4df
Author: Bhoney, Kim <bhoney1016@gmail.com>
Date:   Sun Mar 21 21:00:46 2021 +0900

    typo in readme

commit 21f3b4f4db3dc96eeeb9fd84f669494748558284
Author: bishkou <chedyhammami@yahoo.com>
Date:   Sat Feb 13 18:41:42 2021 +0100

    1.0.5

commit 3c0bef7dc897522c445d3cfd13d33376a277acef
Author: bishkou <chedyhammami@yahoo.com>
Date:   Sat Feb 13 18:41:37 2021 +0100

    reject fix

commit d8e393d22f95c8816798fd22f9e77b2eef61ab05
Author: bishkou <chedyhammami@yahoo.com>
Date:   Mon Feb 8 01:20:00 2021 +0100

    1.0.4

commit 53ef1070c36009f10361825c20f815c90ffd88d7
Author: bishkou <chedyhammami@yahoo.com>
Date:   Mon Feb 8 01:19:43 2021 +0100

    super_strong add

commit a58667ce6dc7573558489df56d661ec486b46aef
Author: bishkou <chedyhammami@yahoo.com>
Date:   Mon Feb 8 01:13:21 2021 +0100

    super_strong add

commit 83e12f5921802014035ee30af09f0d23a276ae84
Author: bishkou <chedyhammami@yahoo.com>
Date:   Sun Feb 7 01:34:12 2021 +0100

    1.0.3

commit 2bbb6b2ff4772879e8534a2385dd037fbed31979
Author: bishkou <chedyhammami@yahoo.com>
Date:   Sun Feb 7 01:33:32 2021 +0100

    added strong

commit e6607fc30bf5fdaa028b327121a0fbddb0f5e378
Author: bishkou <chedyhammami@yahoo.com>
Date:   Fri Feb 5 19:31:02 2021 +0100

    1.0.2

commit 7ff4f91eb1b2e098f01cb1f21fd86e763dffafd3
Author: bishkou <chedyhammami@yahoo.com>
Date:   Fri Feb 5 19:30:49 2021 +0100

    added readme

commit c348e44a8011fa07bbc72db604b4d81f82b447be
Author: bishkou <chedyhammami@yahoo.com>
Date:   Fri Feb 5 19:21:42 2021 +0100

    1.0.1

commit 60483ce960628ef77f740281c908a49f929db55c
Author: bishkou <chedyhammami@yahoo.com>
Date:   Fri Feb 5 19:20:12 2021 +0100

    added readme

commit 8bd3fbd35cbf29249fafdd687e17d8f6e8754c31
Author: bishkou <chedyhammami@yahoo.com>
Date:   Fri Feb 5 18:23:56 2021 +0100

    licence added

commit ae62f1a54a0d11871c02ec4d587eaac31a049537
Merge: dc5a59e e74f233
Author: Chedy <40863881+bishkou@users.noreply.github.com>
Date:   Fri Feb 5 18:22:42 2021 +0100

    Merge pull request #1 from bishkou/add-license-1
    
    Create LICENSE

commit e74f233f07ac94d50093a1d8078c17efa0219b29
Author: Chedy <40863881+bishkou@users.noreply.github.com>
Date:   Fri Feb 5 18:22:32 2021 +0100

    Create LICENSE

commit dc5a59efe5b50114e55c79310eb00e6858b6f5f0
Author: bishkou <chedyhammami@yahoo.com>
Date:   Fri Feb 5 18:12:20 2021 +0100

    check setup
