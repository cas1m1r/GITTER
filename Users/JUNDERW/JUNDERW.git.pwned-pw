======================: FILES :======================
======================: README CONTENT :======================
# pwned-pw

## Installation

```
npm install pwned-pw
```

## Browser Use

* `lib/pwned-pw.js` can be loaded directly into the browser. Minified it is less than 1kb.
* However, it uses `TextEncoder` so Edge browser is not supported. If you add the TextEncoder polyfill it works.

## How can I trust the API server? (Hint: you don't need to)

Take two examples:
* `"123456"` (Most leaked password with over 22 million leaks)
* `"U4JeDx!AdY3;Jh8*J93#ZT8%3bSxM5y451aa"` (Not leaked yet... except now it's public so don't use.)


1. SHA1 hash each password once, and take the first 5 characters.
  * `"7C4A8D09CA3762AF61E59520943DC26494F8941B"`
  * `"7C4A8CF0102FC0FAC9193784678035EEC619262C"`
    * Both have the same first 5 characters, which makes sense since there is only around 1 million combinations of 5 characters of a 16 character set.
      * `"7C4A8"`
2. Query (GET) the API with the last section of the path as these 5 characters.
  * `"https://api.pwnedpasswords.com/range/7C4A8"`
  * Returns over 477 results.
    * Since their database has over 500 million hashes, the pidgeon hole principle states that given a set of 500 million and a possibility space of 1 million (the first five letters) each possibility from the space should have around 500 elements from the set that match it.
    * So no matter which 5 letters you send, the server will send back around 500 results.
  * Results are formatted as follows:
    * `D09CA3762AF61E59520943DC26494F8941B:22390492`
      * The 6th - 40th character (remainder) of the hash
      * A colon followed by the "number of times this password has appeared as plaintext or a simple unsalted hash in a database leak" (Every leak has thousands of people with 123456 as their password, which explains why there are nowhere near 22 million site leaks in the database but it gives us a count of over 22 million)
  * As you can see, `"123456"` is found over 22 million times.
  * If you check the results for the remainder of our "strong password" hash it is nowhere to be found...
3. Think from the API perspective. I did the same request twice. How can it know whether I found a match or not. Did the server learn anything about my "strong password" through this GET request. No it did not. It can not possibly learn anything.
4. This property is called k-anonymity. So use this package (and the underlying API) with confidence and help PROTECT YOUR USERS FROM THEMSELVES! :-D
5. This package will do all those steps above for you automatically, so just pass in the string, and await the results. If there's a match, tell your user not to use that password. (Some recommend to only reject a password if the count is >=10 etc. otherwise you're blocking one password that one user used on one site that got hacked... however, I believe that you should reject this since it proves the user is reusing passwords... which is a big no-no.)
  * However, I do think it might be fine to allow count === 1 passwords... under the condition you warn the user of the match.

## Usage

```javascript
const pwnedPw = require('pwned-pw')

// returns a Promise
pwnedPw.check('123456').then(count => {
  console.log('Your pwned count is: ' + count)
  // Your pwned count is: 22390492
}).catch(error => {
  console.error('Your error is: ' + error.message)
})
```
====================== GIT HISTORY: ======================
c904222 HEAD@{0}: clone: from https://github.com/junderw/pwned-pw
commit c9042228243b1ad5977714548cffd5fcb9892bd8
Author: kinoshitajona <junderwood@bitcoinbank.co.jp>
Date:   Wed Sep 4 14:29:59 2019 +0900

    remove unneeded files from package

commit ee10407e8f4c598ecf964e1bd3b0f5a0f689b20e
Author: kinoshitajona <junderwood@bitcoinbank.co.jp>
Date:   Wed Sep 4 14:26:53 2019 +0900

    Add timeout to promise (default 5s)

commit 173b9c937ae4c98f8196b43ba0448a3acbb516cb
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Tue Jan 8 13:56:23 2019 +0900

    1.0.5

commit 6700deda1ef2906c992fc6231c51945b5c66f97e
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Tue Jan 8 13:49:41 2019 +0900

    Remove unneeded node reference

commit f4d8ff81717ed4a49e4216faa20d4e30be76bff5
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Tue Jan 8 12:21:54 2019 +0900

    1.0.4

commit 1f3a73557cdf398042ccf1004d8ca9132d0d2d84
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Tue Jan 8 12:13:50 2019 +0900

    Add TypeScript support

commit 73a49d402e2c31a1981b9ae254ac3c2d1b0be655
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Sun Dec 23 14:19:20 2018 +0900

    1.0.3

commit f129e069c824fa35ce6d29c7c5e5b033f0a65828
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Sun Dec 23 14:14:43 2018 +0900

    Add browser support (Except Edge)

commit ba703b10c31887d49042fed8ce3ce304197dd636
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Sat Dec 22 19:11:24 2018 +0900

    1.0.2

commit c20ac4bb66105e2e35c27cc4d5c7f5fcf5376dec
Merge: db0475e 80341c1
Author: Jonathan Underwood <junderwood@bitcoinbank.co.jp>
Date:   Sat Dec 22 19:10:07 2018 +0900

    Merge pull request #2 from junderw/addReadmeExplain
    
    Add explanation of API in README

commit 80341c1189068104287ae631c77b420d3d088ac9
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Sat Dec 22 19:09:22 2018 +0900

    Add explanation of API in README

commit db0475e589c3456c0c896c36882959234e84dd6d
Merge: c3bb799 7f9e180
Author: Jonathan Underwood <junderwood@bitcoinbank.co.jp>
Date:   Sat Dec 22 17:18:33 2018 +0900

    Merge pull request #1 from junderw/addTravis
    
    Add Travis CI

commit 7f9e18056597c313cd49d7f6893dedd0af54f0ab
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Sat Dec 22 17:16:52 2018 +0900

    Add Travis CI

commit c3bb799ed16637e626e717afa9f8f1d2e761e85f
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Wed Dec 19 20:00:25 2018 +0900

    1.0.1

commit 6e6d40d7ad006abf168b74ccee8c2578d30fdd8a
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Wed Dec 19 20:00:05 2018 +0900

    Add test

commit 198cc064d43aa61a8537f48230f4819e7ee004d6
Author: junderw <junderwood@bitcoinbank.co.jp>
Date:   Wed Dec 19 19:30:26 2018 +0900

    Initial commit
