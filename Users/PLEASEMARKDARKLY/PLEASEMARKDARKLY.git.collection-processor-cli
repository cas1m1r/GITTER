======================: FILES :======================
======================: README CONTENT :======================
# collection-processor-cli

Nodejs package to feed the contents of any "collection" or hundreds of files with credentials using the format of email [:;] sha per line of .txt files into a sqlite database. Simply untar "email.collection.tar.gz" into a folder or use the enclosed bash script (email_preprocessor.sh).

This package uses event-stream to tear through files. During development I tested many permuations of the below described data sets. This package performed well, without crashing nor running out of memory. The largest file tested was 4.1GB (upper limit of the packaged collection files) and the total files in the test suite was at the maximum Linux limit per folder. In short, this has processed well over 100,000,000 email records spanning 8,691 files, likely over what your email budget maybe able to handle.

# applications
I strongly condone the use of this code to process the [Collection #1-5](https://www.intego.com/mac-security-blog/collection-1-and-2-5-are-the-latest-massive-password-dumps/), however, if you do embark on this activity, please act responsibly. Aovid offensive behavior such as [this](https://www.troyhunt.com/password-reuse-credential-stuffing-and-another-1-billion-records-in-have-i-been-pwned/).

### If you want to buy me beer. BTC. 3Gjm838VRzhV8cp4zHecekhUrMPo1H4GJ6.

### "Test dataset"

```
large           216,053,550 (emails)
medium          586,199
medium          1,690,000
small           35,166
very small      6,000
```

## Clone this repository

```
git clone https://github.com/pleasemarkdarkly/collection-processor-cli/
```

## Installation

```
npm -i collection-processor-cli -g
```

## "Find" a folder full of tar.gz with credentials

```
./email_preprocessor.sh

You can use the following regex which will parse emails from files from the original Collection. 
grep -o '[[:alnum:]+\.\_\-]*@[[:alnum:]+\.\_\-]*' "$name" | sort | uniq -i > $newname
```

## Usage

Verbosity is defined by -d

```
-d DEBUG | INFO | ERROR | WARN
```

The most common usage pattern may look like the following.

```
collection-processor-cli -d DEBUG --sqlite --directory .

Usage: collection-processor-cli [options]

Commandline Collection email digest and validation application.

Options:
  -V, --version            output the version number
  -d, --debug <string>     DEBUG, ERROR, INFO, WARN (default: "ERROR")
  --sqlite                 use sqlite db, default: collection.db
  -f, --filename <string>  filename to process
  --directory <string>     directory to process (overide --filename) (default: "/Users/pleasemarkdarkly/Developer/emails")
  -e, --only-emails        ingest only emails
  -h, --help               output usage information
```

## Party

```
collection-processor-cli -d DEBUG --sqlite --directory /Volume/HDD/Collection1-6/
```

## Disclaimer

Author does not condone or promote the use of credential stuffing or use of stolen information. Shame on you.


====================== GIT HISTORY: ======================
be517e5 HEAD@{0}: clone: from https://github.com/pleasemarkdarkly/collection-processor-cli
commit be517e57197040cd0e962fe0e8911a8634c8348a
Author: pleasemarkdarkly <55382229+pleasemarkdarkly@users.noreply.github.com>
Date:   Wed Jan 5 19:48:19 2022 -0800

    Update README.md

commit 817252292d1566286b5f6546d2f5ba2883516ede
Author: pleasemarkdarkly <55382229+pleasemarkdarkly@users.noreply.github.com>
Date:   Wed Jan 5 19:44:16 2022 -0800

    Update README.md

commit f0afb157ecc417c018638ff700007d9ee017a0e5
Author: Pretty Please Mark Darkly <55382229+pleasemarkdarkly@users.noreply.github.com>
Date:   Tue Mar 10 00:21:30 2020 -0700

    Added regex
    
    Added regex for parsing emails from the Collection

commit 5157680bb74c89b9952fcf2eca44dde8c20fc196
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Thu Feb 6 04:00:06 2020 +0700

    added sql docker container, migrating from sqlite to mysql

commit 474a327582fac3f2557d9478b22015ea762e898d
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 12:25:07 2020 +0700

    0.0.7

commit a180b709335f06ad9bf606d6e1750a743cdd7c2c
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 12:24:38 2020 +0700

    updated files

commit ecc2e6c418634bb333889883eab73119bdf9788a
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 01:08:28 2020 +0700

    updated files

commit af1bb570e0d290da5583df1f7ee265a0a77477f0
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 01:07:21 2020 +0700

    updated files

commit 282977649de63b9d7e9f8183af8b398faa18b852
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 00:58:40 2020 +0700

    updated files

commit e6baaa2f0875719d2ad757cd40b21a58a5aa0ea1
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 00:55:59 2020 +0700

    update

commit 299ac1040b45d0c29f8b77745270d24723e20bb1
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 00:54:32 2020 +0700

    update

commit a84aaf91bec72821301e65bff8a1cf8cc52ea8b2
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 00:38:13 2020 +0700

    added ReadMe

commit e5db6217783e43aa821aa4dbaae4c8c3b6d2079c
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Wed Feb 5 00:17:41 2020 +0700

    rewritten email digestion and cmd line arguments. and sqlite support

commit af121505675f9f7796b91708faf9234bb127c021
Author: Mark Phillips <pretty@pleasemarkdarkly.com>
Date:   Tue Feb 4 23:58:08 2020 +0700

    rewritten email digestion and cmd line arguments. and sqlite support
