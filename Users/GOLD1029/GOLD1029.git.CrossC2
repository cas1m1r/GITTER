======================: FILES :======================
.
├── changelog_en.html
├── changelog_zh.html
├── CrossC2Kit
│   ├── CrossC2Kit.cna
│   ├── CrossC2Kit_Loader.cna
│   ├── gather
│   │   ├── browser
│   │   │   ├── cc2_chrome_dump.dylib
│   │   │   ├── cc2_safari_dump.dylib
│   │   │   └── safari_dump.cna
│   │   ├── keychain
│   │   │   ├── cc2_keychain_dump
│   │   │   ├── cc2_keychain_list.dylib
│   │   │   └── keychain_dump.cna
│   │   ├── keylogger
│   │   │   └── osx
│   │   │       ├── cc2_keylogger.dylib
│   │   │       └── keylogger_osx2.cna
│   │   ├── message
│   │   │   ├── cc2_iMessage_dump.dylib
│   │   │   └── iMessage_dump.cna
│   │   ├── password
│   │   │   └── mimipenguin
│   │   │       ├── cc2_mimipenguin.cna
│   │   │       ├── mimipenguin.so
│   │   │       └── mimipenguin_x32.so
│   │   └── prompt
│   │       └── osx
│   │           ├── cc2_prompt_spoof.dylib
│   │           └── cc2_prompt_spoof_dylib.cna
│   ├── jobs
│   │   ├── cc2_jobs32.so
│   │   ├── cc2_jobs.cna
│   │   ├── cc2_jobs.dylib
│   │   └── cc2_jobs.so
│   ├── patch
│   │   ├── install_name_tool
│   │   ├── libpatchelf32.so
│   │   └── libpatchelf.so
│   ├── proxy
│   │   └── frp
│   │       ├── cc2_frp.cna
│   │       ├── crossc2_frp.dylib
│   │       ├── crossc2_frp.so
│   │       └── CrossC2Kit.cna
│   ├── rootkit
│   │   └── auth
│   │       ├── auth_rootkit_mgr32.so
│   │       ├── auth_rootkit_mgr.so
│   │       ├── auth_rootkit_module32.so
│   │       ├── auth_rootkit_module.so
│   │       ├── auth_rootkit_remove32.so
│   │       ├── auth_rootkit_remove.so
│   │       ├── cc2_auth.cna
│   │       ├── cc2_ssh.cna
│   │       ├── ssh_rootkit.dylib
│   │       ├── ssh_rootkit_mgr32.so
│   │       ├── ssh_rootkit_mgr.dylib
│   │       ├── ssh_rootkit_mgr.so
│   │       ├── ssh_rootkit_module32.so
│   │       └── ssh_rootkit_module.so
│   ├── scanner
│   │   └── ServerScan
│   │       ├── linux
│   │       │   ├── ELF
│   │       │   │   ├── portscan
│   │       │   │   ├── portscan386
│   │       │   │   ├── serverscan
│   │       │   │   └── serverscan386
│   │       │   └── SO
│   │       │       ├── crossc2_portscan.so
│   │       │       └── crossc2_serverscan.so
│   │       └── serverscan.cna
│   └── script
│       └── runScript.cna
├── CrossC2Kit_demo
│   ├── cc2_keystrokes_demo.c
│   ├── cc2_keystrokes_demo.cna
│   ├── cc2_portscan_demo.c
│   ├── cc2_portscan_demo.cna
│   ├── CrossC2Kit.cna
│   ├── main.c
│   ├── Makefile
│   └── mimipenguin
│       ├── CrossC2Kit.cna
│       ├── include
│       │   ├── dbg.h
│       │   ├── max.h
│       │   ├── scanner.h
│       │   ├── targets.h
│       │   └── users.h
│       ├── LICENSE
│       ├── Makefile
│       ├── mimipenguin.cna
│       ├── mimipenguin.so
│       ├── mimipenguin_x32.so
│       ├── README.md
│       └── src
│           ├── mimipenguin.c
│           ├── scanner.c
│           ├── targets.c
│           └── users.c
├── crossc2kit_latest_en
├── crossc2kit_latest_zh
├── media
│   ├── 15718834682843
│   │   └── 15794546043572.jpg
│   ├── 15794884596715
│   │   ├── 15794993795360.jpg
│   │   └── 15795001494711.jpg
│   ├── 15824278372797
│   │   ├── 15824282351545.jpg
│   │   └── 15824282632072.jpg
│   ├── 15848885324084
│   │   ├── 15848892759774.jpg
│   │   ├── 15848892902723.jpg
│   │   └── 15848895853537.jpg
│   ├── 15854585486601
│   │   ├── 15854592406527.jpg
│   │   ├── 15854593957704.jpg
│   │   └── 15854601104042.jpg
│   └── 15901534124389
│       ├── 15901617930412.jpg
│       ├── 15985513904454.jpg
│       ├── 16041501958652.jpg
│       └── 16041502298949.jpg
├── protocol_demo
│   ├── c2profile.c
│   └── https.profile
├── README.md
├── README_zh.md
├── src
│   ├── autoupdate.jar
│   ├── CrossC2.cna
│   ├── genCrossC2.Linux
│   ├── genCrossC2.MacOS
│   └── genCrossC2.Win.exe
└── version

36 directories, 102 files
======================: README CONTENT :======================
# CrossC2 framework

[README](README.md) | [中文文档](README_zh.md)

🚀 For a faster way, see **cna** introduction [GO📌](#cna-plugin-way)

🔥 **Linux** & **MacOS** supports no file landing, load and execute from memory **dynamic library** or **executable file** [GO📖](https://gloxec.github.io/CrossC2/en/api/)

🔥 Flexibly customize the data return type of the execution file, **portscan**, **screenshot**, **keystrokes**, **credentials** and other user-defined development to achieve more convenient implementation [GO📖](https://gloxec.github.io/CrossC2/en/api/commons.html)    ( [Sample: GO📌](#CustomExtension) )

🔥 Custom communication protocol [GO📖](https://gloxec.github.io/CrossC2/en/protocol/)

🔥 Now supports lateral movement [GO📌](#Lateral-movement:-Usage)

🔥 Now supports loading scripts from memory [GO📌](#Run script-in-memory)

🎉 **Android** & **iPhone** support [GO📌](#Mobile)


# CrossC2 framework - Generator CobaltStrike's cross-platform beacon

```

	 ▄████▄   ██▀███   ▒█████    ██████   ██████     ▄████▄   ██████▄
	▒██▀ ▀█  ▓██ ▒ ██▒▒██▒  ██▒▒██    ▒ ▒██    ▒    ▒██▀ ▀█        ██░
	▒▓█    ▄ ▓██ ░▄█ ▒▒██░  ██▒░ ▓██▄   ░ ▓██▄      ▒▓█        █████▒
	▒▓▓▄ ▄██▒▒██▀▀█▄  ▒██   ██░  ▒   ██▒  ▒   ██▒   ▒▓▓▄ ▄█ ░▒██
	▒ ▓███▀ ░░██▓ ▒██▒░ ████▓▒░▒██████▒▒▒██████▒▒   ▒ ▓███▀  ░▒▓█████▓
	░ ░▒ ▒  ░░ ▒▓ ░▒▓░░ ▒░▒░▒░ ▒ ▒▓▒ ▒ ░▒ ▒▓▒ ▒ ░   ░ ░▒ ▒    ░▒ ░▓ ░░
	  ░  ▒     ░▒ ░ ▒░  ░ ▒ ▒░ ░ ░▒  ░ ░░ ░▒  ░ ░     ░  ▒     ░ ░░ ░
	░          ░░   ░ ░ ░ ░ ▒  ░  ░  ░  ░  ░  ░  CrossC2 v2.0 @hook
	░ ░         ░         ░ ░        ░        ░     ░ ░          ░
	░                                               ░   
```

![](media/15901534124389/15985513904454.jpg)
![](media/15848885324084/15848892759774.jpg)

# Description

A security framework for enterprises and Red Team personnel, supports CobaltStrike's penetration testing of other platforms (Linux / MacOS / ...), supports custom modules, and includes some commonly used penetration modules.

`Only for internal use by enterprises and organizations, this framework has a certain degree of instability. Non-professionals are not allowed to use it. Anyone shall not use it for illegal purposes and profitability. Besides that, publishing unauthorized modified version is also prohibited, or otherwise bear legal responsibilities.`



|  | Windows | Linux | MacOS | iOS | Android | Embedded |
| --- | --- | --- | --- | --- | --- | --- |
| Run Env (x86) |  | √ |  |  |  |  |
| Run Env (x64) | √ | √ | √ |  |  |  |
| gen beacon (x86) |  | √ |  |  | √ |  |
| gen beacon (x64) |  | √ | √ |  |  |  |
| gen beacon (armv7) |  |  |  | ⍻  | √ |  |
| gen beacon (arm64) |  |  |  | √ | √ |  |
| gen beacon (mips[el]) |  |  |  |  |  | ⍻ |

Restricted description:
* CobaltStrike: currently only supports the last version of cs 3.14(bug fixs) and 4.x versions are supported (see the cs4.1 branch for details).
* Linux: For particularly old systems, you can choose "Linux-GLIBC" option in cna (around 2010)
* MacOS: Latest systems only support 64-bit programs
* iOS: sandbox, restricted cmd
* Embedded: only *nix
* ⍻ : Loader is still in progress

# Install & Usage

> Download:

* **CrossC2.cna**
* **genCrossC2** `(If it is a Windows system, download genCrossC2.Win.exe)`

1. choose `Script Manager`，add `CrossC2.cna` (If successfully installed, the menu bar will have an additional item `CrossC2`)
2. Modify the `genCC2` path in the` CrossC2.cna` script to the **real path**

```
77:    $genCC2 = "/xxx/xx/xx/genCrossC2.MacOS";  # <-------- fix
```

> Create listener and copy key:

For some reasons, only HTTPS beacon is currently supported.

**Copy `.cobaltstrike.beacon_keys` from the cs directory on the server to the local directory.**

## Reference documents: [📖 Wiki](https://gloxec.github.io/CrossC2/en/usage/)

## Module: API introduction [📖 Wiki](https://gloxec.github.io/CrossC2/en/api/)

It adopts the method of loading memory without landing, and supports dynamic libraries (.so/.dylib) and executable files (ELF/MachO).
`⚠️: Although the file is loaded directly from memory, the process can be viewed in ps when the executable file is passed in, but the process name can be customized.`

The type of output information can be freely specified at the time of execution. The return type has been predetermined and can be docked with the native return data type of CS.
`⚠️: For special data types, such as passwords, port scan results, etc., please refer to the information returned by the native function of cs, which will be matched according to the regular.`

1. Password dump module: cc2_mimipenguin uses the open source project MimiPenguin2.0, see CrossC2Kit/ mimipenguin/mimipenguin.cna

2. Authentication backdoor modules: cc2_auth, cc2_ssh sudo / su / passwd and other authentication backdoors, ssh is connected and the credentials to connect to other hosts will be recorded.

3. Information collection modules: cc2_safari_dump, cc2_chrome_dump, cc2_iMessage_dump, cc2_keychain_dump access records of common browsers, as well as iMessage chat content and authentication credentials saved in the keychain will be obtained.

4. Traffic proxy module: cc2_frp supports fast TCP/KCP(UDP) reverse socks5 encrypted traffic proxy.

5. Keylogger module: cc2_keylogger records user's keyboard input.

6. Network detection module: cc2_portscan, cc2_serverscan for port scanning and service version scanning.

7. Privilege promotion module: cc2_prompt_spoof induces deception to obtain user account password.

8. Task management module: cc2_job manages the modules running in memory.

9. ...

## Custom communication protocol: API introduction [📖 Wiki](https://gloxec.github.io/CrossC2/en/protocol/)

Can more easily realize C2Profile configuration and custom communication protocol TCP / UDP and so on.

## Lateral movement

1. Generate beacon of `Linux-bind` / `MacOS-bind` type
2. The target in the intranet runs `./MacOS-bind.beacon <port>` to start the service
3. Run `connect <targetIP>:<port>` in the session of China Unicom


## Run script in memory

The script interpreter such as **bash** / **python** / **ruby** / **perl** / **php** in the host can be called directly in the session to execute the script passed into the memory.
`There is no information in the process, all running content is transferred from the memory to the interpreter`
1. python c:\getsysteminfo.py
2. python import base64;print base64.b64encode('whoami'); print 'a'*40
3. php <?php phpinfo()?>

Try to load local script:
![](media/15901534124389/16041501958652.jpg)

Try to run the scripting language directly:
![](media/15901534124389/16041502298949.jpg)



# Coming soon

1. Rich C2Profile support ✔︎ (Choose custom HTTP module when CNA generates beaocn)
2. Staged Type Shellcode Generation ✔︎ (Only Linux is temporarily supported, and stagerServer needs to be started on the server)
3. http-proxy (auth) & socks proxy back connection support
4. Proxy-Pivots  ✔︎ (Temporarily adopt the method of connecting back to socks proxy)
5. node beacon? (Single node type, can host other beacon without relying on teamserver)

# Examples

## Mobile
![](media/15848885324084/15848892759774.jpg)

![](media/15848885324084/15848892902723.jpg)

## MacOS & Linux

![](media/15794884596715/15795001494711.jpg)
![](media/15824278372797/15824282351545.jpg)


## CustomExtension

Develop dynamic libraries and customize data return types, such as implementing some built-in functions.

### keystrokes
![](media/15854585486601/15854592406527.jpg)

### credentials
![](media/15854585486601/15854601104042.jpg)

### portscan
![](media/15854585486601/15854593957704.jpg)


# ChangeLog

## release v2.1 :

* +support Support for parsing and executing scripts from memory
* +support Support CobaltStrike 4.1 (see cs4.1 branch for details)

## release v2.0 :

* -fix Fix the problem of path errors caused by backslashes when uploading files in the file management office
* -fix Long-term testing in various scenarios in the real environment, fixing some hidden problems, and now more stable
* +support Support for lower kernel version systems
* +support Environment variables are automatically set at startup
* +support Delete sensitive env records at startup
* +support The background service process can be linked to the init process at startup
* +support Increase session spawn function
* +support Increase the function of session setting environment variables
* +support Increase the privilege escalation function of session getsystem
* +support Increase session analysis function to handle multiple merge tasks
* +support Increase Mac & Linux lateral movement function

## release v1.5 :

* -fix genCrossC2's bug about protocol rebinding.

## release v1.4 :

* -fix Linux daemon process and joblist display problem.

## release v1.3 :

* +support Support custom communication protocol (HTTP, TCP, UDP...) .
* +support A new joblist module has been added to manage programs running without files in persistent memory.
* +support Reverse proxy module{TCP/KCP(UDP)} that executes without files in memory.


md5(genCrossC2.Linux) = 221b3ede4e78fee80f59946f116d7245

md5(genCrossC2.MacOS) = d216cad3fe3c25ead46b85c7ad7051f1

md5(genCrossC2.Win.exe) = a573506e8825b46b041ac3b9307a656b

## release v1.2 :

* +support Support manual selection of key files.
* +support Support to generate shellcode.
* -change No longer rely on cobaltstrike.jar (plug-ins can be placed in any directory).
* -change More flexible and convenient Script Unix Web Delivery.

md5(genCrossC2.Linux) = 2ef7250cc3787d3cbd1e6f99c3c434aa

md5(genCrossC2.MacOS) = eaabde94dd7fed8dabb37cd67a1171c4

md5(genCrossC2.Win.exe) = c65ac808ed3a1000b3ff4ebb8c48ea4e

## release v1.1 :

* -fix Multi-language garbled problem fix for memory load execution function

md5(genCrossC2.Linux) = 2347ed6e30e4655b793a6dbb4d33d25c

md5(genCrossC2.MacOS) = f530333500a76fe228864f8901af4104

md5(genCrossC2.Win.exe) = c223e31b2674a8a11d3254f92259e87a

## release v1.0 :

* -fix Test multiple times for a long time in multiple scenarios in real environment, fix some hidden problems, now more stable
* +support Linux & MacOS Supports no file landing, loading and executing from memory
* +support Reserved CS built-in data types, richer user-defined plug-in return data types, free and easy to implement 'portscan' and other native functions

md5(genCrossC2.Linux) = 12295998d4bffd5b4c4a411fb33428bb

md5(genCrossC2.MacOS) = c88ce9df47529b243e2215a866d445c5

md5(genCrossC2.Win.exe) = 51d1814f1ebbab634bce0373ceb7cee6

## release v0.4 :

* -change Multi-threaded background when shell commands are executed
* -change Redirect error output to standard output when shell command is executed.
* +support Add background file download function.

md5(genCrossC2.Linux) = b2e34f721ec2543b6625e33c8c2935df

md5(genCrossC2.MacOS) = 4e38a9d9a3eeff309648afc02e2e7664

## release v0.3 :

* +support Compatibility with older versions of GLIBC on older systems Linux (around 2010).

## release v0.2 : 

* -fix genCrossC2.Linux crash.
* -fix uploading large file error.
* +support GUI file manager.

md5(genCrossC2.Linux) = 8256374d88c2149efc102aff7e90b3f9

md5(genCrossC2.MacOS) = 08fce0a5d964a091d8bf2344d7ab809e

## release v0.1 : 

* Support Linux & MacOS beacon generation.

md5(genCrossC2.Linux) = f4c0cc85c7cdd096d2b7febedc037538

md5(genCrossC2.MacOS) = 79fff0505092fc2055824ed1289ce8f9



====================== GIT HISTORY: ======================
2e13e02 HEAD@{0}: clone: from https://github.com/gold1029/CrossC2
commit 2e13e020727f9dcb38c51a1e787a1552ca592d00
Author: gloxec <gloxec@gmail.com>
Date:   Wed Dec 9 14:40:49 2020 +0800

    Update custom communication protocol demo

commit af4d49c4c1f7b686cbfa45d2db1005e35c84599c
Author: gloxec <gloxec@gmail.com>
Date:   Fri Nov 20 13:49:21 2020 +0800

    Add "File Browser" menu to GUI

commit fd0c60a17f6fac5ac7ce5ee33d6e58b56da70157
Author: gloxec <gloxec@gmail.com>
Date:   Sat Oct 31 21:32:25 2020 +0800

    CrossC2 v2.1 - support cs4.1 and running scripts from memory

commit 04841d54581cb3a797a74275c453d13b29f3e284
Author: gloxec <gloxec@gmail.com>
Date:   Wed Oct 28 15:12:13 2020 +0800

    supports running scripts from memory

commit 27b0f2f711f37c0c6473a53c6c4f21df6314fe1b
Author: gloxec <gloxec@gmail.com>
Date:   Tue Oct 27 19:31:35 2020 +0800

    CrossC2 v2.1 - supports running scripts from memory

commit ad0fc2cc1b711edb1f46ca2509a04a8701c4a23b
Author: gloxec <gloxec@gmail.com>
Date:   Tue Oct 27 13:40:48 2020 +0800

    Update genCrossC2.Win.exe

commit 6e5e3c4866f966c645360b8e3802947f6c770c3e
Author: gloxec <gloxec@gmail.com>
Date:   Mon Sep 7 16:01:32 2020 +0800

    CrossC2 autoupdate

commit cf3855ccd2d1eb03290998df1f8888b2d90126f5
Author: gloxec <gloxec@gmail.com>
Date:   Mon Sep 7 15:43:13 2020 +0800

    CrossC2 autoupdate

commit c36b71f65bc5b0ebe1fc746979126614602e5464
Author: gloxec <gloxec@gmail.com>
Date:   Mon Sep 7 11:44:14 2020 +0800

    custom communication protocol demo

commit bfd79fa3692381e8ea655406c7782c3994bc2420
Author: gloxec <gloxec@gmail.com>
Date:   Fri Aug 28 02:52:27 2020 +0800

    CrossC2 v2.0 - 支持横向移动

commit b4e1420d833b0850d2f4b3e218a0a971ce374acb
Author: gloxec <gloxec@gmail.com>
Date:   Fri Aug 28 02:52:16 2020 +0800

    CrossC2 v2.0 - supports lateral movement

commit 342c3909ea4b9261a7898923aa4844b6e9f761e0
Author: gloxec <gloxec@gmail.com>
Date:   Fri Aug 28 02:34:12 2020 +0800

    CrossC2 v2.0 -  支持横向移动

commit 6d904c7152386302f08706ec795ac8e7bd992f21
Author: gloxec <gloxec@gmail.com>
Date:   Fri Aug 28 02:33:59 2020 +0800

    CrossC2 v2.0 -  supports lateral movement

commit 018e7b6063710847d9d9794b83a4f16f5dca6b19
Author: gloxec <gloxec@gmail.com>
Date:   Thu Aug 27 14:50:09 2020 +0800

    CrossC2 v2.0

commit bb8e30802e0b950ab176a60a97b3f58428d3d369
Author: gloxec <gloxec@gmail.com>
Date:   Mon Jun 1 23:43:18 2020 +0800

    CrossC2 v1.5 - Fix genCrossC2's bug about protocol rebinding

commit 9b68c9f57a941b5ba4335040ad764de850e40862
Author: gloxec <gloxec@gmail.com>
Date:   Fri May 29 23:29:41 2020 +0800

    CrossC2 v1.4 - fix Linux daemon process and joblist display problem

commit 731208521412fae7b46e4b35d41147ad6a128d36
Author: gloxec <gloxec@gmail.com>
Date:   Fri May 29 23:11:13 2020 +0800

    CrossC2Kit update

commit 4d913417b74a0bb16b14e5f132d1760d556760a9
Author: gloxec <gloxec@gmail.com>
Date:   Fri May 29 22:12:43 2020 +0800

    CrossC2Kit add

commit fa33ea36c68a7c5cc4aee07f0ddef27e812bbde9
Author: gloxec <gloxec@gmail.com>
Date:   Wed May 27 14:23:41 2020 +0800

    update v1.3 Protocol API reference

commit efeb8e5dc6f82d572528f6ccf11cf0b46c8d32f0
Author: gloxec <gloxec@gmail.com>
Date:   Wed May 27 14:18:33 2020 +0800

    update Protocol API reference

commit d1edbacc296cd8497755eb8af37057539c889c42
Author: gloxec <gloxec@gmail.com>
Date:   Sat May 23 01:39:18 2020 +0800

    update README for v1.3
    
    fiix

commit 3ff0c94a625c52ec4f28c9fc040bb4a251772e76
Author: gloxec <gloxec@gmail.com>
Date:   Sat May 23 01:33:29 2020 +0800

    update README for v1.3

commit e4b13e8a9ea7f8add25bd570180d2412759328c7
Author: gloxec <gloxec@gmail.com>
Date:   Sun May 17 01:08:37 2020 +0800

    CrossC2 v1.3 - Support custom communication protocol

commit ac4ba1b0f93ef2595dc25bcf8397512101b3a704
Author: gloxec <gloxec@gmail.com>
Date:   Sun May 17 01:04:45 2020 +0800

    Update CrossC2.cna

commit 9429ce839b7e46d0e8c87a4b083cf1eed55eb843
Author: gloxec <gloxec@gmail.com>
Date:   Thu May 14 17:54:20 2020 +0800

    More flexible and convenient

commit cacc40b9264ab1d6d4ae9197c1a8c801879cb8dd
Author: gloxec <gloxec@gmail.com>
Date:   Sat Apr 11 20:25:52 2020 +0800

    CrossC2 v1.1 - Multi-language garbled problem fix for memory load execution function
    
    fix CrossC2.cna

commit d5356cb21542a2c457673f776ecd04f8179f2c8e
Author: gloxec <gloxec@gmail.com>
Date:   Sat Apr 11 20:15:22 2020 +0800

    CrossC2 v1.1 - Multi-language garbled problem fix for memory load execution function

commit 98e029bd344de67ecd9ce277bb6c3703a53b45d7
Author: gloxec <gloxec@gmail.com>
Date:   Sat Apr 11 20:14:36 2020 +0800

    release v1.1
    
    fix Multi-language garbled problem fix for memory load execution function

commit 2c3013a884e44d524f831b0cd32cd7aa388caddc
Author: gloxec <gloxec@gmail.com>
Date:   Sat Apr 11 20:12:59 2020 +0800

    fix demo

commit f76bef2b897558b9c3952eddd046f9cfd4dfee57
Author: gloxec <gloxec@gmail.com>
Date:   Wed Apr 1 14:05:31 2020 +0800

    release v1.0 Supports dynamic loading of execution API from memory
    
    add windows platfrom

commit de98259f899f48390e537cf3df8c120505ac985c
Author: gloxec <gloxec@gmail.com>
Date:   Wed Apr 1 13:54:11 2020 +0800

    CrossC2 v1.0 - add genCrossC2.Win

commit 37bfd217a86af140ee803becee52d4f2c39a7a1a
Author: gloxec <gloxec@gmail.com>
Date:   Mon Mar 30 15:37:06 2020 +0800

    release v1.0 Supports dynamic loading of execution API from memory
    
    add MimiPenguin2

commit 962e0553c2f67e5691f1fabf5493f64f60f00f43
Author: gloxec <gloxec@gmail.com>
Date:   Mon Mar 30 15:24:30 2020 +0800

    add login password dump module "mimipenguin"

commit 293d3f7ef2eba05458f8175f286bbcb1f235f3a4
Author: gloxec <gloxec@gmail.com>
Date:   Mon Mar 30 14:06:44 2020 +0800

    Dynamically loaded from memory demo

commit a2399bca7b807e94cf8c7e49201aee554fc7f9c0
Author: gloxec <gloxec@gmail.com>
Date:   Mon Mar 30 12:57:46 2020 +0800

    CrossC2 v1.0

commit 5ba795c421e5d04c96608b62e03e2b7bdcb645c4
Author: gloxec <gloxec@gmail.com>
Date:   Sun Mar 29 19:54:40 2020 +0800

    release v1.0 Supports dynamic loading of execution API from memory
    
    fix

commit 53940a404a69139bfeaef16381684835101e9f74
Author: gloxec <gloxec@gmail.com>
Date:   Sun Mar 29 19:49:38 2020 +0800

    release v1.0 Supports dynamic loading of execution API from memory

commit 0d498306b57e2176d1100848b08dbd975296aefa
Author: hooooooooooook <gloxec@gmail.com>
Date:   Tue Mar 24 11:24:56 2020 +0800

    more powerful cna
    
    fix

commit 8d3e0aa7949a4ad03a77c9ef752947788d3ee751
Author: hooooooooooook <gloxec@gmail.com>
Date:   Tue Mar 24 11:19:17 2020 +0800

    more powerful cna
    
    fix

commit fed486c3d1f8b947df37f7d985b2ef83083999b3
Author: gloxec <gloxec@gmail.com>
Date:   Sun Mar 22 23:32:24 2020 +0800

    more powerful cna

commit 8b7667a8dc309e38541dc3f84168bae95df2e292
Author: gloxec <gloxec@gmail.com>
Date:   Sun Mar 22 23:22:32 2020 +0800

    support iPhone & Android

commit ad037078c49614a3310167db1d8a6e048ecaba46
Author: gloxec <gloxec@gmail.com>
Date:   Sun Feb 23 11:36:59 2020 +0800

    Add background file download function
    
    Add background file download function

commit 3abb51df02bd05d7356a0e195cf1dae97ba9bafa
Author: gloxec <gloxec@gmail.com>
Date:   Sat Feb 22 21:43:40 2020 +0800

     Added support for lower version GLIBC

commit 2990cadbf5fe7f7370dd2313fffa74318107679b
Author: gloxec <gloxec@gmail.com>
Date:   Sun Feb 9 23:38:33 2020 +0800

    Update README

commit 4f0ded644fc97dbe192cab2caec573bf6ce270aa
Author: gloxec <gloxec@gmail.com>
Date:   Sun Feb 9 23:33:29 2020 +0800

    Update README_zh.md

commit 0fe9474ee6431d0a6664f7efbba3483901b8f31e
Author: gloxec <gloxec@gmail.com>
Date:   Sun Feb 9 23:32:59 2020 +0800

    update README

commit 85bf3459ff754dfa3c474732a06c8505583d47aa
Author: gloxec <gloxec@gmail.com>
Date:   Sun Feb 9 22:57:57 2020 +0800

    support GUI file manager and uploading large file

commit e61a7f11f45f1030add2580fffd5f9b9731f97e8
Author: gloxec <gloxec@gmail.com>
Date:   Sun Feb 9 22:56:38 2020 +0800

    update

commit 4128778db480df30f4ce30aca4ea73b8345f0ef0
Author: gloxec <gloxec@gmail.com>
Date:   Fri Jan 24 11:22:31 2020 +0800

    release 1
    
    fix Linux beacon crash.

commit ea5bb46f8f07857401f51c906cd472d5577915a7
Author: gloxec <gloxec@gmail.com>
Date:   Mon Jan 20 17:49:51 2020 +0800

    add c2profile
    
    example c2profile

commit 200a23ad1d96262a292299a5925d37bbfd5c3031
Author: gloxec <gloxec@gmail.com>
Date:   Mon Jan 20 16:05:42 2020 +0800

    CrossC2 binary

commit 575ee795e56578244bdf8e86ef091830743444f6
Author: gloxec <gloxec@gmail.com>
Date:   Mon Jan 20 14:32:31 2020 +0800

    update

commit 749f7397808c31d445eba8903e541382261d21b4
Author: gloxec <gloxec@gmail.com>
Date:   Mon Jan 20 14:25:05 2020 +0800

    update README

commit 490bcbb5a6f8aebdea9cd70d026e782e45820c57
Author: hooooooooooook <gloxec@gmail.com>
Date:   Fri Jan 17 00:40:07 2020 +0800

    Update README.md

commit 542aae4bff0ae7c3ab9ddedf84917d6a33d74bc5
Author: hooooooooooook <gloxec@gmail.com>
Date:   Fri Jan 17 00:39:10 2020 +0800

    Initial commit
