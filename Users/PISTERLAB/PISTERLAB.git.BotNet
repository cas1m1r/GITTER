======================: FILES :======================
BotNet
├── 6tisch-simulator
│   ├── bin
│   │   ├── check_config_json.py
│   │   ├── compute_kpis.py
│   │   ├── extract_config_json.py
│   │   ├── __init__.py
│   │   ├── mergeLogs.py
│   │   ├── plot.py
│   │   └── runSim.py
│   ├── bitbucket-pipelines.yml
│   ├── gui
│   │   ├── backend
│   │   │   ├── get_git_info
│   │   │   ├── __init__.py
│   │   │   ├── __main__.py
│   │   │   ├── routes.py
│   │   │   ├── sim.py
│   │   │   ├── start
│   │   │   ├── start.py
│   │   │   ├── test
│   │   │   │   ├── __init__.py
│   │   │   │   ├── test_log_notification.py
│   │   │   │   └── test_sim.py
│   │   │   └── utils.py
│   │   ├── backend.config.json
│   │   ├── dist
│   │   │   ├── css
│   │   │   │   └── chunk-vendors.ab070236.css
│   │   │   ├── favicon.ico
│   │   │   ├── index.html
│   │   │   └── js
│   │   │       ├── app.1eb97c2e.js
│   │   │       ├── app.1eb97c2e.js.map
│   │   │       ├── chunk-vendors.3fc01c7e.js
│   │   │       └── chunk-vendors.3fc01c7e.js.map
│   │   ├── LICENSE
│   │   └── WEBAPP_COMMIT_INFO.txt
│   ├── Jenkinsfile
│   ├── LICENSE
│   ├── README.md
│   ├── SimEngine
│   │   ├── Connectivity.py
│   │   ├── __init__.py
│   │   ├── Mote
│   │   │   ├── app.py
│   │   │   ├── __init__.py
│   │   │   ├── MoteDefines.py
│   │   │   ├── Mote.py
│   │   │   ├── radio.py
│   │   │   ├── rpl.py
│   │   │   ├── secjoin.py
│   │   │   ├── sf.py
│   │   │   ├── sixlowpan.py
│   │   │   ├── sixp.py
│   │   │   ├── trickle_timer.py
│   │   │   └── tsch.py
│   │   ├── SimConfig.py
│   │   ├── SimEngine.py
│   │   ├── SimLog.py
│   │   └── SimSettings.py
│   ├── tests
│   │   ├── conftest.py
│   │   ├── __init__.py
│   │   ├── test_app.py
│   │   ├── test_check_config_json.py
│   │   ├── test_compute_kpis.py
│   │   ├── test_connectivity_k7.py
│   │   ├── test_connectivity.py
│   │   ├── test_discreteeventengine.py
│   │   ├── test_dummy.py
│   │   ├── test_fixture.py
│   │   ├── test_fragmentation.py
│   │   ├── test_mote_addr.py
│   │   ├── test_random_seed.py
│   │   ├── test_rpl_of_best_link_pdr.py
│   │   ├── test_rpl.py
│   │   ├── test_runsim.py
│   │   ├── test_scenario.py
│   │   ├── test_secjoin.py
│   │   ├── test_sf.py
│   │   ├── test_sim_config.py
│   │   ├── test_singleton.py
│   │   ├── test_sixp.py
│   │   ├── test_trickle_timer.py
│   │   ├── test_tsch_clock.py
│   │   ├── test_tsch.py
│   │   ├── test_tsch_slotframe.py
│   │   └── test_utils.py
│   └── traces
│       └── grenoble.k7.gz
├── botnet
│   ├── assets
│   │   ├── sim-dynam.png
│   │   ├── sim-network.png
│   │   └── teaser.png
│   └── scripts
│       ├── 6tisch_dual_vis.sh
│       ├── 6tisch_no_vis.sh
│       ├── BotNetVisualizer.py
│       ├── plot.py
│       ├── plotting.ipynb
│       └── swarmsim_propagation.sh
├── conf
│   ├── 6tisch.json
│   ├── conf.yaml
│   └── swarmsim.yaml
├── environment.yml
├── README.md
└── swarmsimmaster
    ├── check_env.py
    ├── comms_env.py
    ├── communication.py
    ├── components
    │   ├── generators
    │   │   ├── csv
    │   │   │   ├── agent_tracking_generator.py
    │   │   │   ├── csv_generator.py
    │   │   │   ├── __init__.py
    │   │   │   └── passing_generator.py
    │   │   ├── __init__.py
    │   │   └── plot
    │   │       ├── __init__.py
    │   │       └── plot_generator.py
    │   ├── grids
    │   │   ├── ccp.py
    │   │   ├── cubic.py
    │   │   ├── grid.py
    │   │   ├── __init__.py
    │   │   ├── quadratic.py
    │   │   └── triangular.py
    │   ├── gui
    │   │   ├── default.py
    │   │   ├── __init__.py
    │   │   └── template.py
    │   ├── __init__.py
    │   ├── models
    │   │   ├── 2d_agent.obj
    │   │   ├── 2d_hex_item.obj
    │   │   ├── 2d_location.obj
    │   │   ├── 2d_quad_item.obj
    │   │   ├── 3d_agent_low_poly.obj
    │   │   ├── 3d_agent.obj
    │   │   ├── 3d_ccp_item.obj
    │   │   ├── 3d_cube_item.obj
    │   │   ├── 3d_location_2.obj
    │   │   └── 3d_location.obj
    │   ├── scenario
    │   │   ├── 6tisch_scenario.py
    │   │   ├── agent_item_location.py
    │   │   ├── agents_items_locations_ring.py
    │   │   ├── center_line_flock.py
    │   │   ├── center_radius_flock.py
    │   │   ├── dual_vis_tisch.py
    │   │   ├── edge_radius_flock.py
    │   │   ├── formation_ctrl.py
    │   │   ├── __init__.py
    │   │   ├── lonely_agent.py
    │   │   ├── n_agent_in_line.py
    │   │   ├── post_viz.py
    │   │   ├── README.md
    │   │   ├── test_interfaces.py
    │   │   └── timer_sce.py
    │   └── solution
    │       ├── create_delete.py
    │       ├── flock.py
    │       ├── formation_circ.py
    │       ├── formation_line.py
    │       ├── __init__.py
    │       ├── marking_3d_global.py
    │       ├── marking_3d_local.py
    │       ├── marking_3d_noComm.py
    │       ├── post_viz.py
    │       ├── random_walk.py
    │       ├── random_walk_with_take_and_drop.py
    │       ├── README.md
    │       ├── rl_model.py
    │       ├── scanning_for_all_aims.py
    │       ├── test_all_the_interfaces.py
    │       ├── test_marking.py
    │       ├── test_velo_agent.py
    │       ├── timer_sol_full.py
    │       ├── timer_sol.py
    │       └── tisch_visualization.py
    ├── core
    │   ├── agent.py
    │   ├── config.py
    │   ├── __init__.py
    │   ├── item.py
    │   ├── location.py
    │   ├── matter.py
    │   ├── swarm_sim_header.py
    │   ├── velo_controlled_agent.py
    │   ├── vis3d.py
    │   ├── visualization
    │   │   ├── camera.py
    │   │   ├── __init__.py
    │   │   ├── OGLWidget.py
    │   │   ├── programs
    │   │   │   ├── grid_program.py
    │   │   │   ├── __init__.py
    │   │   │   ├── offset_color_carry_program.py
    │   │   │   ├── offset_color_program.py
    │   │   │   └── program.py
    │   │   ├── recorder.py
    │   │   ├── shader
    │   │   │   ├── frag.glsl
    │   │   │   ├── grid_vertex.glsl
    │   │   │   ├── offset_color_carry_vertex.glsl
    │   │   │   └── offset_color_vertex.glsl
    │   │   ├── toms_svg_generator.py
    │   │   └── utils.py
    │   └── world.py
    ├── eval_callback.py
    ├── logs
    │   └── monitor.csv
    ├── multiple.py
    ├── old_comms_test.py
    ├── outputs
    │   ├── csv
    │   ├── logs
    │   ├── plots
    │   ├── screenshots
    │   └── videos
    ├── rpyc_server.py
    ├── swarmsim_env.py
    ├── swarmsim.py
    ├── timer_benchmark.py
    └── train_model.py

37 directories, 191 files
======================: README CONTENT :======================
# BotNet: A Simulator for Studying the Effects of Accurate Communication Models on High-agent Count Multi-agent Control

​
![](./botnet/assets/teaser.png)
​

Contents:
1. Setup and Background: [Github Link](https://github.com/PisterLab/BotNet/blob/main/README.md#setup-and-background) - [Local Link](./readme.md#setup-and-background)
2. Running BotNet and Experiments: [Github Link](https://github.com/PisterLab/BotNet/blob/main/README.md#running-botnet-and-experiments) -  [Local Link](./readme.md#running-botnet-and-experiments)
3. File Structure and Design Decisions: [Github Link](https://github.com/PisterLab/BotNet/blob/main/README.md#file-structure-and-design-decisions) -  [Local Link](./readme.md#file-structure-and-design-decisions)
​
----
## Setup and Background
In this section, we describe how one can get BotNet running and understand its motivation.
​
### Motivation
The goal of this simulator is to study how high agent-count multi-agent systems can be controlled. 

As agent counts increase, decentralized control becomes increasingly attractive due to its computational efficiency relative to centralized approaches.
A commonly unaddressed issue in the study of decentralized control, however, is the need for neighbors to identify eachother and communicate effectively, especially subject to the complex dynamics of an ad hoc RF mesh network.
This work pairs a high agent-count robot simulator with a full featured network simulator of a standards compliant RF mesh architecture, 6TiSCH.
Together, they form BotNet: an experimentation platform for understanding phenomena emerging from swarms attempting to maintain internal communication.
​
### Installation
This framework runs entirely on python and has very few requirements. The only setup required is installing the included conda environment.
```
conda env create -f environment.yml
```
Future work will integrate the simulator as a python package for integration with other projects.
​
### Core Building Blocks
​
We have built upon and paired two existing simulators. 
The first is the multi agent dyanmics simulator Swarm-Sim. 
Second is the the 6tisch simulator which simulates reliable, deterministic, and time sensitive networking.  
Together we believe these simulators provide an extensible framework to research multi agent control with realistic networking and to research networking in the context of changing multi agent systems. 

#### Swarm-Sim: Multi-agent Control and Swarm vs. Swarm Games

In this work we build off of [Swarm-Sim](https://gitlab.cs.uni-duesseldorf.de/cheraghi/swarm-sim): A 2D & 3D Simulation Core for Swarm Agents. Some notable changes have been made over the original version.
* Bugs were fixed causing the simulator to crash in routine operations.
* Adding a framework for continuous robotic control (discrete agent movements were default).
* More scenarios for studying multi-agent control
* Created a wrapper class for remote control of the simulator
* Added functionality to pass arguments into scenarios. 
Swarm-Sim comprises the dynamics simulation component of the dual-simulator. 
There are two primary places where experiments are defined on the Swarm-Sim side (environmental _scenarios_ and control _solutions_, see below). 
​
#### 6TiSCH Simulator: Standards Compliant IEEE802.15.4 Networking

For communications, we utilize 6TiSCH, a standards-compliant RF mesh networking protocol which is designed to be low-power, demand minimal computation overhead, and able to integrate with existing internet services. 
Together, these features make it well-suited for use in high agent- count, low-cost autonomous systems. 
6TiSCH combines Time Synchronized Channel Hopping (TSCH) with Internet Protocol version 6 (IPv6). 
Time Synchronized Channel Hopping (TSCH) changes when and which channels are used in wireless communications to provide more reliable communications.
The original simulator is found [here](https://bitbucket.org/6tisch/simulator/src/master/SimEngine/), and a review of 6TiSCH is found [here](url).
​
​

----
### Simulator Communication Architecture 
In joint simulation, botnet preserves each simulaters independence. The Swarm-Sim module of the simulator handles all multi agent control and simulation logic while the 6tisch module handles all networking logic. We have designed protocols for the two modules to communicate and synchronize states throughout simulation without compromising either simulator's indpendent simulation power. In this communication, first the networking simulator is initialized, and passes some initialization arguments to the robotics simulator such as random seed and number of motes. Once the robotics simulator has this information it initialize the robotics simulation and syncs the agent's states(positions) with the networking simulator. From there the networking simulator works to build the wireless network between motes. Once all motes have joined the network securely, the two simlators start handing control back and forth continuosly syncing states. For efficiency purposes we built 2 seperate architectures for this process. 

#### Dual Visualization
Both Swarm-Sim and 6Tisch support GUIs with real time visualizations of the experiment. 6tisch provides visualization capacities in the form of a web-app which is hosted on port 8080. Swarmsim provides visualizations by opening a PyOpenGL window. 
​
To handle quirks of the respective visualization modules we made use of an RPyC server to help the two simulators communicate. This server's API allows each proccess to send and recieve all information neccessary for the syncing of the two simulators. The RPC's purpose is to allow both simulators to communicate despite executing in separate processes.

#### No Vis
If you don't require visualization for your experiments it is not reccomended to use the RPyC server this will slow you down. Without the need to execute each simulation module in it's own process variables can be passed directly between them. To enable a faster simulation without visualizations we have build a wrapper class for Swarm-Sim defined in swarmsimmaster/commsenv.py. This class exposes the logic to run the main thread of swarm-sim for n iterations, set agent neighbors, query agent states etc. 


## Running BotNet and Experiments
#### Configurations
Experiment configurations are currently spread across two configuration files. 
`conf/swarmsim.yaml` corresponds to settings and configurations for the dynamics simulation module. 
`conf/6tisch.json` stores the settings and configurations for the networking simulator.  
Networking configurations stored in `6tisch.json` are also passed to the dynamics side of simulation upon initialization, however configurations from `swarmsim.yaml are` not passed to networking module (note: _this is not currently needed, but can be done if we need the dynamics to influence the network_). 
The motivation for this is to allow the dynamics side to take advantage of 6tisch's native support for iterating over combinations of parameters. 

##### 6tisch.json
`6tisch.json` details all of the settings for the 6tisch simulator. 
It is additionally easy to add new configurations. 
ll you have to do is add a field to the json and at runtime that field will be loaded as an attribute of the simengine's settings object.
The settings portion of 6tisch.json has two portions: combinations and regular. 
When simulating without visualizations the simulator will iterate over all combinations of parameters stored in the `combination` section of the settings json. For example if the combinations JSON is 
```
"combination": {
            "exec_numMotes":                               [10, 11, 12],

            "conn_class":                                  ["FullyMeshed", "FriisLower"]
}
```
then a total of 6 experiments will be run. 

Some important settings in 6tisch.json are listed below. 

`"exec_numMotes"` Is the number of motes used in the simulation. 
This is also passed to the robotics side of the simulator to populate the initial world conditions. 

`"conn_class"` tells 6tisch what network propogation model to use. 
These models are defined in 6tisch-simulator/SimEngine/Connectivity.py

`"sf_class"` is the scheduling function. 
Currently only two scheduling functions are supported. 
MSF (Minimum Scheduling Function, for more see [here](https://onlinelibrary.wiley.com/doi/pdf/10.1002/itl2.170)) and RRSF (Round Robin Scheduling Function, see more [here](https://en.wikipedia.org/wiki/Round-robin_scheduling)).

`"dual_vis"` tells 6tisch whether the simulator is being run with visualization enabled. 
If the used wants to vsualize the simulation the SimEngine needs to connect to and interact with the RPC server rather than directly with the swarmsim wrapper class. 


#### swarmsim.yaml

Swarmsim.yaml contains configurations red in by the swarmsim module of the simulator. Some if it's important settings are listed below:
`scenario`: Points to a file in the components/scenarios folder which should have a python function. This function will be called once upon initializing the swarmsim world. It effective sets up the 'scenario' our agents find themselves in. 

`solution`: Points to a file in components/solution which also should have a python function. This function is called on every timestep of simulation and is where control updates belong. 

`Visualization`: This tells swarmsim whether to run the GUI. It should be set to `0` for no visualization, `1` for visualizing just swarmsim and `2` for experiments where you are visualizing both swarmsim and 6tisch. 

`agent type`: This indicates which agent class the agents of the simulation are generated from. Choices currently include `1` for the VeloControlled agent class and `0` for the classic swarmsim agent. 

`run_network_propagation`: This is a boolean used when using high-agent counts (6TiSCH network formation fails) to control if a propagation model is used. When omitting the 6TiSCH simulator in this way, the entry `comms_model` sets the propagation model used.

### Running the experiment
We have provided two bash scripts to run experiments. One runs the experiments without visualization, while the other opens the simulator GUIs. Both swarmsim and 6tisch must be updated on whether or not you are expecting visualizations with the experiment and will break if run with the wrong command/settings combination. 

**To run an experiment with visualization set `dual_vis` to `true` in conf/6tisch.py and set `Visualization` to `2` in swarmsim.yaml**  

**To run an experminet without visualization set `dual_vis` to `false` in conf/6tisch.py and set `Visualization` to `0` in swarmsim.yaml**

We have included seperate bash scripts for running the code with and without visualization (and with and without full 6TiSCH networking). To use it make sure the configurations detailed above are set correctly and enter the following in your terminal.  

`./botnet/scripts/6tisch_no_vis.sh` Will run the code without visualizations. 

`./botnet/scripts/6tisch_dual_vis.sh` Will open the GUIs (Note:_ this will be substantially slower, so it is best to iterate with `run.sh` and then interpret select runs with visualization_). Visualization on logged data in under construction.

`./botnet/scripts/swarmsim_propagation.sh` Will run the SwarmSim scenarios with propagation models and optional dynamics visualization (controlled via `config/swarmsim.yaml`).

Example of the 6TiSCH Visualizer.
![](./botnet/assets/sim-network.png)
​
Example of the Environment Visualization.
![](./botnet/assets/sim-dynam.png)

### Running on Windows
Running on Windows may encounter other issues, particularly with syncrhonized visualization. 
We are finalizing supporting this platform.

​
### Logging
Basic data for experiments is logged in a directory `simData/` that is not tracked on git.
Additional logging can be performed by adding logic at the send of a solution.
​

### Common Problems
1. Due to the remote server architecture, sometimes subprocesses can hang. In case of failed initialization, look for running rpyc and multithreading objects with `ps`.
```
 ps | grep python
 kill pid
```
2. On the latest MacOS versions, OpenGL has a bug that affects the dynamics visualization. A fix is needed at the local Python version. See [this solution](https://stackoverflow.com/questions/63475461/unable-to-import-opengl-gl-in-python-on-macos).
​
----
## File Structure and Design Decisions
In this section we detail the structure of the simulator and what new users should know when designing new experiments.
​
### Core Components
​
To configure new robotic tasks and worlds, two key abstractions are used: **scenarios** and **solutions**.
By creating other classes akin to `VeloAgent`, other robotic dynamics can be encoded (see `swarmsimmaster/core/velo_controlled_agent.py`).
​

#### (Environment) Scenarios
A scenario is the initial conditions for a simulation. 
In these files, the world api is used to define the initial positions of all objects in the simulation and the environment. 
Scenarios are loaded from `swarmsimmaster/components/scenarios` at the beginning of the simulation. 
The current simulation to be loaded is defined in `conf/swarmsim.yaml`.
To create a scenario, utilize the world API in a Python script located in the scenarios folder. Examples of how to set up scenarios are in the scenarios folder. To run your scenario you must set the scenario argument at the bottom of config.ini to the name of your scenario file. Below is the simplest example of creating a lonely agent in the center of the world (which can be found [here](https://github.com/PisterLab/BotNet/blob/5af7fc809dea29e6e49b5275df13184c534b6518/gym-swarm-sim/envs/swarmsimmaster/components/scenario/configurable.py)).

​

```
def scenario(world):
  world.add_agent(world.grid.get_center())
```
For more details on the current scenarios, see the scenario description [readme](./swarmsimmaster/components/scenario/readme.md).
​

#### (Control) Solutions
The solution is where controls and dynamics are implemented. 
These use the world api to define the simulation behavior at every time step. 
The solution function is called on every iteration of SwarmSim's main loop. 
A solution is loaded from `swarmsimmaster/components/solutions`. 
At every step of the main loop the solution is executed. A solution file describes the controls of the agents and can optinally describe extra dynamics or interactions. 
Below is a solution which moves every agent in a random direction, which can be found [here](./swarmsimmaster/components/solution/random_walk.py). 
An example for a random walk controller is shown below.
```
def solution(world):
  if world.get_actual_round() % 1 == 0:
    for agent in world.get_agent_list():
      agent.move_to(random.choice(world.grid.get_directions_list()))
```
`conf/swarmsim.yaml` can be used to set all arguments for the simulation. These include which grid world to use, whether to use an agent with 0th, 1st, or 2nd order dynamics, how big the world is, etc. 
For more details on the current solutions, see the solution description [readme](./swarmsimmaster/components/solution/readme.md).
​

#### Agent Level Control
How to write controls at the agent level:
* In core, create a new python file with a class that inherits from `agent.py`.
* Define an instance method in this agent to describe control e.g. move(self).
* Pass the agent class in as the new_class parameter when adding the agent in the world
* Simply call the move function in the solution.

​
#### 6TiSCH Simulator
The 6TiSCH simulator can be seamlessly integrated to validate control performance with different local communications models. 
This tool can also be used by networking researchers to add more complex schedule functions and network behavior.
​

----
The paper can be found on [Arxiv](https://arxiv.org/abs/2108.13606).
To cite this work, please use the following citation:
```
@inproceedings{selden2021BotNet,
  title={BotNet:  A  Simulator  for  Studying  the  Effects  of  AccurateCommunication  Models  on  Multi-agent  and  Swarm  Contro},
  author={Selden, Mark and Zhou, Jason and Campos, Felipe and Lambert, Nathan and Drew, Daniel and Pister, Kristofer S. J.},
  booktitle={IEEE International Symposium on Multi-Robot and Multi-Agent Systems)},
  year={2021},
  organization={IEEE}
}
```
====================== GIT HISTORY: ======================
bf0ff8d HEAD@{0}: clone: from https://github.com/PisterLab/BotNet
commit bf0ff8dce6f2f2a3c08675d3a050b93b96edb929
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Wed Sep 1 18:38:47 2021 -0700

    Update README.md

commit 1e892a499da3a395dea16ae4b58908d98f600f20
Merge: 2da0527 c89777c
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Mon Aug 30 19:36:42 2021 -0700

    Merge pull request #19 from PisterLab/speed_tests
    
    Speed tests

commit c89777c036612ba023d1c742df1dff19f08f328c
Author: Mark Selden <Mark@Nicks-MacBook-Air-2.local>
Date:   Sun Aug 29 18:52:01 2021 -0700

    Debugged and tested communication.py"

commit 81189cd5b324b4d91329bc13a911d4139380c8a7
Author: Mark Selden <Mark@Nicks-MacBook-Air-2.local>
Date:   Sat Aug 28 16:16:33 2021 -0700

    debugging

commit 2842a76b43a8698162c687340bdcc0db963b7115
Author: Mark Selden <Mark@Nicks-MacBook-Air-2.local>
Date:   Wed Aug 25 22:04:23 2021 -0700

    vectorized neighbor calculations

commit 2da0527dc0788e87965e4461138d52aa1a4b9d8a
Author: natolambert <nol@berkeley.edu>
Date:   Wed Aug 25 16:07:37 2021 -0700

    add script for swarmsim propagation model only

commit 3d1ee912326ff9649b6d27047b4dd04f3e2bed98
Author: Mark Selden <Mark@Nicks-MacBook-Air-2.local>
Date:   Wed Aug 25 16:06:50 2021 -0700

    updated propagation model without 6tisch

commit 6ae79ba34ab0268c8cc87c821142ddff79fd30fb
Author: Nathan Lambert <10695622+natolambert@users.noreply.github.com>
Date:   Wed Aug 25 15:22:04 2021 -0700

    Update README.md

commit b3117f2366bf4a6aaac972320a53fcf6c3fd4b26
Author: Nathan Lambert <10695622+natolambert@users.noreply.github.com>
Date:   Wed Aug 25 15:18:32 2021 -0700

    Update README.md

commit 3aa40f23ae39885c01309ee48a0477e887109ace
Author: Nathan Lambert <10695622+natolambert@users.noreply.github.com>
Date:   Wed Aug 25 15:17:34 2021 -0700

    Update README.md

commit b57a043cc9dd3b29eb2ea2ac7e2064d0decbab6c
Author: Nathan Lambert <10695622+natolambert@users.noreply.github.com>
Date:   Wed Aug 25 15:17:20 2021 -0700

    Update README.md

commit 48a981ab27e429f3d15cd64022df84b1ad0f6270
Author: Nathan Lambert <10695622+natolambert@users.noreply.github.com>
Date:   Wed Aug 25 15:15:21 2021 -0700

    Update README.md

commit 6d8a5dcf93e9a02a471b7d033967c05d06c7f981
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Mon May 24 18:43:56 2021 -0400

    Update README.md

commit ef5be9357141cafee9d5c08eddb08588018dad0f
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Fri May 21 13:25:41 2021 -0700

    Update README.md

commit ab2e5416b8de6c6a8497331410e7da914360e010
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Fri May 21 01:40:41 2021 -0700

    Update README.md

commit e60cf4f601a68913ac3095ed41a7ededbc985963
Author: Jason Zhou <jasonzhou@Jasons-Macbook-Pro.local>
Date:   Mon May 17 19:14:01 2021 -0700

    performance & timer benchmarks

commit e9c8b8da3394e3e1aa7fdd08e63e51db8da59964
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Mon May 17 20:02:23 2021 -0400

    Update README.md

commit 1e56b1f916720ffc028a1d343e864c282e3d1273
Merge: ea11f12 f9fd4f5
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon May 17 12:56:01 2021 -0700

    Merge pull request #18 from PisterLab/relative-6tisch-ending
    
    new config format

commit f9fd4f595dd4baf86e629c10b20e06e4b4658a76
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon May 17 12:54:57 2021 -0700

    new config format

commit ea11f12f7f7dadc8a4a73eadbef055327fa9437f
Merge: 126eea3 bfc857f
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon May 17 12:52:39 2021 -0700

    Merge pull request #17 from PisterLab/relative-6tisch-ending
    
    relative asn to end simultion

commit bfc857f23abbe908358fba4ac205f398919f6044
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon May 17 12:51:52 2021 -0700

    relative asn to end simultion

commit 126eea365f016d046b0ef087104d22a282fb51ce
Merge: dfaf4ad 9b2f294
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon May 17 11:27:36 2021 -0700

    Merge pull request #16 from PisterLab/ease-of-use
    
    Ease of use

commit 9b2f294864d877d17c82d109f90ecbb9a84d0fd2
Merge: 8a18995 dfaf4ad
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon May 17 11:27:29 2021 -0700

    Merge branch 'main' into ease-of-use

commit 8a189951aff17724b2c2a468f3573e193d993a42
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon May 17 11:20:45 2021 -0700

    got rid of connectivity bug

commit dfaf4adb9e0a71b5c8e9dc612d23b5c325002b8c
Author: Nathan Lambert <nol5@cornell.edu>
Date:   Mon May 17 13:54:08 2021 -0400

    Add files via upload

commit e2257cce4bb710b047e95f1a4e06df38e3ac317f
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Mon May 17 13:53:56 2021 -0400

    Delete environment.yml

commit a59f81481711f22e9e17fbeb5971a2550f8db7e1
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Mon May 17 13:53:49 2021 -0400

    Delete env.yml

commit 0005fd652e66db6e2cad7f613a0c8765e3d7ce1f
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Mon May 17 13:53:36 2021 -0400

    Update README.md

commit 346aa82b37b1fa0d5dbe422189b1d6a23aa9762a
Merge: fc12947 3385ab0
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon May 17 10:33:12 2021 -0700

    Merge branch 'ease-of-use' of https://github.com/PisterLab/swarm-sim into ease-of-use
    getting readme

commit fc12947ca1980668db2e8345f4500183ae0d131c
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon May 17 10:32:59 2021 -0700

    added info to config data

commit 4fc79ab8c29391ab406a430f31b07b6bcef28826
Author: Nathan Lambert <nol5@cornell.edu>
Date:   Mon May 17 13:28:12 2021 -0400

    Add files via upload

commit 3385ab0b0bedef1bc962820b0e0e5c821a25c3cc
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon May 17 09:02:07 2021 -0700

    Update README.md

commit f407acde5757b779437151d1bfc7683b4a93b4e1
Author: natolambert <nol@berkeley.edu>
Date:   Mon May 17 11:22:04 2021 -0400

    clarity edits in readme

commit c0a78d29b321b0d61c737d2d307f4dd41b717cf8
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon May 17 00:53:15 2021 -0700

    Update README.md

commit 3a802343bf63bb5362664613db76ab39fe5f568f
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Sun May 16 21:55:25 2021 -0700

    updates at the end of each slotframe

commit a9e10d36385a481482fe011d9c817165595af24f
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Sun May 16 20:10:14 2021 -0700

    added scenarios, moved scenario control back to swarmsim, minor updates

commit 7cba7f803d2b4e498c99cf928f4b61f679d746df
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Sun May 16 19:16:30 2021 -0700

    Update README.md

commit cd55322a11ea7c12baf2185d73e04bc7de8b2828
Author: Nathan Lambert <nol5@cornell.edu>
Date:   Sun May 16 16:19:39 2021 -0700

    Add files via upload

commit 7710cb9fcaa2cb8a55ca9750898f46d5c71fd6e0
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Sun May 16 19:18:45 2021 -0400

    Delete teaser.png

commit d8bbc256edc806662e7f92332b62d8b4cd76b376
Author: natolambert <nol@berkeley.edu>
Date:   Sun May 16 18:37:02 2021 -0400

    update teaser

commit 70575e0b57a4dad3ca87e7d32c1ba59ba21a5298
Merge: 8211262 81df770
Author: Jason Zhou <jasonzhou@berkeley.edu>
Date:   Sun May 16 14:11:59 2021 -0700

    Merge branch 'main' of https://github.com/PisterLab/BotNet into main

commit 82112621917022503fc0098cf38657472a2b347c
Author: Jason Zhou <jasonzhou@berkeley.edu>
Date:   Sun May 16 14:11:13 2021 -0700

    formation updates

commit 81df77061c80760bfca271205f79eb2333f7893a
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Sun May 16 17:09:11 2021 -0400

    Update README.md

commit 6c49b97af0fb1c24dc9869fa8ab534f2f2f4e6d8
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Sat May 15 19:12:20 2021 -0700

    Update README.md

commit db715c5c4bd6842eabaa74dd21ab036583080d5c
Merge: d756541 8c685e8
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 14:39:30 2021 -0700

    Merge branch 'main' of https://github.com/PisterLab/BotNet into main

commit d756541c501958d2a340280532e6993706dda89b
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 14:39:21 2021 -0700

    change script locations

commit 8c685e8025a7bc8c62a40ad9a8c59a32b374ec4d
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Sat May 15 14:31:11 2021 -0700

    Update README.md

commit 29b6c42f1db0aa807a5320da0b68c4a3e77c4e83
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 14:28:48 2021 -0700

    add assets for readme, botnet dir for structure

commit 43487883cdb51d8e1ecead490758d4502ef892b1
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 14:26:50 2021 -0700

    add assets for readme, botnet dir for structure

commit e072340a03049f47020b698383daaa22fbf893f4
Merge: 891283a d805b57
Author: Jason Zhou <jasonzhou@berkeley.edu>
Date:   Sat May 15 14:11:19 2021 -0700

    Merge pull request #14 from PisterLab/docs_swarmsim
    
    Document Swarmsim components

commit d805b5768feaa3f1deed66f33ea89efd624c5011
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 14:09:06 2021 -0700

    more readme development

commit 9b0167bfdc6efd41ea82245d9e08ef2afc85ac7f
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 13:37:55 2021 -0700

    delete unused top level files

commit 5fe2352973d869c152d22026a7de6e85f4871127
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 13:25:57 2021 -0700

    missed readme on commit

commit a0ed146cfb85160c4fdd539fd2157a9cff8dfa34
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 13:23:49 2021 -0700

    add solution documentation

commit 6df2da01fea985a0534c4c19620d9777a217bb32
Author: natolambert <nol@berkeley.edu>
Date:   Sat May 15 13:03:55 2021 -0700

    document scenarios

commit 771789838a6bb9557aa41b932d391b770fd99802
Merge: dbb8d14 891283a
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Sat May 15 12:59:26 2021 -0700

    mergining experiments and config change

commit 891283ac9cf1802bac46cf27845b760a5c61b0f1
Merge: 78eb500 2dd5bc0
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Sat May 15 12:38:25 2021 -0700

    Merge pull request #13 from PisterLab/config
    
    Configurations improvements!

commit dbb8d14f449ef7934c1827767397c682faca2c10
Merge: c5b517a 78eb500
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Sat May 15 12:08:15 2021 -0700

    Merge branch 'main' of https://github.com/PisterLab/swarm-sim into main
    merging formation control

commit c5b517a74c19ad4e59b8122a760c34fe9f00e9f8
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Sat May 15 12:08:10 2021 -0700

    Ran experiments

commit 78eb500417a83c4232467591dbf3196d06961bff
Author: Jason Zhou <jasonzhou@berkeley.edu>
Date:   Sat May 15 06:54:39 2021 -0700

    adding formation ctrl

commit 2dd5bc0e720a650e4b3d9d24cd2e5006b68bac16
Author: natolambert <nol@berkeley.edu>
Date:   Fri May 14 17:28:21 2021 -0700

    make cfg dir clean

commit f875ca078669f81b02dc687971352835dcafce3f
Merge: a796cd2 57fa961
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Fri May 14 15:29:13 2021 -0700

    Merge branch 'main' of https://github.com/PisterLab/swarm-sim into main
    pull to push

commit a796cd21c1e3286b54a74540ff654f8dfa502554
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Fri May 14 15:29:02 2021 -0700

    stuff

commit 57fa9619bc138642046e7f7582ccc8683137295d
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Fri May 14 14:02:50 2021 -0700

    Update README.md

commit ea30cab130aaea5790245745252c4db5de2c76a1
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Fri May 14 14:01:49 2021 -0700

    Update README.md

commit 643acd952a68d216d355c6a29ab880155e8db1f9
Merge: 19c93e9 f03fc96
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Thu May 13 19:12:28 2021 -0700

    Merge pull request #11 from PisterLab/dual_vis_bash_script
    
    Dual vis bash script

commit f03fc9664e840c13e822654c3197fa8bb39db6bc
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 19:12:07 2021 -0700

    woot

commit a512aa32ed510e01ca7f79e099748bc369817156
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 17:44:38 2021 -0700

    changes

commit 7a163d64e04820efaeac413f193c4be6eb90f1d8
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 17:01:40 2021 -0700

    refactor updates

commit 19c93e9a216b7569ce5796366530ab78adfb457b
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Thu May 13 16:52:52 2021 -0700

    Update README.md

commit 88e33700ffffd63a794e525efd11a007a599650f
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Thu May 13 16:38:46 2021 -0700

    Update README.md

commit 24b736f025939f6295cf020297176e26d7a0b76d
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Thu May 13 15:39:37 2021 -0700

    Update README.md

commit 68f34dfb5fa9c3172b26c7a5f9805eede59fb8b3
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 13:12:28 2021 -0700

    adding dist

commit a2860028770b9fcc4ae42bec261ee1bd05d7d576
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 12:42:42 2021 -0700

    exported conda environment

commit 54cec8ade6668b6bbfc018869ceac723430715cf
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 12:34:47 2021 -0700

    added sleep

commit 0b54ca21c27067034e95ee1dbd97b163311ffdfd
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 12:22:53 2021 -0700

    bug fix

commit 5d49e0c20209207a03b5acc890ee222d6f0484b1
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 10:26:51 2021 -0700

    debugged and added dual vis bash script

commit 323eef24f33da6713b9e2ee0e1c5ec85702803bf
Merge: aaf8a3c 27db848
Author: natolambert <nol@berkeley.edu>
Date:   Thu May 13 09:37:29 2021 -0700

    merge readme

commit aaf8a3cf89b97d2dbc3af9bd56fc57617cf7c988
Author: natolambert <nol@berkeley.edu>
Date:   Thu May 13 09:36:43 2021 -0700

    readme edits

commit 27db84891d30cc95f5f61a4fdb8a6a8aa148641d
Merge: 2ca3928 8b976c3
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Thu May 13 09:11:11 2021 -0700

    Merge pull request #10 from PisterLab/dual_vis
    
    Dual vis

commit 8b976c3b78019219b86292cad95fc3c8655bb985
Merge: b4c12b0 2ca3928
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 09:10:51 2021 -0700

    manual merge

commit b4c12b07d485bc0671308cf63d2cce0f1d1218f8
Merge: cffd5bd 63f7990
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 08:53:50 2021 -0700

    Merge branch 'dual_vis' of https://github.com/PisterLab/swarm-sim into dual_vis
    pulling for the purpose of pushing

commit cffd5bdeff1583438e75d6703db68b813427f069
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Thu May 13 08:53:39 2021 -0700

    pulled control updates into solution

commit 2ca39282be5814651487650d3fa21d3a2ec502c5
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Wed May 12 13:36:23 2021 -0700

    create scenarios readme

commit 62d79ac2d16aff6d60f80a11ec482bd9ad2e25a0
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Wed May 12 13:27:51 2021 -0700

    Update README.md

commit 4b4334c67ae4f6d1e4a7c2aeafee8736efbd5b34
Merge: 1f9e8b4 63f7990
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Wed May 12 13:07:43 2021 -0700

    Merge pull request #9 from PisterLab/dual_vis
    
    Dual vis

commit 63f799036ef6758055271731b1e0adc550e4652c
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Wed May 12 13:07:30 2021 -0700

    Delete requirements.txt

commit 6d99cd0d0735a04dd9b1d4bf6d80ac7cd9f05772
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Wed May 12 13:03:44 2021 -0700

    Added syncing step

commit 1f9e8b4837cdf305891ad8559f78ce84d64e8f40
Author: natolambert <nol@berkeley.edu>
Date:   Wed May 12 12:09:55 2021 -0700

    add to run script

commit 3d07bd83f17474ccd881cf5ee9a2ef7fdd916f22
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Wed May 12 12:09:31 2021 -0700

    Delete init_server.sh

commit 4e0ec4e96fc09bac717d5d17e6cb4014ac9fa469
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Wed May 12 11:48:39 2021 -0700

    dual vis

commit 3a4e1e30129c6f2e71970d371920ec5d0c8aa856
Author: natolambert <nol@berkeley.edu>
Date:   Tue May 11 19:49:25 2021 -0700

    add running scripts, remove .idea

commit 9bbbb3e50db5bb77470b2234952b8ff4ae10a4ff
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Tue Apr 27 19:37:01 2021 -0700

    6TiSCH GUI running (with scheduling function viz bug)

commit f88eb48b907f7d6543a67aa5c6f1fd7224a15bec
Merge: 4e6c56f 46868bb
Author: MarkSelden <47091510+MarkSelden@users.noreply.github.com>
Date:   Mon Apr 19 21:42:59 2021 -0700

    Merge pull request #5 from PisterLab/Directory_Organization
    
    Spring Cleaning

commit 46868bb34777dfe32b78acc67ee1d4202307172e
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon Apr 19 21:38:57 2021 -0700

    Removed print statements from previous investigations

commit 2ad0a1ffcb3a112e5b34252a53d1b8a49aef468b
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon Apr 19 21:31:24 2021 -0700

    debugged refactor

commit 46a0d7f130addd2ecd7f250b501aafd6f56c534a
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon Apr 19 21:30:24 2021 -0700

    Spring Cleaning

commit 5a1ea05722ee523f79acdd0b3e39a0c67322e47e
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon Apr 19 20:56:36 2021 -0700

    Directories restructured and .DS_Store Ignored

commit 4e6c56f7a9c0383776dc086759161303fb304013
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Tue Apr 13 21:03:42 2021 -0700

    fixed RPC object passing error - ready for visualization enabling RPC

commit 02a5942ad005bfad5fe8955ced1b1f62ded411c3
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Apr 11 21:00:01 2021 -0700

    SwarmSim/6TiSCH RPC ported [errored with public attrs - fix]

commit 84d05c49361417c8ae5073d89c4f22dd5e5cc60f
Merge: 69384af a2c81f6
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Apr 11 19:34:34 2021 -0700

    Merge branch 'rrsf' of https://github.com/PisterLab/swarm-sim into rrsf

commit 69384af7bb8778bb52458887ef736882efb08263
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Apr 11 19:34:20 2021 -0700

    control update period

commit a2c81f6fced18cc8986fdab6b860c90fac33c9cf
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Sun Apr 11 19:18:05 2021 -0700

    Update README.md

commit be143be2c11de89a216c8c87b44b4b8a180ccb25
Author: Nathan Lambert <nol@berkeley.edu>
Date:   Sun Apr 11 19:17:53 2021 -0700

    Update README.md

commit e2375c7a0cd1dc59c277e9414d9e670e2d35446e
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Mar 5 04:10:59 2021 -0800

    experiments

commit d46fd88a018e6c0d6d53cc115e88e3c3c3968a1f
Merge: cc0ac6c 276df94
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Mar 3 04:27:18 2021 -0800

    Merge branch 'rrsf' of https://github.com/PisterLab/swarm-sim into rrsf

commit cc0ac6c0f1f35c668b2d378b5b1341300ab9401e
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Mar 3 04:21:43 2021 -0800

    general parameter iteration setup - CLI automation

commit 276df943b0cb2d2700cb6e9883224d7f55e41e77
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Mar 3 04:21:43 2021 -0800

    general parameter iteration setup - CLI automation

commit bcfbbc7277113c856e4e5c8617c9e638c9407219
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Mar 1 23:25:57 2021 -0800

    replay actually works

commit 880dac86a9f102fb7ada315f91cc428cb7d90465
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Mar 1 02:03:22 2021 -0800

    post-DAO advertising control start; console logging config

commit 1c96f5a64c6e098cd78efd3bcfef0f20960ca674
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Feb 28 18:32:26 2021 -0800

    network formation control start - broadcasting condition (still doesn't acct for DAOs)

commit 7a1ef7cdebd48a7e67f7d01fd921dbb9c5552d86
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Feb 28 16:15:30 2021 -0800

    rrsf & swarmsim monte carlo refactor

commit 812d516fa4d8a6377dcc197cb1b19beb6fbeaa25
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Feb 28 16:15:01 2021 -0800

    refactor commit 1

commit 73f06b78ec6769217c50b1d259ac7ec84e747305
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Feb 28 00:56:14 2021 -0800

    DAG root broadcast pkt drop fix

commit 0dce05b8b6ec7b0910ee73347b3e4d0302e26033
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Thu Feb 25 23:22:14 2021 -0800

    full integration with swarmsim

commit 2d751813d4123b70c263a7d59012dc01b9a37473
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Tue Feb 23 01:48:41 2021 -0800

    efficient network joining - ready for monte carlo integration

commit eda0a6ce8c2ce20db2b4a2b4446672ef16af90a1
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Tue Feb 23 00:31:48 2021 -0800

    EB network sync checking

commit 89cdf6003345c5b114394e07fb6a4a809ca187aa
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Tue Feb 16 00:33:32 2021 -0800

    secure join & connectivity fix

commit 91e967eb135f253a4e3277436b69fda0d6309716
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Feb 15 22:42:09 2021 -0800

    more testing & root config

commit 89704b2aded671d3c29c80f66f5f5791751fcec7
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Feb 15 19:47:41 2021 -0800

    RRSF with Tx-mode slot ASN & slotframe aligned control updates

commit 6184cfe2cd63878a2ba75dd739bdd096de14f2ab
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Thu Feb 11 11:45:19 2021 -0800

    RRSF setup with Yatch

commit 85da9ba9c8077f83677e9da9c4abcb36c9c72397
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Feb 8 23:56:26 2021 -0800

    modular communication modelling (+friis +pister_hack)

commit 11691a6f43c6875c99b13b354aca453d7b0f67a7
Merge: 574efa1 ca390b9
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Feb 8 19:23:01 2021 -0800

    Merge branch '6tisch-integrate' of https://github.com/PisterLab/swarm-sim into 6tisch-integrate

commit 574efa1f4208236967343f99cdc5ae2eefe41af7
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Mon Feb 8 19:17:40 2021 -0800

    swarmsim potential control with switched communication models

commit ca390b94fccff4c70b0df11f02c7a3768da55801
Author: Felipe Mulinari Rocha Campos <fmrcampos@berkeley.edu>
Date:   Sun Feb 7 09:29:39 2021 -0800

    Update README.md

commit ba625443588dbec3b5bd2100dfd4a9916aa5554a
Author: Felipe Mulinari Rocha Campos <fmrcampos@berkeley.edu>
Date:   Fri Feb 5 14:05:13 2021 -0800

    Added summary Google Doc to README

commit 7b16c79ac3726294587dda6558c26a51bf04dc25
Author: Felipe Mulinari Rocha Campos <fmrcampos@berkeley.edu>
Date:   Fri Feb 5 14:02:43 2021 -0800

    Initial README.md
    
    Add SwarmSim + 6TiSCH overviews

commit 72a2253bbeb5b4f1995ab12eae9a9c672c55892d
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Jan 31 22:35:56 2021 -0800

    6TiSCH SimEngine path agnostic

commit d74663090a210b3361ad4adab5ba5b31a76a3315
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Sun Jan 31 08:28:26 2021 -0800

    simulator runs without visualization (and modular agent coordinate initialization)

commit f1542d0ade6cd9d2c240b243aec63846d0866fa2
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Jan 29 16:47:27 2021 -0500

    location bugs & simultaneous visualization bug found

commit 9fcf556a68e71c03fb77d95e05d1d3d165100278
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Jan 29 12:13:53 2021 -0500

    6tisch + SwarmSim integration (-path issues)

commit 520332da1f61e08bd38bc26a42be274ea2279004
Merge: f6ec99f ea9abf6
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Jan 27 20:34:14 2021 -0500

    Merge branch '6tisch-integrate' into velocityAgent

commit f6ec99f82f4bf98f6800108ca45b95f4ccb912ad
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Jan 27 20:33:59 2021 -0500

    increasing grid size and reset exception handling

commit c47cd1a98415d587e9d9fe9cc0efa8e6f8756968
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Wed Jan 27 17:06:43 2021 -0800

    Debugged

commit b72be85feca0d7e545b521489dd1939ea57de61a
Merge: f82805d 4a22d1c
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Wed Jan 27 16:56:20 2021 -0800

    Merge branch 'velocityAgent' of https://github.com/callmecampos/6-tisch-swarm-sim into velocityAgent
    ta ta

commit f82805da890e5fd35bc581da005913a4cb61b0d0
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Wed Jan 27 16:54:47 2021 -0800

    working commit

commit 4a22d1c09dcefc25d557f00f1fbbd080e252bf21
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Jan 27 19:29:47 2021 -0500

    velocity agent setup fixes

commit cd7b70cfe6d18e1a3766bf82f4dcb60c7fb3ea27
Merge: d16d4ae b7ed149
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Jan 27 13:28:03 2021 -0500

    Merge branch 'velocityAgent' of https://github.com/callmecampos/6-tisch-swarm-sim into velocityAgent

commit ea9abf6d460ad77138ede5022f18dde9465482c3
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Wed Jan 27 13:26:24 2021 -0500

    realistic connectivity and abstract robotic simulator interface setup

commit b7ed149388237c6d40612f9d85cba29166b06334
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Tue Jan 26 19:46:43 2021 -0800

    comms interface first version

commit 0d087121eed3e8dca784b9a53fdaabe88b39195a
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Sat Jan 23 11:27:58 2021 -0800

    Pushing settings for felipe

commit d16d4aebf4f1af35b07a574b855fc04e298f7fef
Merge: 23ed709 b97315e
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Jan 22 16:06:39 2021 -0500

    Merge branch 'main' into velocityAgent

commit b97315e0e87b2108fd3d95719ede9056b47920eb
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Jan 22 16:06:14 2021 -0500

    updated 6tisch sim for python3

commit 23ed7096457d13f5767cd385465a3ed9ae7bc8b7
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Fri Jan 22 12:29:34 2021 -0800

    Velo agent v0 is a go

commit 9cefe303a301972f32ab208b06450fdffc92caca
Merge: 5ecb342 2f4cbea
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Jan 22 12:35:12 2021 -0500

    Merge branch 'main' of https://github.com/callmecampos/6-tisch-swarm-sim

commit 5ecb342371b6a3b0c93d548e62ad84945ccaf04b
Author: Felipe Campos <fmrcampos@berkeley.edu>
Date:   Fri Jan 22 12:34:49 2021 -0500

    added 6tisch-sim & git reformatting

commit 2f4cbea82ad0b4f45ee1db7b05de1cb983c7bdea
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Fri Jan 22 09:23:01 2021 -0800

    january start up again

commit dd0acb2745b260ad5e340a971afd3acdb8ca917e
Author: MarkSelden <seldenm@berkeley.edu>
Date:   Mon Oct 19 23:31:31 2020 -0700

    basic gym rapper, still rough
