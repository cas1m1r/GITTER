======================: FILES :======================
======================: BRANCHES :======================
======================: LOGINFO :======================
commit a0725a5b6d4210d96229f3e5e4e21d939e80b780
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 23 15:21:23 2022 -0400

    new ver

commit 44e942ccaf6eb32ff0d2c43e6d86233d2395d248
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 23 15:19:29 2022 -0400

    added env vars for z3 path and cve advisory url

commit 91d5cf22bda585f519dfe635b48fedf0c933641f
Author: cassanof <federico.cassano@federico.codes>
Date:   Mon Aug 8 15:37:15 2022 -0400

    built with older glibc

commit 8ab1fb871fe9471045c8b3f3fd2668cb15c8d7cc
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 15:19:49 2022 -0400

    undo LD_LIBRARY_PATH

commit 6c51e7f8309b4176c1a72d9a4a70147d9bcdfc38
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 15:10:28 2022 -0400

    run with LD_LIBRARY_PATH

commit 132c686e7b7fd392fc75fae2207cbae131cf8f4a
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 14:58:04 2022 -0400

    bump ver

commit bc33b00991cbe16d76f7396545ad55da45869b0c
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 14:57:43 2022 -0400

    doing some crazy dynamic linking hack

commit cec8eb8a6095239cec2b0756d03735b31dade427
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 14:51:16 2022 -0400

    out gitignore

commit 9f34fd1e84bd10e8e11b39593ad8893f05ee7e2e
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Aug 4 23:08:09 2022 -0400

    added files to publish

commit 78f2c975ff78923b34e0043ecdb2277412360804
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Aug 4 22:59:59 2022 -0400

    changed bin name

commit ed4e1516f8fea162ad60a39f5512526410aa8b0c
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Aug 4 22:52:10 2022 -0400

    arborist package

commit 6411f84034c94883e4ed35bb339e68f3ddb78cc1
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 2 17:46:21 2022 -0400

    publish 2

commit 6405a06bb6803fec66defcaca5e4a653f03dc682
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 2 17:44:53 2022 -0400

    publishing

commit 07f0115806d9eef220496c531f075e593602d438
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 27 18:30:17 2022 -0400

    Add dep, remove debug print

commit 79e807423cfd39d0cf7fbfc23585e779bfe5f02b
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Jul 26 10:37:21 2022 -0400

    print url failure too

commit 3bad92e2746f2b562f3fad795baa14f8817f8947
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 25 18:22:03 2022 -0400

    Fix proxy stuff

commit 3de9d22724993b33d75a38c81b87cc71842a5701
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 25 14:35:56 2022 -0400

    use cached server

commit 866b45fd23b6352b189f6f1191c1cfcdf7e3d2e9
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 25 10:19:54 2022 -0400

    Only fetch vulnerabilties if we need them

commit 02bdd77be06e5649caf41bf0b33e442fa349663d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Jul 21 15:36:38 2022 -0400

    include prereleases in CVEs

commit 1fa7a00f96e01863e181927791e11b26e3a2132e
Merge: 63b89b31 0e98d6cb
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Jul 21 14:17:36 2022 -0400

    Merge pull request #1 from cassanof/main
    
    Minimize CVEs

commit 0e98d6cb91db051c4bc27e31cee1eee6d5531791
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Jul 21 13:20:20 2022 -0400

    changed advisory url to npm ecosystem

commit 1c32a089db5bd6156cb712ca234556725a601f86
Author: elleven11 <federico.cassano@federico.codes>
Date:   Wed Jul 20 23:42:11 2022 -0400

    added cve badness

commit 63b89b31edef3a6554095ec74ec995814f7b7833
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Apr 10 12:44:34 2022 -0400

    Add disallow cycle args

commit acfbf74826ee71083ec9fbce9ac8d1c4df76ba76
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Mar 2 15:06:59 2022 -0500

    re-solve

commit 5e7e4c92b2ce795247dc523c8dc560b0878e6128
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Nov 23 14:00:45 2021 -0500

    bug fix for oldness cost

commit 4b3f7b8ed6238fd273c8437d3e826a2aef1f7946
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Nov 18 10:01:15 2021 -0500

    Flexible options in arborist

commit bdbe7db676dec8f485474c465d963bb4adf54e5d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Nov 14 22:41:16 2021 -0500

    Send minimization objective to PacSolve

commit 8af7d1ce32b13010baaf827251b850c62c2c1e71
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Nov 7 17:35:37 2021 -0500

    cleanup commented dead code

commit 7e1acebf4a16f955800d23e8d9f6ab3d8c2bffcc
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Oct 18 16:41:23 2021 -0400

    disable solving dev deps, for now

commit 7a5d8b2df73d661b0665ae9103ef4c03b1696f0b
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Oct 12 09:33:33 2021 -0400

    Add explore only option

commit 5a21ec31b8161c5ba3220708cd6eacf55ad1a87f
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Sep 7 13:26:44 2021 -0400

    Update JSON format

commit edae915879ecebbf3f3815fd0d529ee87b464ed8
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Aug 27 17:55:55 2021 -0400

    Post-install dev dependencies via hack

commit ed4d16ec6b7a9b9e9eed658a4d66ba985c63f345
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Aug 8 14:04:15 2021 -0400

    Stable, working solver

commit c0f7c7ef3da98de65593db03303c7e055262e3ba
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Aug 8 00:05:36 2021 -0400

    Fixed some bugs, hit a bug in Z3

commit d4c7e1a8167b3624be831a5c9cf22064fce03092
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Aug 6 11:46:59 2021 -0400

    prepare code to test tighter reachability

commit c1f6636a15ae9510bc4d4c43544fa6b005cb0385
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Aug 5 23:39:43 2021 -0400

    Finish randomized property testing, used it to find bugs and fixed them

commit af71f5a06eb973fdaef0871ba4fdcbf637378031
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Aug 5 22:27:56 2021 -0400

    Get interpreter to work, testing framework, and fix definitions

commit f91c0669d0b335129b2cea4171a11fccb689943f
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Aug 5 14:12:54 2021 -0400

    tmp

commit 864f78256436301bc80a224ea18403c28f50116c
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Aug 4 14:46:47 2021 -0400

    prepare to rewrite constraint interpretation

commit 492dee6065d28906eab4d5d50440e04f6a73cce0
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Aug 2 21:33:56 2021 -0400

    Work out in comments the logic for NPM -> Rosette translation

commit bbcf563d9807ff1713782a97cbfd97b8fdfffd92
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Aug 2 16:14:10 2021 -0400

    Seem to be producing reasonable-ish JSON. Now need to make smaller

commit e4791d9a932b571bd51db8a687b2766173f9dfba
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sat Jul 31 22:40:00 2021 -0400

    Commit before hacking

commit 27f4e1ea6b3cd91bbe0f07684b42e9454f0b5619
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Jul 30 20:59:09 2021 -0400

    Fix 1 bug, now need to prevent SO

commit e3d43a6e72817dd55b6df752859564696615b24a
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 19:49:30 2021 -0400

    Re-enable cleanup code

commit f2f6e3c734ce3f74666d8d6f71b3be0345bded16
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 19:14:53 2021 -0400

    hacking

commit be31b992911dd1b6d21f866105906a35547f6417
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 18:53:54 2021 -0400

    hacking

commit b7cc54ac649dd2dce602868a611f6a468fca2518
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 13:49:38 2021 -0400

    did undo

commit 5ac4a73f7cc6a4f49e1778dd53a7ffee7d3faefc
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 12:06:15 2021 -0400

    UNDO ME

commit 704ed641bd6fd514e7ed8f9ba52e7ee77cc4173d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 11:33:42 2021 -0400

    Added parsing and eval of DSL, not yet tied in

commit d1771250e697c68aba00113c24bdddfb9933c385
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 11:01:43 2021 -0400

    Hack more on dsl

commit 8d32cf9431321fdbeef72f788b81bee97367c939
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 10:59:07 2021 -0400

    Hack more on dsl

commit ba959b79198fb8e98494a4d6a3a7979eabc26423
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 26 17:12:41 2021 -0400

    Hackon expr dsl

commit 9d88c3f7657f9c5debaf38ea6790bfdf3caee04d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sat Jul 24 23:14:38 2021 -0400

    Add nicer error when a package can not be found

commit f598d5fe282cc57879f02c604613b7528464ffd1
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sat Jul 24 19:30:44 2021 -0400

    Rename rosette option, check for NaN when parsing version numbers

commit 2107d5a1392d9e6ab092ef7a1e0c3b2d5d5e2c45
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Jul 23 17:51:11 2021 -0400

    Properly decode Rosette results into (precise!) arborist trees

commit 57fd80291994388f4895ab0756b332913d13a4b0
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Jul 15 10:12:04 2021 -0400

    First working solve!

commit d2bde40fe27455389b7fdfefa0ed921378076f17
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 14 22:47:59 2021 -0400

    Work on solving with rosette

commit b3cc0d7bc4c9e87ff1a31e52c4c10aa47a0ab489
Author: isaacs <i@izs.me>
Date:   Tue Jun 29 11:24:44 2021 -0700

    2.7.0

commit d0f600e5c8a5cf9f9dcc041d66a588eb88e57d7f
Author: isaacs <i@izs.me>
Date:   Mon Jun 28 10:03:03 2021 -0700

    feat: make node.target return this for non-links
    
    This gets rid of a lot of `tree = node.target || node` everywhere, by
    making `node.target` return `node` when `node` is not a Link.
    
    Caveat is that `if (node.target)` is no longer a thing we can do to test
    for link-ness, but it's more clear in those cases to use `if
    (node.isLink)` if we want to know if the node is a Link.
    
    PR-URL: https://github.com/npm/arborist/pull/298
    Credit: @isaacs
    Close: #298
    Reviewed-by: @isaacs

commit f06445acbfa3b6b04b67ad2b47c9f845bd687cc5
Author: nlf <quitlahok@gmail.com>
Date:   Fri Jun 25 12:28:19 2021 -0700

    fix: pass integrity to pacote.extract
    
    when crackOpen becomes true we were extracting the content through
    pacote without providing an integrity, because of this pacote was
    creating its own internal ssri IntegrityStream that uses the default
    algorithm and piping the response data through that for reasons.
    when the default algorithm differs from the current one, which is
    often the case with older packages that had sha1 digests, we were
    throwing an EINTEGRITY error attempting to compare the old and
    correct sha1 to a new and unknown sha512 (the default). by passing
    the node's current integrity value we ensure that pacote compares
    the sha1 to a sha1 which works as expected.
    
    PR-URL: https://github.com/npm/arborist/pull/297
    Credit: @nlf
    Close: #297
    Reviewed-by: @isaacs

commit 5a4c1062aa7d0ca228fca20c6835a6a26e434f89
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Jun 16 12:42:39 2021 -0400

    fix run unchanged links lifecycle scripts
    
    Users expect workspaces (or regular linked deps) to run their prepare
    lifecycle script on every reify, since it's often used as some form of
    compilation step and should run even though that node hasn't changed.
    
    Fixes: https://github.com/npm/cli/issues/2900
    
    PR-URL: https://github.com/npm/arborist/pull/290
    Credit: @ruyadorno
    Close: #290
    Reviewed-by: @isaacs, @nlf

commit ab0d8f2b9aea436a548b3a418f254af181e8f084
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Jun 25 17:07:41 2021 -0400

    fix: node.isDescendantOf follows fs hierarchy
    
    Previously, the `node.isDescendantOf` method would only check for direct
    parents of that node, this may cause unexpected side effects on build
    ideal tree and reify when working with linked dependencies.
    
    This change modifies it so that `node.isDescendantOf` now looks at
    `node.resolveParent` (making sure `fsParents` are included in the
    lookup) to determine wether that node is a descendant of another.
    
    This also made it possible to refactor the logic that checks for an
    `external` dep in build-ideal-tree to use `node.isDescendantOf` instead
    of a regex check in the realpath of the link.
    
    Relates to: https://github.com/npm/cli/issues/2900

commit 9c49a6f52a9400fea8d6db60ffae8ad7bffa59f6
Author: isaacs <i@izs.me>
Date:   Thu Jun 24 14:04:17 2021 -0700

    2.6.4

commit 5d2624fb31a0cd77b31659f3c5cf1adf92a18a56
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Jun 22 19:46:08 2021 -0400

    chore: @npmcli/package-json refactor
    
    Removes lib/update-root-package-json.js in favor of using
    @npmcli/package-json for reading and modifying package.json during
    reify.
    
    Relates to: https://github.com/npm/statusboard/issues/368
    
    PR-URL: https://github.com/npm/arborist/pull/295
    Credit: @ruyadorno
    Close: #295
    Reviewed-by: @wraithgar, @nlf

commit 42b952e0b25eb4cf31c817a5133379437564e2e2
Author: isaacs <i@izs.me>
Date:   Fri Jun 18 16:37:45 2021 -0700

    fix(diff): walk target children if root is a link
    
    This expands the behavior that was previously only done for global
    roots, but should really be done for _any_ root dir that is not accessed
    via its realpath.
    
    Fixes: https://github.com/npm/cli/issues/3431
    
    PR-URL: https://github.com/npm/arborist/pull/294
    Credit: @isaacs
    Close: #294
    Reviewed-by: @nlf

commit 1c295c0221e71d7762599a4d5a2f7d7f9d4dbeff
Author: nlf <quitlahok@gmail.com>
Date:   Fri Jun 18 10:06:58 2021 -0700

    fix: do not try to inflate a fresh lockfile
    
    when running an updateAll, we use Shrinkwrap.reset() to empty and reset
    the lockfile metadata. however, due to _inflateAncientLockfile having a
    check on meta.originalLockfileVersion, we need that property to be set
    on a freshly reset lock so that _inflateAncientLockfile knows it has no
    work to be done.
    
    PR-URL: https://github.com/npm/arborist/pull/293
    Credit: @nlf
    Close: #293
    Reviewed-by: @ruyadorno, @isaacs

commit 8b161b005ab3d9969db58a4fe84196066837f304
Author: isaacs <i@izs.me>
Date:   Fri Jun 18 14:33:54 2021 -0700

    bin: allow turning off timer display with --timers=false

commit 970c97618e8fe89bdb67b3bd257fa0573d27381b
Author: isaacs <i@izs.me>
Date:   Wed Jun 16 09:35:29 2021 -0700

    2.6.3

commit 271dd5ff561a9122efca4ffc2954808a5c7453c8
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Jun 10 17:27:58 2021 -0400

    fix extraneous deps on load-actual
    
    When loading an actual tree sometimes extraneous deps were not being
    properly marked as so, since they were not really marked as extraneous
    at the moment of reify, so in order to be strictly correct we need to
    recalculate deps at load-actual in order to make sure extraneous deps
    are properly marked as such.
    
    Related to: https://github.com/npm/cli/issues/2554
    
    PR-URL: https://github.com/npm/arborist/pull/289
    Credit: @ruyadorno
    Close: #289
    Reviewed-by: @isaacs

commit 590fa1813c0201c75b1fa2af0364b4450fbb818e
Author: isaacs <i@izs.me>
Date:   Tue Jun 15 12:26:19 2021 -0700

    ensure node.fsParent is not set to node itself

commit ff35994c7a2ac9cb88e6c27f0e9a45743a611c35
Author: Daniel Park <gimli01@github.com>
Date:   Thu Jun 3 17:15:11 2021 -0700

    fix: removes [_complete] check to apply correct metadata
    
    Closes #2606
    
    PR-URL: https://github.com/npm/arborist/pull/287
    Credit: @gimli01
    Close: #287
    Reviewed-by: @nlf

commit 31e73c97126d3d2f43a2b1fdef0865e56e7f3249
Author: isaacs <i@izs.me>
Date:   Thu Jun 3 11:17:32 2021 -0700

    fix(inventory) handle old and british forms of 'license'
    
    Once upon a time we allowed 'licenses' to provide an array of licenses,
    and some packages out in the wild use the British spelling 'licence'.
    
    Also, added a test for the otherwise uncovered behavior of being able to
    query for inherited properties, which is important for the packageName
    queryable field.

commit 3558012a4699bdf22c57f56d0fd23d6752a8c48b
Author: isaacs <i@izs.me>
Date:   Wed Jun 2 17:28:52 2021 -0700

    use published proc-log module

commit 09def088190f9e2ab35c3ae439ecdbc0d135cbf0
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jun 2 10:30:46 2021 -0700

    2.6.2

commit c9880ef28a4637190d9641bb1024e4e57957438a
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jun 2 10:27:20 2021 -0700

    chore(package-lock): rebuild package-lock

commit d53fd8161735db93cf25a610ebb3f3e140b45c62
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jun 2 10:21:01 2021 -0700

    npm-registry-fetch@11.0.0

commit 31fd1c90b4c9216fcdd963b942d86ace7f34676b
Author: isaacs <i@izs.me>
Date:   Fri May 28 11:39:20 2021 -0700

    2.6.1

commit 05d3a1418e9a2ce2525aefa734f8382049d36f01
Author: isaacs <i@izs.me>
Date:   Mon May 24 13:44:18 2021 -0700

    Properly diff shrinkwrapped nodes without metadata
    
    If a node was included in a shrinkwrap, _but_ that shrinkwrap lacked
    resolved and integrity fields, then updating the shrinkwrapping node
    would not properly diff the children, treating any updates to them as a
    `null` action, even if the version changed.
    
    With this update,
    
    - Any version change is treated as a `CHANGE` action
    - Any lacking integrity is treated as a `CHANGE`, unless:
      - neither actual nor ideal have integrity, and
      - resolved is _also_ lacking, and
      - versions match.
    
    That second case (matching versions, no resolved, no integrity) is
    important to propery support git dependencies and link targets.
    
    Fix: npm/cli#3196
    
    PR-URL: https://github.com/npm/arborist/pull/286
    Credit: @isaacs
    Close: #286
    Reviewed-by: @wraithgar

commit 2ead1e8588cc0cb424e577de9fc561f47d3eb8ab
Author: isaacs <i@izs.me>
Date:   Mon May 24 13:18:49 2021 -0700

    Do not add metadata to node if versions mismatch
    
    When a Node is added to a tree, and lacks resolved and integrity values,
    but its path exists in the metadata source (shrinkwrap or lockfile), we
    apply the metadata that we know to the Node object.  However, we should
    _not_ do this when the version doesn't match, because that means it's a
    different thing.  In those cases, we should just go ahead and let it
    lack the metadata, so that we know to update it later.
    
    This was resulting in very strange cases where the version gets updated,
    and the lockfile and hidden lockfile reflect the change, but the actual
    package contents in node_modules were not updated, because reify thought
    it was the same bits.
    
    Fix: npm/cli#3297
    Fix: npm/cli#3196

commit 66b4db3f9d36997e1f0a5ecb58a160d87eb0be0b
Author: isaacs <i@izs.me>
Date:   Mon May 24 11:16:20 2021 -0700

    fix registryServer usage in benchmark script

commit 523aa569289073d692de833f5434bc2f9ab93c00
Author: isaacs <i@izs.me>
Date:   Wed May 19 14:01:53 2021 -0700

    2.6.0

commit 114b09d4b8bb182281406af4183b10913534393e
Author: isaacs <i@izs.me>
Date:   Wed May 19 13:17:32 2021 -0700

    rebuild: limit to specific workspace list
    
    PR-URL: https://github.com/npm/arborist/pull/284
    Credit: @isaacs
    Close: #284
    Reviewed-by: @ruyadorno, @nlf

commit 8c7a9b25064fcd8bc684b5f38625899edaf7a649
Author: isaacs <i@izs.me>
Date:   Wed May 19 12:51:53 2021 -0700

    diff: include extraneous children in filterSet
    
    This is important so that we can prune extraneous nodes when limiting to
    a specific set of workspaces.  Any extraneous children of nodes in the
    filterSet will be included in the filter set (but *their* dependencies
    will not be walked).

commit ecde0e38104e98451e4f02f5f23cdd63699ced4c
Author: isaacs <i@izs.me>
Date:   Wed May 19 12:17:00 2021 -0700

    include extraneous deps in workspaceDependencySet

commit df10bef7599e3b639f1561e8ea233fdabdedb3be
Author: isaacs <i@izs.me>
Date:   Wed May 19 12:09:09 2021 -0700

    add prune to bin

commit 39a55c1078b39db4730e6b12ae2865d6cb7f6ef3
Author: isaacs <i@izs.me>
Date:   Tue May 18 08:51:01 2021 -0700

    limit reify auto-audit to the set of workspaces provided
    
    Re: https://github.com/npm/arborist/pull/284#issuecomment-843230026

commit 26c05d50404789efcc0b69031669da931d40841c
Author: isaacs <i@izs.me>
Date:   Mon May 17 13:11:25 2021 -0700

    Make audit and audit-fix workspace-aware

commit 7e00f3e3a72656050f42ce6a559a26f194e51350
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:47:01 2021 -0700

    AuditReport: add filterSet option to limit what is audited
    
    This is required to do workspace-limited auditing and fixing.

commit 88d7b55ce44e9723e6aca1c3f5978c7a56796582
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:35:57 2021 -0700

    reify: Add/remove to/from workspaces, and save properly

commit ba761a6eaf1cf33e9ed34c88658a38dfb367fa5d
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:24:31 2021 -0700

    idealTree: Properly update deps in workspace targets

commit b094c41a0b1a7299d08d070b1a49eacd7387c15b
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:20:54 2021 -0700

    Node.canDedupe() should be smart about fsParent deps

commit 86aa402cbee54e53e5d5e105784319cf972082cc
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed May 19 12:01:47 2021 -0400

    add extra info to node.explain
    
    Added to the result object of node.explain():
    - isWorkspace, boolean value, true when a node is a workspace
    - linksIn, array containing all links to a target
    
    PR-URL: https://github.com/npm/arborist/pull/285
    Credit: @ruyadorno
    Close: #285
    Reviewed-by: @isaacs

commit d5d1f353717ee9ab2c6c870a3005d0d6873e7a01
Author: Jordan Harband <ljharb@gmail.com>
Date:   Sun May 16 12:42:30 2021 -0700

    [meta] add missing "engines" field

commit 780adbd4423f7e5ea9ad8fa1cdc8989f40230553
Author: isaacs <i@izs.me>
Date:   Thu May 13 08:57:31 2021 -0700

    2.5.0

commit 71e962f7a10fd7c56e762efcafbe71629a2c53ed
Author: isaacs <i@izs.me>
Date:   Thu May 13 08:45:10 2021 -0700

    Arborist.workspaceNodes and .workspaceDependencySet methods
    
    This adds a simple way for an Arborist instance to turn a list of
    workspace names into a list of nodes, or a set of all deps (direct and
    transitive) that are relied upon by those workspace nodes.
    
    Note that this returns the *target* of the workspace, not the link in
    the root node_modules folder.
    
    PR-URL: https://github.com/npm/arborist/pull/281
    Credit: @isaacs
    Close: #281
    Reviewed-by: @ruyadorno

commit c7cabcfe94faf8d0daf394d056ca985bec9152d3
Author: isaacs <i@izs.me>
Date:   Mon May 10 10:02:52 2021 -0700

    2.4.4

commit a24a4a580c1bef53b14b6d607d9f307db5dd8b99
Author: Gar <gar+gh@danger.computer>
Date:   Thu May 6 13:54:40 2021 -0700

    fix(reify): properly save spec if prerelease
    
    Currently if you add a package w/ spec `*` (or with no spec, which
    defaults to `*`) arborist tries to do a semver.subset to see if it can
    use the spec that actually got installed. This fails if the new spec has
    a prerelease tag in it.
    
    This change fixes it so that if the spec was `*` it just goes ahead and
    uses the new spec no matter what, since no valid semver doesn't match
    `*` in this case

commit fe57602bc0b51298d5bc01ec10f7917d27b8fd06
Author: Gar <gar+gh@danger.computer>
Date:   Mon May 10 09:33:14 2021 -0700

    2.4.3

commit 571e9e4c9e910faf0b993fb0e6734f37e153bd87
Author: isaacs <i@izs.me>
Date:   Thu May 6 14:12:43 2021 -0700

    guard against locale-specific sorting
    
    Node will use the current environment's locale sorting for
    String.localeCompare.  Thankfully, String.localeCompare can take a
    second argument to specify the locale.  Up until Node 13, any valid
    argument provided to the function _may_ be respected if Node was
    compiled with Intl support, or would always be treated as `'en'`
    otherwise.
    
    The solution is to always set the locale to `'en'`.  An alternative
    solution would be to compare strings based on byte order, but this does
    not provide ideal ergonomis.
    
    To verify this, the locale is set in the test environment to `'sk'`,
    which has a significantly different alphabet, including sorting words
    starting with `'ch'` _after_ words starting with `'d'`.
    
    Re: npm/cli#2829
    Fix: #276

commit 736b90256871282e116d54d0e2b655d546171f05
Author: isaacs <i@izs.me>
Date:   Mon May 10 09:13:16 2021 -0700

    remove mutate-fs dep (no longer used)

commit c70b763d6f1ad57c44c8e19f59a52f5f5ce6ec08
Author: isaacs <i@izs.me>
Date:   Mon May 10 09:11:32 2021 -0700

    tcompare@5.0.6

commit 40b5d3013fabd81edf865796bb63195aa509d4c1
Author: isaacs <i@izs.me>
Date:   Mon May 10 09:02:57 2021 -0700

    json-stringify-nice@1.1.4

commit 12eb9b82f7bdd134e57ae089bd18dab2240d6618
Author: Gar <gar+gh@danger.computer>
Date:   Mon May 10 08:55:33 2021 -0700

    tap@15.0.9

commit 972a8d139b59926b97fcdf7d52847461c54e5fb8
Author: nlf <quitlahok@gmail.com>
Date:   Thu May 6 10:08:45 2021 -0700

    2.4.2

commit fd8b156efe18ec6dc02d2b43149cae3d2bebd4be
Author: isaacs <i@izs.me>
Date:   Wed May 5 17:18:27 2021 -0700

    audit: support alias specs and root package names
    
    When the root package has a name like `@magic/semver`, in a folder named
    something like `/path/to/magic/semver`, the audit logic would look at
    node.name, and see it as `semver`, and then report it as a
    vulnerability.
    
    Additionally, a dependency like `npm:mkdirp@0.5.1` would not be detected
    as a vulnerability, because the alias spec would never match against the
    semver range (assuming that the dependency name even was found as a
    vulnerability in the first place).
    
    The fix here is:
    
    1. Add Node.packageName getter, which returns the `name` field from the
      node's package object.
    2. Add this field as a queryable field in the inventory.
    3. Base audits off of the packageName field, rather than the name field.
    
    Fix: https://github.com/npm/cli/issues/3166
    
    PR-URL: https://github.com/npm/arborist/pull/278
    Credit: @isaacs
    Close: #278
    Reviewed-by: @nlf

commit e000b7b5dbc98d73d9ec84e25b026a6dca1c2f26
Author: Gar <gar+gh@danger.computer>
Date:   Wed May 5 14:26:45 2021 -0700

    fix(reify): do not clean up nodes with no parent
    
    Co-authored by @nlf
    
    When reify goes to add omits to the trash list, sometimes it adds things
    it shouldn't, such as top level nodes that are actually links, but
    they're only links elsewhere in the tree where they are properly placed
    (i.e. with the root as the parent).
    
    This PR prevents things like "npm install --production" deleting the
    contents of a linked dev dependency
    
    PR-URL: https://github.com/npm/arborist/pull/277
    Credit: @wraithgar
    Close: #277
    Reviewed-by: @nlf

commit cbcccc9adde002eea53fe2d792935ab0a406ebb2
Author: Gar <gar+gh@danger.computer>
Date:   Wed Apr 28 13:29:20 2021 -0700

    fix(add): save packages in the right place
    
    Right now where we end up saving a dep is not very well coupled to where
    the user requested it.  We are inferring more than we are checking for
    intention.  This moves us to more heavily lean on the `saveType` if
    given when adding a package into the dependencies.
    
    We also were not consistently inferring the saveType.  There was code in
    two places trying to do this, and either place used slightly different
    logic. This moves the logic into one place.
    
    Finally, we are more consistently making certain dependency types
    mutually exclusive, for instance dependencies and devDependencies.
    
    PR-URL: https://github.com/npm/arborist/pull/273
    Credit: @wraithgar
    Close: #273
    Reviewed-by: @nlf

commit 363db3a4d474272a7193e6ced4501c45c9861248
Author: nlf <quitlahok@gmail.com>
Date:   Thu Apr 29 12:33:19 2021 -0700

    2.4.1

commit e4a5fd298c0f1742d12d83d173e619aaaa1b6875
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 15:11:36 2021 -0700

    support resolvable partial intersecting peerSets
    
    In cases where a peerSet _partially_ overlaps another, we were
    previously treating that as a conflict, because not everything in the
    peerSet was being replaced.
    
    So for example,
    
    ```
    root -> (a)
    a -> PEER(w@1, x@1, y@1)
    b -> PEER(x@1.0, y@1.0, z@1.0)
    ```
    
    First we install, and get `w@1.1.0`, `x@1.1.0` and `z@1.1.0`.
    
    Then, we try to install `b`, and need to install the `1.0.0` versions of
    `x` and `y`.  We could replace `x` and `y`, but then `z` had no
    replacement, and was treated as an ERESOLVE mistakenly.
    
    Some work was required to make it still note when a not-replaced member
    of the peer set _is_ indicative of a conflict, because it depends on a
    version of a dep within the peer set that is not satisfied by the one
    being replaced.
    
    Fix: npm/cli#3152
    
    PR-URL: https://github.com/npm/arborist/pull/272
    Credit: @isaacs
    Close: #272
    Reviewed-by: @nlf

commit 1e8bb2cbf349622a9bc30fbd29062aa172572b72
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 09:22:56 2021 -0700

    Prevent and eliminate unnecessary duplicates
    
    When the root package tree bundles its dependencies, previously Arborist
    would treat that as a normal bundled dependency (rather than a
    transitive dependency bundled _by_ a dependency) and refuse to touch it.
    
    This resulted in a strange situation where npm would stubbornly refuse
    to modify the copy of npm-registry-fetch nested underneath its pacote
    dependency, even when pacote or nrf were updated explicitly, requiring
    the deletion of the node_modules tree in order to resolve properly.
    
    A `canDedupe()` method is added to the Node class, and this is used in
    multiple previously (slightly) duplicative code paths where we test to
    see if we can dedupe out a nested Node in the tree, thus both preventing
    and correcting the unnecessary duplicates that would otherwise have
    occurred.
    
    This does introduce the bug/feature/change where now installing a new
    package at the top level will cause npm to remove anything nested within
    the tree that could be deduped against it, as long as that nested
    transitive dependency is not contained in a dep bundle or shrinkwrap.
    
    PR-URL: https://github.com/npm/arborist/pull/271
    Credit: @isaacs
    Close: #271
    Reviewed-by: @nlf

commit 7926369ba1dce86bb0dbc86b327f64dc84d5ec33
Author: isaacs <i@izs.me>
Date:   Wed Apr 28 07:57:31 2021 -0700

    give reify/idealTree tests a longer fetch timeout
    
    Hopefully this makes the macos CI failures less frequent.

commit 85ae30b594d1c7d31a40ea8d4ccace8531628b72
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 15:52:24 2021 -0700

    update and dedupe all deps

commit 4dc4db52d8d2797efee0db194fe7f5d46554c8f7
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 11:29:24 2021 -0700

    Show bundle/shrinkwrap info in printable Node output
    
    This was very helpful in debugging the issue with top-level
    bundleDependencies causing duplication.

commit 85774b1eae19ce3738a65cb9aa550977f73c51eb
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:42:12 2021 -0700

    2.4.0

commit ff8230a59382ef2c51e2740a64ffa87c931c30a1
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:10:12 2021 -0700

    chore(ci): increase test timeout

commit 2a671404bbca4f955d000b2d584e9567cb54caa4
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:01:49 2021 -0700

    chore(dependencies): rebuild package lock

commit 972d931007346c5512c7025f7519acd12c4aef7f
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:01:02 2021 -0700

    npm-registry-fetch@10.0.0

commit 82a132ddd4a269896556f5b9f847c91a2b235ff1
Author: isaacs <i@izs.me>
Date:   Thu Apr 22 10:37:53 2021 -0700

    fix(load-virtual): Prevent excessive bundle deps listing in lockfile

commit e8e9691d7b591b252973141c7898db1cc482be25
Author: Wes Todd <wtodd@netflix.com>
Date:   Mon Apr 12 09:31:30 2021 -0500

    feat: add packumentCache option
    
    PR-URL: https://github.com/npm/arborist/pull/263
    Credit: @wesleytodd
    Close: #263
    Reviewed-by: @isaacs
    
    EDIT(@isaacs): Added test

commit 73a7b001b3dfa682e18fd8e5dfeecfd05f8db20a
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 16:43:30 2021 -0700

    Properly handle file:. dep when bundle deps present
    
    If a package had a dependency on `file:.` (ie, to create a symbolic link
    to the root project within `node_modules`), as well as a
    `bundleDependencies` list, the reifier got into a very strange state and
    would fail to resolve its promise, causing npm to exit with a `cb()
    never called` error.
    
    The solution is:
    
    - Do not do the extract-and-loadActual pass on dependencies that are
      links.
    - Do not create sparse tree folders for dependencies that are links.
      (This wasn't a part of the issue, just a weird inefficiency
      encountered along the way.  We created a dir, only to delete it and
      replace with a symlink later.)
    - Later on in the process, when we check to see whether a node has
      already been reified by virtue of having bundleDependencies, instead
      of merely looking at the package.json data, actually keep a list of
      nodes reified ahead of time in this way.
    - Lastly, do not run `preinstall`, `install`, and `postinstall` scripts
      for links before linking their bins.  We have to run `prepare` on link
      deps prior to linking their bins, but we should still be linking the
      bins ahead of running the other build scripts, like we do for non-link
      deps.
    
    PR-URL: https://github.com/npm/arborist/pull/268
    Credit: @isaacs
    Close: #268
    Reviewed-by: @nlf

commit 7ef8ec59eafda5cdba54155a7bde2769bbb88efe
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 11:01:42 2021 -0700

    color arborist bin logs

commit 6d3641ac27137e16f086e71d2d0c9dd88cbecc67
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 10:49:05 2021 -0700

    put some color in debug logs to make them easier to pick out

commit 6ecce7da828ba7e042327728a3876224f1c2a9b1
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 10:41:33 2021 -0700

    dim timers printed by arborist bin

commit 402bcf42b326e6d1e02afff69ccf2a896e4232dd
Author: nlf <quitlahok@gmail.com>
Date:   Tue Apr 20 10:02:11 2021 -0700

    fix: correctly handle diffing shrinkwrapped dependencies
    
    PR-URL: https://github.com/npm/arborist/pull/267
    Credit: @nlf
    Close: #267
    Reviewed-by: @isaacs

commit 02fb0b7f8dd7031ba17910c37b0afa3aaca4b087
Author: isaacs <i@izs.me>
Date:   Tue Apr 20 11:25:07 2021 -0700

    test on node 16
    
    PR-URL: https://github.com/npm/arborist/pull/265
    Credit: @isaacs
    Close: #265
    Reviewed-by: @nlf

commit f857b5d50a00bdd8081611ce91c42431b3b464b2
Author: isaacs <i@izs.me>
Date:   Tue Apr 20 11:24:52 2021 -0700

    update tap to work on node 16

commit f38517ddf6e1fc8194ea53f2fc5093c739d8c27d
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 17:01:45 2021 -0700

    Correct shell quoting for windows cmd.exe

commit 380e85bc586cdc5bcbc63e2b9188c114dd827bff
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 15:03:18 2021 -0700

    use cannonical tap assertion names

commit a67124e3d3a8236fd16f11ae51def264a43a0eb1
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 14:58:25 2021 -0700

    Reduce out some mocks in reify test

commit 1f35051a140a92a9684c3fe9582a4117acac2da1
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 14:49:51 2021 -0700

    Replace require-inject with t.mock

commit 6d28730d2260b216a914521b39917489409200d8
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 10:40:57 2021 -0700

    use t.start() to spin up registry mock server

commit dc9c18edf0c8a4358f0d3185550b6943353f403e
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 10:15:07 2021 -0700

    tap@15, update all deps, regen snapshots

commit 44cd2aee9fe157b2aebc978278d7acf88f23e9ce
Author: nlf <quitlahok@gmail.com>
Date:   Wed Apr 14 11:46:58 2021 -0700

    fix: correctly handle peer conflicts between peers
    
    PR-URL: https://github.com/npm/arborist/pull/266
    Credit: @nlf
    Close: #266
    Reviewed-by: @isaacs

commit 5a185fbea691a86668e873ed47fb8897192312ff
Author: isaacs <i@izs.me>
Date:   Thu Apr 1 11:26:08 2021 -0700

    2.3.0

commit 3e907ba27d847742693cbc4d38221f4b9fe135f5
Author: isaacs <i@izs.me>
Date:   Wed Mar 31 18:21:44 2021 -0700

    Provide currentEdge in ERESOLVE if known
    
    This provides another fail-safe for the CLI to report _something_ useful
    to the user when an ERESOLVE happens, if by some brokenness in our tree
    handling we don't have the node in the tree somehow to provide a current
    or peerConflict.
    
    PR-URL: https://github.com/npm/arborist/pull/259
    Credit: @isaacs
    Close: #259
    Reviewed-by: @nlf

commit ee504e023e0583fa8c6089ad44c057b7564f2257
Author: isaacs <i@izs.me>
Date:   Wed Mar 31 17:59:10 2021 -0700

    tree-check: add check for nodes with same path as root

commit e10dd8749b195949409b72e95f63f3e6b13e2d7e
Author: isaacs <i@izs.me>
Date:   Wed Mar 31 17:58:40 2021 -0700

    Link nodes to the root should have the root as a target

commit 040b6c3af5d755b79b7570643dd104f90b99134c
Author: isaacs <i@izs.me>
Date:   Tue Mar 30 10:39:40 2021 -0700

    idealTree: Add/remove to/from workspaces when set, not root
    
    PR-URL: https://github.com/npm/arborist/pull/258
    Credit: @isaacs
    Close: #258
    Reviewed-by: @nlf

commit ab558c0c2045d4ffa0337686c92296e0fb599133
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 17:32:44 2021 -0700

    idealTree: apply user requests immediately before buildDeps

commit 60988d19d5296cdec5c4edc1b43d6095b850a5cb
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 16:48:09 2021 -0700

    Show terse workspaces in printable output
    
    This is really important for debugging when "have workspaces been loaded
    yet" is a relevant consideration.

commit e3950bf709661c9f1b44a3d3d5aea3f64e918c3c
Author: isaacs <i@izs.me>
Date:   Tue Mar 30 11:19:39 2021 -0700

    loadActual: load workspaces when using hidden lock

commit 26016b9be1b1b7f47b98b4cbdea6f02f746719b9
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 16:40:33 2021 -0700

    loadActual: load workspace targets when links missing

commit 98a8f43a233a8c209ccc9cabd73eeac6f48ae9a3
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 13:19:59 2021 -0700

    Make explicitRequests a set of Edges, rather than strings
    
    This is in preparation for the use case where explicitRequests includes
    edges from nodes other than the project root, so that we can add deps
    to workspaces.

commit 94c4d9c4931a23445b1426517446f2d56fcdd8f1
Author: isaacs <i@izs.me>
Date:   Fri Mar 26 11:50:56 2021 -0700

    json-stringify-nice@1.1.2
    
    Fixes sorting incorrectly when a dependency is set to an empty string
    
    PR-URL: https://github.com/npm/arborist/pull/257
    Credit: @isaacs
    Close: #257
    Reviewed-by: @nlf

commit a8a1e84f27094390d91005b7a67b9023ffad67df
Author: isaacs <i@izs.me>
Date:   Thu Mar 25 12:00:46 2021 -0700

    Correctly update actualTree after filtered reify
    
    This also corrects an issue where manually updating the package.json
    file would sometimes not be reified properly, if a new link target
    matches the one that was formerly reified.

commit c5d1b9fbff10af8fb13eba714c55a90fc9b49c84
Author: isaacs <i@izs.me>
Date:   Thu Mar 25 10:12:41 2021 -0700

    do not take a link's target when removing link from tree
    
    This causes major problems when moving links and targets between trees.
    When we move the link from one tree to another, it pulls its target,
    out, meaning that the target ends up becoming orphaned.
    
    Say there is a matching link and target in two different trees, A and B,
    and we want to replace the link and target in one tree with the link and
    target in another.
    
    If we move the target A to tree B first, then it replaces the target B,
    and link B is updated to point to it.
    
    Then, we move link A to tree B, replacing link B.  To do that, we move
    link B out of tree B, which _takes target B with it_, leaving the ported
    link A without a target in tree B.

commit dc03a68a74fa196acc581c131b00ceb03d0f5524
Author: isaacs <i@izs.me>
Date:   Thu Mar 25 09:54:36 2021 -0700

    printable: do not explode on links lacking a target

commit 5718c118eed4a14f4a7f8941e82957e1f174f8cb
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 17:37:00 2021 -0700

    Add 'workspaces' list for reification filtering

commit c8234d4c3b3dc4f23bcd0dace55d315ea137c755
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 12:46:59 2021 -0700

    bin: take -w/--workspace argument

commit d9e058df296e87e6b02e91f73a425e76e8b2b131
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 12:46:05 2021 -0700

    Add filterNodes option to Diff.calculate

commit d8eb545c1e40c8d4897735929da73acdbf396cc5
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 12:46:37 2021 -0700

    notes about filtered reification

commit 9e324976ea5211dc24430a83928ca41b69e46b33
Author: isaacs <i@izs.me>
Date:   Tue Mar 23 16:58:24 2021 -0700

    Do not chownr the arborist root path
    
    Fix: https://github.com/npm/arborist/issues/252

commit b960b77357e7259abb2899b597d7a4a3dd80cbe4
Author: isaacs <i@izs.me>
Date:   Tue Mar 23 09:09:40 2021 -0700

    2.2.9

commit 22b2d13a0e65e296d46d6059a3dec5f5dc475bbf
Author: isaacs <i@izs.me>
Date:   Fri Mar 19 09:04:22 2021 -0700

    Never bundle when saving as peer/peerOptional
    
    There's a bit of logic in npm/cli that sets the `saveBundle` option to
    false based on the various `--save-xyz` flags.  It is easier and safer
    to just never bundle if we're saving a peer dep, in the one place where
    that decision is made.
    
    PR-URL: https://github.com/npm/arborist/pull/255
    Credit: @isaacs
    Close: #255

commit 5a4b58c1b784c9c646e515e92b4bea87b24cc49a
Author: James Chen-Smith <jameschensmith@gmail.com>
Date:   Wed Mar 17 01:01:06 2021 -0500

    fix: honor explicit prefix
    
    Honors explicit prefix.
    
    Signed-off-by: James Chen-Smith <jameschensmith@gmail.com>
    
    PR-URL: https://github.com/npm/arborist/pull/254
    Credit: @jameschensmith
    Close: #254
    Reviewed-by: @isaacs

commit 9792bb419fa510aa87e57d182330a617b7d92c29
Author: James Chen-Smith <jameschensmith@gmail.com>
Date:   Mon Mar 22 21:56:05 2021 -0500

    semver@7.3.5

commit 252371e3224f0c0584b0890ade86e529e135cd26
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Mar 11 15:10:08 2021 -0500

    2.2.8

commit fa16e093c7beeeafd3fffbe945564d38d3cf2321
Author: isaacs <i@izs.me>
Date:   Mon Mar 8 16:34:46 2021 -0800

    fix: respect link deps when calc peer dep sets
    
    * Show useful debug printing for virtual root nodes
    * Respect hidden lockfiles when symlink deps present. As long as the
    target of the link is in the shrinkwrap, and not newer.
    * Respect link deps when calculating peerDep sets
    
    Previously, we were not including link targets in the virtual trees
    where peer dependency sets are calculated.  Additionally, we were still
    using the path `/virtual-root` for the virtual node, even though this is
    no longer load-bearing.  (And, as of the recent change to the Node
    printable output, no longer necessary or particularly helpful for
    debugging.)
    
    As a result, a link dependency from the root node like `file:../../foo`
    would get resolved against `/virtual-root`, resulting in `/foo`, which
    of course does not match any Node in the virtual tree.  The outcome was
    an ERESOLVE error where the `current` Node is shown as having no name
    or version (because it is an unsatisfied Link).
    
    The solution is two-part.
    
    First, the path of the virtual tree root now matches the path of the
    Node that it is sourced from.
    
    Second, any Link children of the source node have their targets mirrored
    in the virtual tree, resulting in them being matched appropriately.
    
    The result is that a Link dependency can now properly satisfy a
    peerDependency.  Test shows an example of using a Link to a local Node
    as a workaround for a peerSet that otherwise would not be resolveable.
    
    This can of course be abused to get around valid peerDep contracts, but
    if they user takes it on themselves to use a local fork of a dependency,
    we should respect that in buildIdealTree as we do elsewhere.
    
    Fix: npm/cli#2199
    
    PR-URL: https://github.com/npm/arborist/pull/249
    Credit: @isaacs
    Close: #249
    Reviewed-by: @ruyadorno

commit 2657dcb87e299c4fa22ed26ebac9df4537b11213
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Mar 9 13:11:43 2021 -0500

    2.2.7

commit d5f73452c0a1f1aff034276d6762bd73d81ee006
Author: isaacs <i@izs.me>
Date:   Mon Mar 8 15:43:50 2021 -0800

    Do not revert a file: dep to version on bare name re-install
    
    Co-author: @wraithgar
    
    PR-URL: https://github.com/npm/arborist/pull/248
    Credit: @isaacs
    Close: #248
    Reviewed-by: @wraithgar

commit 31516bffec65c7485f20e90e159c8262c6c1fca0
Author: isaacs <i@izs.me>
Date:   Mon Mar 1 15:59:05 2021 -0800

    2.2.6

commit 63ec6dda3c5391a4c7010c11065417a966b605db
Author: kumavis <aaron@kumavis.me>
Date:   Mon Feb 22 15:32:14 2021 +0800

    Add edge.bundled flag, include in explain() output
    
    PR-URL: https://github.com/npm/arborist/pull/241
    Credit: @kumavis
    Close: #241
    Reviewed-by: @isaacs

commit 910f736fd81cf29263ca97beb01c3ea6f1423eaf
Author: Gar <gar+gh@danger.computer>
Date:   Thu Feb 25 09:15:25 2021 -0800

    2.2.5

commit 1ac05e01b5587893b52f4b548e0396e50cdd63fd
Author: isaacs <i@izs.me>
Date:   Thu Feb 25 09:00:42 2021 -0800

    fix: hidden lockfiles were not respected on Node v10.0-10.12
    
    * Polyfill withFileTypes option for fs.readdir
    
    This was causing hidden lockfiles to be silently ignored in
    node versions that did not support fs.readdir with this option.
    
    * @npmcli/installed-package-contents@1.0.7
    * other polyfills to make tests pass on node v10.1
    * tell node not to spam warnings during tests
    * Suppress warnings and fix up snapshots for v10.1
    * more aggressive snapshot cleanup for node pretty printing
    * ci: do not check linting on node versions that don't support it
    * ensure single source of truth for 'test' script

commit 6f99a5e7db8fe21ace364bf7533fe5447149cc25
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 12:25:54 2021 -0800

    2.2.4

commit d51647e17ee3f0947fb30e6adfa0ea16f99a4af9
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 12:18:58 2021 -0800

    Do not rely on underscore fields in package.json
    
    This also uncovered a bug where the yarn registry was being used when
    the npm registry should have been used.  This bug is also fixed in this
    commit, and was hidden by the fact that our package.json files on disk
    for yarn tests were placed there by npm v6, which put the proper
    resolved values in _resolved in the package.json file iteself.

commit c102725b53dfdde96a25dbb5cc1bed23876a9b80
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 12:20:36 2021 -0800

    read-package-json-fast@2.0.2
    
    cc: @kumavis
    Fix: #242

commit ddca494fef78f33134a517cf1d784a01c8629854
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 10:53:38 2021 -0800

    Do not remove global packages when updating by name
    
    Adds update.names to this[_explicitRequests] so that when we update a
    single named package in the global space, it doesn't read the entire
    global actual tree, resulting in a diff which tells reify to remove
    everything else.
    
    Fix: https://github.com/npm/cli/issue/2736
    Credit: @isaacs
    Reviewed-by: @nlf, @ruyadorno

commit 59946e70274af9d593175c3de8d76674f258a11e
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 10:27:16 2021 -0800

    bin: turn --before=DATE into a proper Date object

commit b02a4d954a9a92bc0bd91ae5322d2a43df6ff93d
Author: isaacs <i@izs.me>
Date:   Thu Feb 18 15:08:23 2021 -0800

    2.2.3

commit f25367dbf1948ccf13a0726e26a42ae407011155
Author: isaacs <i@izs.me>
Date:   Wed Feb 17 14:04:34 2021 -0800

    Fix additional peerOptional conflict cases
    
    case D
    
    ```
    root -> (x, z@1)
    x -> PEEROPTIONAL(y)
    y -> PEER(z@2)
    ```
    
    case E
    
    ```
    root -> (x, z@1)
    x -> PEEROPTIONAL(y) PEER(z@1)
    y -> PEER(z@2)
    ```
    
    case F
    
    ```
    root -> (x, z@1)
    x -> PEEROPTIONAL(y) PEER(z@1) PEER(w@1)
    w -> PEER(z@1)
    y -> PEER(z@2)
    ```
    
    Case F properly reproduces the failure seen by installing
    ng-packagr@11.1.3 alongside typescript@4.
    
    Fix: #236
    
    cc: @kyliau
    
    PR-URL: https://github.com/npm/arborist/pull/237
    Credit: @isaacs
    Close: #237
    Reviewed-by: @isaacs

commit b0997c91083f1ebd1c4e8d4e996b7aa5e4c39ad2
Author: isaacs <i@izs.me>
Date:   Wed Feb 17 12:40:57 2021 -0800

    Prefer peer over prod dep, if specified in both
    
    Also, preserve the duplication if we update or modify the package.json
    file.
    
    Fix: https://github.com/npm/rfcs/issues/324
    
    PR-URL: https://github.com/npm/arborist/pull/235
    Credit: @isaacs
    Close: #235
    Reviewed-by: @nlf

commit 7e8b82472b60a047be6603746c82536f36c1d8d6
Author: isaacs <i@izs.me>
Date:   Wed Feb 17 12:21:48 2021 -0800

    Do not write package.json if nothing changed
    
    Need a similar fix for Shrinkwrap class.
    
    Fix: https://github.com/npm/arborist/issues/232
    
    PR-URL: https://github.com/npm/arborist/pull/234
    Credit: @isaacs
    Close: #234
    Reviewed-by: @nlf

commit aa9915301362eacd27bc7fa5a7d3d73a17895bbd
Author: isaacs <i@izs.me>
Date:   Thu Feb 18 14:58:55 2021 -0800

    Unpack shrinkwrapped deps not already unpacked
    
    We loop over the diff.leaves to find all the shrinkwraps that _must_ be
    unpacked ahead of time in order to complete the idealTree.  However, if
    the idealTree already contains the children of the shrinkwrap-containing
    module (because it's been previously installed and saved to a lockfile),
    then we saw the hasShrinkwrap flag, and assumed it had already been
    unpacked.
    
    This tracks a Set of all nodes unpacked for the purposes of reading
    their shrinkwraps, and only skips _those_ modules at unpackNewModules.
    
    Different approach than #233, without adding extra items into the
    diff.leaves, which can have the side effect of calling mkdirp more than
    necessary.
    
    Close: #233
    Fix: https://github.com/npm/cli/issues/2251
    Reviewed-by: @nlf

commit 4a3322d449bce34a3bcddd6eb1d2803c6392ffcd
Author: nlf <quitlahok@gmail.com>
Date:   Tue Feb 16 13:36:14 2021 -0800

    fix: skip optional deps with mismatched platform or engine
    
    PR-URL: https://github.com/npm/arborist/pull/231
    Credit: @nlf
    Close: #231
    Reviewed-by: @isaacs

commit a98d6fd812151d72fad025c1438c1129c707cf32
Author: nlf <quitlahok@gmail.com>
Date:   Tue Feb 16 13:49:17 2021 -0800

    add notes about new optional dependency behavior

commit 894fbef0aef933b6b348021d206ea9f38ecd66fc
Author: nlf <quitlahok@gmail.com>
Date:   Tue Feb 16 13:35:01 2021 -0800

    expand the platform-specifying-test-package fixture so it has a tarball and uses a completely invalid os
    
    also added an actual assertion to a build-ideal-tree test, and removed a test skip that we no longer need

commit a0f590c212a35120764878d2265b65d5ca0c744c
Author: isaacs <i@izs.me>
Date:   Thu Feb 18 14:14:35 2021 -0800

    @npmcli/metavuln-calculator@1.1.0

commit d407da7cdab7f4ad5fed73c47c8df16e7c518224
Author: isaacs <i@izs.me>
Date:   Fri Feb 12 16:57:48 2021 -0800

    default audit severity=high, vulnerable_versions=*
    
    Fix: https://github.com/npm/cli/issues/1875
    Related: https://github.com/npm/metavuln-calculator/pull/4
    
    PR-URL: https://github.com/npm/arborist/pull/230
    Credit: @isaacs
    Close: #230
    Reviewed-by: @ruyadorno

commit 7d5cb3d2474f64a21021f9018c2dc08b4562c929
Author: isaacs <i@izs.me>
Date:   Fri Feb 12 08:57:23 2021 -0800

    2.2.2

commit c2666af96c9b2a8b45fbd7603da20bf16a06d185
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 11 22:11:55 2021 -0500

    fix: deps of linked deps in package-lock
    
    When having optional dependencies of a dependency of
    a top-level link dependency, e.g:
    
        root -> LINK(a)
        a -> (b)
        b -> OPTIONAL(c)
    
        * c marked as extraneous
    
    Any optional dependency (and all its nested nodes) were marked
    as extraneous in package-lock due to `calcDepFlags` missing
    properly following the target of Link nodes.
    
    This changeset fixes it by properly following the result of the
    `treeverse.visit` method that will have already followed any
    link targets at that point.
    
    Fixes: https://github.com/npm/cli/issues/2505
    
    PR-URL: https://github.com/npm/arborist/pull/229
    Credit: @ruyadorno
    Close: #229
    Reviewed-by: @isaacs

commit 1d68907dca731c2b4c63fcf1ad98b61ab60facc6
Author: isaacs <i@izs.me>
Date:   Thu Feb 11 15:36:58 2021 -0800

    Allow --force to override conflicted peerOptional
    
    With a dependency graph like this:
    
    ```
    root -> (a, b@1)
    a -> PEEROPTIONAL(b@2)
    ```
    
    We do not install the peerOptional dependency by default, so even though
    `b@2` is included in the peerSet of `a`, it is not added to the tree.
    
    Then, the `b@1` dependency is added to satisfy root's direct dependency
    on it, causing the `a -> b@2` edge to become invalid.
    
    We then try to resolve the `a -> b@2` edge, and find that we cannot
    place it anywhere, causing an `ERESOLVE` error.
    
    However, because `b@2` is no longer a part of a peerSet sourced on the
    `root` node, we miss the chance to detect that it should be overridden,
    resulting in an `ERESOLVE` failure even when `--force` is used.
    
    This commit adds the check for `this[_force]` prior to crashing with
    ERESOLVE, so that cases that avoid our earlier heuristics still accept
    the invalid resolution when `--force` is in effect.
    
    Fix: #226
    Fix: https://github.com/npm/cli/issues/2504
    
    PR-URL: https://github.com/npm/arborist/pull/228
    Credit: @isaacs
    Close: #228
    Reviewed-by: @ruyadorno

commit 828990cbbe2e8e99f0f4d33f9c4fe88965306fb8
Author: isaacs <i@izs.me>
Date:   Thu Feb 11 14:29:38 2021 -0800

    bin: remove outdated ERESOLVE printing code

commit f3758731d2592394c75b8091553f24a778cc1cd2
Author: isaacs <i@izs.me>
Date:   Wed Feb 10 14:27:45 2021 -0800

    Do not ERESOLVE on peerOptionals not added to tree
    
    For these dependency graphs:
    
        # case a
        root -> (x, y@1)
        x -> PEEROPTIONAL(z)
        z -> PEER(y@2)
    
        # case b
        root -> (x) PEEROPTIONAL(y@1)
        x -> PEEROPTIONAL(y@2)
    
        # case c
        root -> (x) PEEROPTIONAL(y@1)
        x -> PEER(z)
        z -> PEEROPTIONAL(y@2)
    
    The peerOptional dependency is included in the peerSet, which would
    raise an ERESOLVE conflict at the peerSet generation stage, even though
    the peerOptional dependencies will not actually be added to the tree.
    
    To address this, this commit tracks the nodes which are actually
    required in the peerSet generation phase, by virtue of being
    non-optionally depended upon by a required node in the peerSet.
    
    If a conflict occurs on a node which is not in the required set during
    the peerSet generation phase, we ignore it in much the same way that we
    would ignore peerSet errors in metadependencies or when --force is used.
    
    Of course, if the peerOptional dependency is _actually_ required, to
    avoid a conflict with an invalid resolution present in the tree already,
    and there is no suitable placement for it, then ERESOLVE will still be
    raised.
    
    Fix: #223
    Fix: https://github.com/npm/cli/issues/2667
    
    PR-URL: https://github.com/npm/arborist/pull/227
    Credit: @isaacs
    Close: #227
    Reviewed-by: @ruyadorno

commit 30e6d7ec6f88b5d31dfa2189c1bc78a8930c3c00
Author: isaacs <i@izs.me>
Date:   Wed Feb 10 14:22:46 2021 -0800

    Ensure correct flags on shrinkwrapped module deps
    
    When running `Arborist.loadVirtual()` to read the tree from the point of
    a tree that contains a shrinkwrap, we were inappropriately setting all
    dep flags to `false`, as we would when reading the virtual tree in a
    project root.
    
    This patch updates loadVirtual to ensure that it always sets the proper
    flags on nodes within the subtree, if the root supplied is not actually
    the project root.
    
    As a result, changes had to be made to the process that inflates
    old/ancient lockfiles, and reify()'s handling of garbage data needed to
    be updated as well (since the cases being tested previously would now
    typically prune the invalid data out as extraneous before getting to the
    reify step).  If a node DOES make it through to reify() in the
    idealTree, but lacks a version or resolved field, then something is very
    wrong, and so we now print a warning to the user asking them to re-try
    the install or delete their lockfile (which will typically fix the
    problem, since it either is a root dep that's being removed and will be
    re-added properly, or a metadep problem that can only be fixed with a
    full tree rebuild anyway).
    
    PR-URL: https://github.com/npm/arborist/pull/225
    Credit: @isaacs
    Close: #225
    Reviewed-by: @ruyadorno, @nlf

commit 3724d2a9fb5a0f59c82f961023f5a7e8478e04c1
Author: nlf <quitlahok@gmail.com>
Date:   Wed Feb 10 11:41:12 2021 -0800

    use the idealtree target path if it exists
    
    This ensures relpaths are from the correct root
    
    PR-URL: https://github.com/npm/arborist/pull/224
    Credit: @nlf
    Close: #224
    Reviewed-by: @wraithgar, @ruyadorno

commit 4f2c0287346b3b30069a93a243fa048f6c3120c1
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 12:06:04 2021 -0500

    2.2.1

commit dc52834af0f38d3822918571f20d149218a60c66
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 12:03:44 2021 -0500

    fix: read-package-json-fast update
    
    dependencies are now pruned if they appear in optionalDependencies, this
    updates a bunch of snapshot files that were expecting that info.

commit 9d4c87b867d35dcc40980bbb454b9bf41c75db1c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:14:22 2021 -0500

    read-package-json-fast@2.0.1

commit ae53a0a3d8f261d7a1d9b777dc80d68220fbc581
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:13:56 2021 -0500

    pacote@11.2.6

commit 10990813cfe4a574e9136037685dac50771bcbf4
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:13:32 2021 -0500

    @npmcli/run-script@1.8.2

commit 3580826d2483f582d781a564d09e0b7f7f25fbfc
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:13:03 2021 -0500

    @npmcli/map-workspaces@1.0.2

commit 19f182856b953840f037148cb9cc0e636fd6fdeb
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:12:38 2021 -0500

    @npmcli/installed-package-contents@1.0.6

commit b08c58b41368dbff53c274ab80e7ec234a08a415
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 18:12:32 2021 -0500

    2.2.0

commit 183330484d1089aa303b1ec6bf990fd72437fe74
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 18:02:13 2021 -0500

    update patch versions in package-lock

commit 26702bc4d2608df1185a588dcdb0a573bf6c4b76
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 17:59:15 2021 -0500

    pacote@11.2.5

commit b0efcc52a4c113ff82f02eb5e61cbd165c3f82ed
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 17:58:21 2021 -0500

    update package-lock

commit 03d453c4b4bb42c199aa4ae070d4cee3e7273ded
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Feb 2 18:12:10 2021 -0500

    fix: package.json saving optional deps
    
    Reify currently duplicates entries listed as optionalDependencies in the
    users' package.json files. While it's working as expected this is
    unexpected to a number of users and it also contradicts our own docs on
    it:
    
        Entries in optionalDependencies will override entries of the same
        name in dependencies, so it's usually best to only put in one place.
    
    This patches this UX problem by adding an extra check that will avoid
    adding a dependency to the package.json `dependencies` object in case
    that package is already listed under `optionalDependencies`.
    
    Fixes: https://github.com/npm/cli/issues/2203
    Fixes: https://github.com/npm/cli/issues/1886
    Fixes: https://github.com/npm/cli/issues/724
    
    EDIT(isaacs): Moved this into updateRootPackageJson in pairing session
    
    PR-URL: https://github.com/npm/arborist/pull/221
    Credit: @isaacs
    Close: #221
    Reviewed-by: @ruyadorno

commit 4185bd5ada0d3ed1dbb0de86c65cfc6aee551c10
Author: isaacs <i@izs.me>
Date:   Wed Feb 3 18:17:31 2021 -0800

    Turn the example scripts into a bin
    
    Because the world needs another package manager.
    
    PR-URL: https://github.com/npm/arborist/pull/220
    Credit: @isaacs
    Close: #220
    Reviewed-by: @ruyadorno

commit e6a188cc9ad4c983654e857ba57551ab46d34909
Author: isaacs <i@izs.me>
Date:   Wed Feb 3 16:11:13 2021 -0800

    make logging and option parsing consistent in example scripts

commit a43d88f5509fdb11b547adaf6d8b541ca231fe8b
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 11:42:40 2021 -0800

    2.1.1

commit 4caa34a0c22320ed19ac38496e8207b8d2f46c54
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 11:12:06 2021 -0800

    update deps

commit dfb4319d677b46be59474ffcdc4ae84c57572e13
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 11:11:04 2021 -0800

    pacote@11.2.4

commit 2fc15258e6ffdefed8a9fd30816e8a10e61c1638
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 10:20:04 2021 -0800

    Install bins properly when global root is a link
    
    Also fixes up a few other places where we were checking isRoot and
    should have been checking isProjectRoot.
    
    Fix: https://github.com/nodejs/build/issues/2525
    
    PR-URL: https://github.com/npm/arborist/pull/217
    Credit: @isaacs
    Close: #217
    Reviewed-by: @nlf

commit 977c9e16f89abf93e1fde5de40f30c3a793cd643
Author: isaacs <i@izs.me>
Date:   Fri Jan 29 17:32:14 2021 -0800

    scripts: DRY options parsing, tree printing
    
    At this point, all tree printing in Arborist for human consumption
    should be using the built in Node.toJSON printable methods.
    
    PR-URL: https://github.com/npm/arborist/pull/216
    Credit: @isaacs
    Close: #216
    Reviewed-by: @nlf

commit 0cbaacfa1b2be27c7cb9c1c68a034295b7144c5a
Author: isaacs <i@izs.me>
Date:   Fri Jan 29 17:24:40 2021 -0800

    DRY all the tree printing tests, lint tests
    
    This gets rid of all the custom tree-printing and duplicative path
    normalization done in all tests, and adds the tests to the set of files
    to be linted.

commit 15e81dca3b8347c985452374ff65cb059abf7cb2
Author: isaacs <i@izs.me>
Date:   Thu Jan 28 16:39:58 2021 -0800

    Properly track dev edges on virtual root nodes
    
    If the virtualRoot node has a sourceReference, and that sourceReference
    node would get its devDep edges loaded, then the virtualRoot node should
    as well.
    
    This caused a very useless ERESOLVE error, which could not be properly
    forced away, when installing in a project that had conflicting peer deps
    in its dev tree.
    
    Related to: https://github.com/npm/cli/issues/2548
    
    PR-URL: https://github.com/npm/arborist/pull/214
    Credit: @isaacs
    Close: #214
    Reviewed-by: @nlf

commit 3b02f76c691def829e7d26ba0d52989a07e37390
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jan 27 15:40:09 2021 -0800

    fix(install): make sure to reload explicitRequests
    
    when we are placing our deps, if our edge dep was explicitly requested,
    we want to re-place it instead of leaving whatever was there before.
    
    This will mean doing something like `npm install foo` will install the
    latest version of `foo` that your tree currently allows, instead of
    doing nothing if any version already existed
    
    PR-URL: https://github.com/npm/arborist/pull/211
    Credit: @wraithgar
    Close: #211
    Reviewed-by: @isaacs

commit d94f06894f2635830fd4af71029898e888812bc9
Author: nlf <quitlahok@gmail.com>
Date:   Fri Jan 29 10:24:14 2021 -0800

    fix global update all so it actually updates things
    
    PR-URL: https://github.com/npm/arborist/pull/215
    Credit: @nlf
    Close: #215
    Reviewed-by: @isaacs

commit 3bf786ca6248842cb3fba90c485e9b45bb493e96
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Jan 28 16:18:50 2021 -0500

    2.1.0

commit 47670a284c182885fe9a51c8cf8fee4ca9690462
Author: isaacs <i@izs.me>
Date:   Wed Jan 27 14:27:51 2021 -0800

    Prevent ERESOLVEs caused by loose root dep specs
    
    Given the following dep graph:
    
    ```
    root -> a@*, b@2
    b -> PEER(a@1)
    ```
    
    when we load the peerSet for `b@2`, we pull in the parent's
    spec for that dependency, `a@*`.  This may result in adding `a@2` to the
    tree, which conflicts with b's peer dependency.  However, `a@1` would
    have _also_ satisfied the root's dependency and _not_ caused a conflict.
    
    When there is no version that can be found to satisfy both dependencies,
    then we use the parent's dependency and warn/crash as we would have
    previously.  However, with this commit, we are more aggressively
    deduplicating the parent/child dependency collision to avoid ERESOLVEs
    that are unnecessary.
    
    This increased deduplication results in a lot of churn in the test
    snapshot, because it typically means getting an earlier or more
    restrictive version of a shared peer dependency.
    
    PR-URL: https://github.com/npm/arborist/pull/213
    Credit: @isaacs
    Close: #213
    Reviewed-by: @ruyadorno

commit a527ffaf779fc43e0b6921d56d80fd127df5b718
Author: isaacs <i@izs.me>
Date:   Thu Jan 28 10:45:02 2021 -0800

    More 'root is a link' cleanup
    
    There were a few places in buildIdealTree where we do different behavior
    if a node is the root.  However, it should really be if the node is
    either the root, *or* the node that a Link root targets.
    
    Add Node.isProjectRoot to mean 'the root node, or the target of a root
    link node'.
    
    PR-URL: https://github.com/npm/arborist/pull/212
    Credit: @isaacs
    Close: #212
    Reviewed-by: @nlf

commit 8d71ff9ab8a4ecf092a9b6b09991a129945104da
Author: isaacs <i@izs.me>
Date:   Tue Jan 26 13:50:58 2021 -0800

    Detect conflicts among nested peerOptional deps
    
    We do not normally install optional peerDependencies, so we were
    skipping over them when building up the peer set that is evaluated for
    placement within the tree.
    
    However, if an optional peer dep _conflicts_ with something in the tree,
    then it will be seen as an invalid edge, and attempt resolution.
    
    This results in a problem in the following scenario:
    
    ```
    root -> (a, x)
    a -> b
    b -> PEER(k@1)
    x -> y
    y -> PEEROPTIONAL(k@2)
    ```
    
    We place a, b, k@1, and x in the root node_modules without incident.
    
    Then, we evaluate y, and did not add `k@2` to its peerSet, because it
    is a peerOptional.  Since it does not have any apparent peers to
    conflict, it is _also_ placed at the root level.
    
    Then, we look to the invalid edges coming out of `y`, and find `k@2` is
    invalid, because it resolves to `k@1`, and there is no place to put it,
    because `y` is already in the root level, where the conflict exists, and
    we ERESOLVE.
    
    The solution is to include peerOptional edges when creating the peerSet,
    but still omit missing peerOptional deps when looking for invalid edges
    needing further resolution.
    
    Fix: https://github.com/npm/cli/issues/2265
    
    PR-URL: https://github.com/npm/arborist/pull/209
    Credit: @isaacs
    Close: #209
    Reviewed-by: @wraithgar, nlf

commit fb66c0109450b250b51c2f1bf85456e0e4fb4ef5
Author: isaacs <i@izs.me>
Date:   Mon Jan 25 15:22:04 2021 -0800

    Rollback when a fatal signal arrives during reification
    
    This also fixes an issue where the rollback did not properly restore the
    state if installing a _new_ package, since there was no move required
    when creating the sparse tree in that case, resulting in potentially
    half-installed deps being left behind.  Found while combing through
    testing every rollback for signal handling.
    
    Fix: https://github.com/npm/cli/issues/2312
    
    PR-URL: https://github.com/npm/arborist/pull/208
    Credit: @isaacs
    Close: #208
    Reviewed-by: @ruyadorno, @wraithgar

commit 3b8aa5008fb6d9bc542d8a7774fbe79e8eae1af3
Author: isaacs <i@izs.me>
Date:   Mon Jan 25 10:39:54 2021 -0800

    add signal handling logic for rollback support

commit 5dfd0a17021786225772f0812c5373a7c8806961
Author: isaacs <i@izs.me>
Date:   Thu Jan 21 12:27:24 2021 -0800

    properly buildIdealTree when root is a symlink
    
    PR-URL: https://github.com/npm/arborist/pull/210
    Credit: @nlf
    Close: #210
    Reviewed-by: @isaacs

commit 7169e0349ceb2e0e9afc6b154369aa18df57f4d6
Author: nlf <quitlahok@gmail.com>
Date:   Tue Jan 26 13:28:53 2021 -0800

    remove old printable tree in favor of builtin toJSON method

commit f7777624879827a7016f8bcf0453aa7a786f707c
Author: isaacs <i@izs.me>
Date:   Fri Jan 22 11:01:59 2021 -0800

    Make printable Node/Link output a bit more useful
    
    This tightens up the Edge representation to what is most useful,
    displays Links as 'ArboristLink', and makes the code a bit easier to
    work with instead of being one giant inline object.
    
    Edges are now printed as `{ from type name@spec [error]}` for edgesIn,
    and `{type name@spec [to] [error]}` for edgesOut, since we only care
    about the 'from' value when it's an edge in, and only care about 'to'
    when it's an edge out.  Usually, an edge will fit on one line, which is
    super handy when debugging trees with lots of dependencies.
    (Previously, I'd often console.error() them as
    `[from.location,type,spec,to && to.location,error]` for this reason.)
    
    It also separates out the pretty printing stuff into a standalone file, so
    it's not taking up as much space in the Node class definition, and a bit
    easier to maintain going forward.
    
    PR-URL: https://github.com/npm/arborist/pull/206
    Credit: @isaacs
    Close: #206
    Reviewed-by: @ruyadorno

commit b9089074eed77173c0637e792a927e62c550245c
Author: isaacs <i@izs.me>
Date:   Wed Jan 20 17:01:51 2021 -0800

    2.0.6

commit 9989f4f6391b485a637d83920f5c34676b9a47d0
Author: isaacs <i@izs.me>
Date:   Wed Jan 20 15:31:27 2021 -0800

    Preserve git+https auth when provided
    
    This makes Arborist use the git+https: url as the saved value in
    package-lock.json and package.json files for known git hosts when http
    auth is provided.  When auth is not provided, we store the canonical ssh
    url in package-lock.json, and the more human-friendly shortcut in
    package.json, in order to maintain a canonical save value that is never
    git:// for known hosts.
    
    This is the second part of the fix for npm/cli#2054.
    
    PR-URL: https://github.com/npm/arborist/pull/205
    Credit: @isaacs
    Close: #205
    Reviewed-by: @wraithgar

commit b8d1e22cc457d3389858cba242d65e627a486c21
Author: isaacs <i@izs.me>
Date:   Wed Jan 20 15:14:35 2021 -0800

    pacote@11.2.3

commit bd3b51de386face6abf0665d8de48832ced99187
Author: Michael Garvin <gar+gh@danger.computer>
Date:   Thu Jan 14 13:34:55 2021 -0800

    2.0.5

commit ff0c5e802cc1d142b129390b8373449e2e7f14e4
Author: Michael Garvin <gar+gh@danger.computer>
Date:   Thu Jan 14 13:32:14 2021 -0800

    @npmcli/move-file@1.1.0

commit f5dd8b8a596fd7af285f8337fbdee62689e48fcc
Author: isaacs <i@izs.me>
Date:   Thu Jan 14 11:53:04 2021 -0800

    2.0.4

commit 09b2ce6c2a9375ad6eb101d8edc3052d08c1d806
Author: isaacs <i@izs.me>
Date:   Thu Jan 14 10:42:14 2021 -0800

    prioritize npm-shrinkwrap.json over package-lock.json
    
    PR-URL: https://github.com/npm/arborist/pull/204
    Credit: @isaacs
    Close: #204
    Reviewed-by: @nlf

commit d6529ea0629683e0919c44cff99a174253b44ee3
Author: nlf <quitlahok@gmail.com>
Date:   Thu Jan 14 10:46:39 2021 -0800

    make sure globals are not marked as extraneous
    
    PR-URL: https://github.com/npm/arborist/pull/203
    Credit: @nlf
    Close: #203
    Reviewed-by: @isaacs

commit 564dea66a836826648e2df34931a752107580fdd
Author: isaacs <i@izs.me>
Date:   Thu Jan 14 11:40:31 2021 -0800

    pacote@11.2.1
    
    Also, add missing npm-registry-fetch dep that was unlisted

commit b339783fa26d5e0d72c46dee4b9628df2e7a6312
Author: isaacs <i@izs.me>
Date:   Wed Jan 13 16:33:42 2021 -0800

    pacote@11.2.0
    
    Cache packuments to avoid unnecessary requests for the same objects

commit 9efb50f06b20ece8752e2901fc1123e8dc836d1d
Author: isaacs <i@izs.me>
Date:   Wed Jan 13 16:32:25 2021 -0800

    @npmcli/metavuln-calculator@1.0.1
    
    This dramatically improves audit performance

commit 606509e5f276978a105fe46a6571eaf73e38ee0d
Author: nlf <quitlahok@gmail.com>
Date:   Tue Jan 12 11:52:36 2021 -0800

    traverse target children for global root links when generating diffs
    
    PR-URL: https://github.com/npm/arborist/pull/202
    Credit: @nlf
    Close: #202
    Reviewed-by: @isaacs

commit 2dfee3e54efa6628eb9d019060a607c97872ae37
Author: nlf <quitlahok@gmail.com>
Date:   Mon Jan 11 13:48:32 2021 -0800

    remove global guard on validatePath
    
    PR-URL: https://github.com/npm/arborist/pull/201
    Credit: @nlf
    Close: #201
    Reviewed-by: @isaacs

commit b1349ccfc139c5d0cf28862585cc73893e56b41a
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Nov 5 18:58:01 2020 -0500

    feat: add debugability to node and edge
    
    When using `console.log()` to print either `this.idealTree` or a `node`
    or any `Edge` it will provide a much better human-readable output.
    
    PR-URL: https://github.com/npm/arborist/pull/190
    Credit: @ruyadorno
    Close: #190
    Reviewed-by: @isaacs

commit bfd3111fb610653ed0600971c23403d260be402d
Author: Wes Todd <wtodd@netflix.com>
Date:   Fri Jan 8 11:18:52 2021 -0600

    export Edge class
    
    PR-URL: https://github.com/npm/arborist/pull/200
    Credit: @wesleytodd
    Close: #200
    Reviewed-by: @isaacs

commit 3cdebfaf73d7cc7ff8074be29477fde5ea9d183e
Author: isaacs <i@izs.me>
Date:   Thu Jan 7 12:02:22 2021 -0800

    2.0.3

commit 90f0bc654d7d4d93ad51baf550a8a8eb93c236a2
Author: isaacs <i@izs.me>
Date:   Thu Jan 7 11:54:19 2021 -0800

    pacote@11.1.14, tar@6.1.0
    
    This adds support for noChmod-style umask-less unpacking

commit 1264038a7320100db88fa76ee9bd95a8da34d9b2
Author: isaacs <i@izs.me>
Date:   Wed Jan 6 17:08:39 2021 -0800

    Stash run scripts on arb.scriptsRun
    
    This adds a new Set on the Arborist object called 'scriptsRun'.  It
    includes objects defining which scripts have been run by the
    reify/rebuild process, along with their exit status, signal, and
    standard output, so that the CLI can report on it at the end of the
    reify process.
    
    PR-URL: https://github.com/npm/arborist/pull/198
    Credit: @isaacs
    Close: #198
    Reviewed-by: @wesleytodd @ruyadorno

commit 4a5e0ca0a48a586bd3a71248278ab4768ab22624
Author: isaacs <i@izs.me>
Date:   Mon Jan 4 10:46:58 2021 -0800

    Add foregroundScripts option
    
    This enables us to switch on the old npm v6 behavior of running build
    scripts in the foreground, but without the interleaving that occurred in
    old npm versions.
    
    When this is enabled, installs will generally go slower and be noisier,
    because build scripts inherit stdio and are not run in parallel.
    However, for some debugging and logging cases, it is preferable to run
    in this mode, despite the added costs.

commit e9665c308943fdc628b8844407f1b8b99fc30b86
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Jan 5 15:53:54 2021 -0500

    fix: should create prefix path if missing
    
    Fixes: https://github.com/npm/cli/issues/2012
    
    PR-URL: https://github.com/npm/arborist/pull/199
    Credit: @ruyadorno
    Close: #199
    Reviewed-by: @isaacs

commit 5e4a57a75b41887bc2dae701b2902a8e0cd7693a
Author: isaacs <i@izs.me>
Date:   Mon Jan 4 10:31:41 2021 -0800

    update deps

commit c31ea7aa7161ca67807a3fd9ca1f5be78e5daa0c
Author: isaacs <i@izs.me>
Date:   Tue Dec 15 11:11:27 2020 -0800

    2.0.2

commit 5d51d37e26e31761b8aa833b7d3b9ef4ab0656ab
Author: isaacs <i@izs.me>
Date:   Mon Dec 14 16:05:50 2020 -0800

    Reset flags when initializing ideal from actual
    
    Fix: #193
    Fix: npm/cli#2309
    
    PR-URL: https://github.com/npm/arborist/pull/194
    Credit: @isaacs
    Close: #194
    Reviewed-by: @ruyadorno

commit 93826dfc44e5f2c135b56353a642b6068f0fdf02
Author: isaacs <i@izs.me>
Date:   Fri Dec 11 11:46:01 2020 -0800

    2.0.1

commit 8b457c2395d0c01dc93e0765e5ee451bafba57b1
Author: isaacs <i@izs.me>
Date:   Fri Dec 11 10:41:28 2020 -0800

    Do not save with ^ and no version
    
    Fix: https://github.com/npm/cli/issues/2320
    
    PR-URL: https://github.com/npm/arborist/pull/192
    Credit: @isaacs
    Close: #192
    Reviewed-by: @ruyadorno

commit efb5d3ec1bc7605719b1c55af668462c526920ab
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 15:16:13 2020 -0800

    2.0.0

commit b932896b5a5ddb4c8f43e8aed6f32dbc9f0598ed
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 15:14:20 2020 -0800

    add a changelog, since we have a second major release

commit e7dd47ceed3b3653f885539a449f64f01c48210f
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 15:07:40 2020 -0800

    Correctly create shrinkwrap when root is a symlink
    
    This ensures that the nodes in the inventory are properly walked,
    and that the resulting shrinkwrap file is relative to the _target_
    of the symlink root, rather than the symlink path.
    
    PR-URL: https://github.com/npm/arborist/pull/191
    Credit: @isaacs
    Close: #191
    Reviewed-by: @nlf @ruyadorno

commit 5c5e2ad5ce8bd48202656a3d815b896c1d5022c0
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 10:36:25 2020 -0800

    benchmark: use current branch name as default --save option

commit 26879df02d735b340baff27c73652cc0bff21623
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 10:32:59 2020 -0800

    benchmark: print the names along with sha and date

commit 322da989c09ec9355a994d9503352b61b483948d
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 10:21:21 2020 -0800

    benchmark: save with a .json extension

commit b2f3086e7659ccf5d4aa2b95cdb69c340504b559
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:41:19 2020 -0800

    audit-report: refactor for inventory count changes

commit 826cfe6987e7518ebf57f43433ebbc2f95b3c7a6
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 17:10:58 2020 -0800

    put a proper path on the calc-dep-flags test node
    
    This was breaking Windows for some reason.

commit 3fd9464e507ffbc0b8f8491632fa1ad3075d5502
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 12:22:09 2020 -0800

    depValid: use node.version getter shorthand

commit 918ebe5332cfeae9207e4d2ea90bfde3d206e8d9
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 12:22:09 2020 -0800

    depValid: use node.version getter shorthand

commit 2d93cc32cce7717bd07fa6e6ad0b41456b5d58e7
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:25:31 2020 -0800

    reify: refactor for node strictness

commit 04da701bc88a84f8d6f128619c919922ce2fbd9b
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:23:32 2020 -0800

    build-ideal-tree: refactor for node strictness

commit 39a4d8d10d896ad042483b2060ae62e183a6a79a
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:22:20 2020 -0800

    load-virtual: refactor for node strictness

commit ba32368933da32bfe66cec7e7ccce2f17f385698
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:55:59 2020 -0800

    load-actual: refactor for node strictness

commit f356dbac8509184f372b551a9d9a172b93501350
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:43:24 2020 -0800

    Refactor base classes for strict tree integrity guarantees
    
    This is a pretty major overhaul of the entire way that nodes are added
    to and removed from trees.
    
    Essentially, the root inventory is used as an authoritative reference of
    everything in the tree, and everything is updated and validated in the
    setter.  So, rather than having a `parent` setter that sets the
    `_parent` internal reference directly, the `parent` setter removes the
    node from its root inventory, changes the path, and then calls the
    `root` setter to figure out all the references.  The same with
    `fsParent`, `target` and `linksIn` references between links and nodes,
    and so on.
    
    This avoids a number of hazards that have been biting us.
    
    - Set a `x` node's parent, but don't properly connect it to nodes that have
      that parent as their `fsParent`, via
      `parent/node_modules/x/node_modules/y`.  Now, `y` will properly be
      detected as a child of `x`, and linked accordingly.
    - Adding two link nodes to the same target resulting in two reachable
      nodes in the tree with the same `realpath`.  Now, it'll see that
      there's already a node with that `realpath`, and assign the link
      targets accordingly.
    
    The list goes on and on.  This is why, for example, setting `.` as a
    workspace caused some really weird data to show up in the
    package-lock.json, and we had a snapshot where two `abbrev` links had a
    target with a name as either `aaaaaa` or `zzzzzz`, depending on which
    ended up getting added to the tree first.
    
    The plus side is: way more consistency, with a much more forgiving API
    as far as the order in which nodes get added to the tree.  The downside:
    the `root` setter is a beast of delicate complexity.
    
    Thankfully, `treeCheck(this)` is called after every call to the `root`
    setter.  In debug mode, this performs an exhaustive check of the tree
    and inventory, ensuring that every reachable node in the tree is present
    in the inventory, that every node in the inventory is reachable, that
    the entire tree has exactly one `root` node, that no nested dependencies
    have `devDependencies` trying to get loaded, that no non-root nodes have
    anything in their inventory objects, and so on.
    
    This checking is of course painfully slow, and turns any error into a
    fatal crash, _but_ we only run it in debug mode, which is something we
    can ask users to do for debugging if they run into weird "impossible"
    issues.
    
    Caveats with this refactor:
    
    - The root node is now included in the inventory
    - The `node.location` (which is the inventory key) is the node's
      relative path based on the root's _realpath_, meaning that a Link node
      root will have a location other than `''`.
    
    These two things together mean that we cannot test `node.location === ''`
    to determine root-ness, which was done in a few places previously.  The
    correct indicator is `node.isRoot`, which should always be the way to
    determine whether a node is root.
    
    This commit causes breakage in the higher level functions, which will be
    fixed in subsequent commits.

commit 6c4b4fe2552374197f1aa7aae0c74f96dea6c8b4
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:38:13 2020 -0800

    inventory: don't allow external nodes, index on node.realpath

commit c0293d1c16a8fbaff9a05ce6b497a4dd2151ac56
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 18:21:40 2020 -0800

    bring workspace reify cases into sync with static files
    
    We really need to figure out a better way to do this, changes to the
    reify case creator means we have to re-generate everything, and when we
    remove unnecessary files from git, it means that we can't generate them
    any more without a lot of extra manual labor.

commit dfd85b7b9aa664967e26b6f10014496fd9474f2c
Author: isaacs <i@izs.me>
Date:   Mon Nov 23 15:22:23 2020 -0800

    Add a function to verify a tree's internal consistency

commit 56a4ba1917eab7603fb5959d65541c8a308a95b0
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:27:13 2020 -0800

    update registry-mocks

commit eacf887fa7ba73873647e072178cd1ce697cccc5
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 12:07:35 2020 -0800

    Add benchmark script

commit 368fe7d238a5b38abd09f2aa64ef5683f2fd7aaf
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 12:07:00 2020 -0800

    ignore folders under scripts/benchmark

commit cb01ac7f70e8730a9ba67d1f3d2c256f03bac2f8
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 12:06:06 2020 -0800

    mock registry content used by benchmark scripts

commit d17445b5e311f9836c3ffc99fb1207e00c63fa2c
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:24:18 2020 -0800

    update deps

commit 057aec54914f0ecca2a0f205dac611acd1c6fb3a
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:21:25 2020 -0800

    debug: add debug.log, run by default in dev folder
    
    Also, make it possible to disable entirely by setting ARBORIST_DEBUG=0
    in the environment.

commit 068afb4f18f3eeb6b4347b6729fad6113d12247d
Author: isaacs <i@izs.me>
Date:   Tue Dec 1 14:25:21 2020 -0800

    1.0.14

commit bf04701e381bde868477ad9e21c5e495481d382b
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Nov 26 14:45:08 2020 -0500

    fix: support system root path with no pkg name
    
    Right now if your cwd is / npm exec, npm ls (or any arborist-dependent
    command) will fail with a "could not detect node name from path or
    package" error.
    
    This patches add a manual "system-root" name to allow arborist to build
    a tree from /
    
    PR-URL: https://github.com/npm/arborist/pull/189
    Credit: @ruyadorno
    Close: #189
    Reviewed-by: @isaacs

commit 40352ad2bd7a40c40bff5ac58f8456c0d204bf03
Author: isaacs <i@izs.me>
Date:   Sun Nov 29 13:48:24 2020 -0800

    Correct time output in example scripts

commit e028259d8f2fb127bdff8504c03973bbe7e59cf1
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Nov 27 10:52:31 2020 -0500

    1.0.13

commit bc05c4ff0088932922539c647c3d76f76c86ede4
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Nov 23 23:50:38 2020 -0500

    fix: allow package.json string shorthands
    
    Currently, bin and funding values from the root package.json file are
    being normalized when reifying. This changes it to avoid overriding
    bin/funding shorthands and always use the original values instead of
    their normalized results when writing to the root package.json file.
    
    Fix: https://github.com/npm/cli/issues/1964
    
    PR-URL: https://github.com/npm/arborist/pull/187
    Credit: @ruyadorno
    Close: #187
    Reviewed-by: @darcyclarke

commit 28bbd137b7761b643392662b16b50a8b8ae3e826
Author: nlf <quitlahok@gmail.com>
Date:   Fri Nov 20 10:27:16 2020 -0800

    1.0.12

commit 3fc66ebd7f4f5ab80332396c347d46d19e190b40
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 17 11:59:55 2020 -0800

    @npmcli/run-script@1.8.0
    
    PR-URL: https://github.com/npm/arborist/pull/186
    Credit: @nlf
    Close: #186
    Reviewed-by: @isaacs

commit 9b1290c1a5678e900c8650a314d4baff62b63c9b
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 17 10:52:35 2020 -0800

    normalize path before comparing

commit fa973e5af923735fea54202ea6919376e89b0b67
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 17 08:20:13 2020 -0800

    tap@14.11.0

commit 941a2ec04ab8b98574261f10d9c25893794107d9
Author: nlf <quitlahok@gmail.com>
Date:   Wed Nov 11 12:54:49 2020 -0800

    fix: stop flagging edges INVALID because of differing slashes in fetchSpec

commit 2e82a2ede2bb5db9bf7c7efccf14875b06470404
Author: nlf <quitlahok@gmail.com>
Date:   Wed Nov 11 12:31:20 2020 -0800

    fix: allow windows line endings in yarn.lock

commit ec06de9b4b58bc6f3bdf1818b57e89ea873d39bc
Author: nlf <quitlahok@gmail.com>
Date:   Wed Nov 11 08:52:22 2020 -0800

    use resolved paths in node constructor

commit 51852ec76ba48024a58d14870ff6170126e64e58
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 10 12:07:22 2020 -0800

    chore: add windows-latest to ci

commit fe4f86bf97447b236a025e613eaeb56150f79f4a
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 10 08:35:04 2020 -0800

    test: fix test inconsistencies for windows

commit 8870e9314fa95169a3f97efdfa51980cc4ea6ff8
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Nov 16 10:44:33 2020 -0500

    test: add missing reify case

commit e8676cd8de70a3a94c0b2edae4f42ce6ef833407
Author: isaacs <i@izs.me>
Date:   Fri Nov 13 11:03:56 2020 -0800

    1.0.11

commit a49d3fbae943baba7dcf5d2a43187b2b8b924df0
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Nov 12 18:07:59 2020 -0500

    fix: missing bins info in package-lock
    
    When migrating from package-lock v1 -> v2 in a project that currently
    has an actual tree + a package-lock file the reify process fails to
    properly update the package-lock with the bins info.
    
    EDIT(@isaacs):
    Added to use a somewhat questionable approach of changing the "original"
    lockfile version. The questionableness comes just from the fact that the
    (internal) field name says "original", which we use as an indicator as
    to whether or not we can trust that this lockfile we read from disk is
    actually valid or not.
    
    In this case, after being inflated, a lockfile is as trustworthy as it
    can possibly be, so there is no need to re-check and re-add package.json
    files to fill in any missing pieces.
    
    Fixes: https://github.com/npm/cli/issues/1957
    
    PR-URL: https://github.com/npm/arborist/pull/184
    Credit: @ruyadorno
    Close: #184
    Reviewed-by: @isaacs @nlf @darcyclarke

commit 9f90fefc9029931786897b00bd9bcc889545a5c2
Author: isaacs <i@izs.me>
Date:   Thu Nov 12 14:55:30 2020 -0800

    Clean up symlinks on test completion
    
    This also throws if any symlinks are found in the fixture dir after the
    test suite runs, since that causes such havoc on Windows machines.
    
    PR-URL: https://github.com/pull/183
    Credit: @isaacs
    Close: #183
    Reviewed-by: @darcyclarke

commit 925d7e1d798d71f9d909cb2720567474de667eaa
Author: isaacs <i@izs.me>
Date:   Thu Nov 12 12:06:30 2020 -0800

    Replace entire dep sets, so peer loops don't lock
    
    Discovered an interesting issue with the following dependency set:
    
    ```json
    {
      "devDependencies": {
        "webpack-dev-server": "^3.11.0",
        "@pmmmwh/react-refresh-webpack-plugin": "^0.4.3"
      }
    }
    ```
    
    `webpack-dev-server` here has a peerDependency on webpack v4.  But, the
    dependencies of `@pmmmwh/react-refresh-webpack-plugin` have peer
    dependencies on webpack at `4 || 5`.
    
    So, a resolution _should_ be possible.  Since the
    `@pmmmwh/react-refresh-webpack-plugin` package is alphabetically first,
    it loads its deps, and ends up placing webpack@5 to satisfy the dep with
    the latest and greatest.  Then when `webpack-dev-server` gets to its
    eventual peer dep on webpack, it can't replace it, because `webpack@5`
    has a dependency on `terser-webpack-plugin@^5.0.3`, which in turn has a
    peer dependency on `webpack@5.4.0`.
    
    When we check to see if webpack 5 can be replaced, we find it has a
    dependent, and reject the replacement.  But that dependent is only
    present as a dependency of the thing being replaced, so should not be
    considered.
    
    Second, while the source of the `terser-webpack-plugin` is `webpack`, it
    cannot be installed there, because it has peer deps that are also peer
    deps of webpack.  So, we _must_ place it in the root node_modules, but
    were not attempting the "source" location overrides, because the root is
    not the source.  This was a second issue resulting in `ERESOLVE` errors
    even when `--force` was applied, with this dependency set:
    
    ```json
    {
      "devDependencies": {
        "webpack-dev-server": "^3.11.0",
        "webpack": "^5.0.0"
      }
    }
    ```
    
    Fixes: #180
    Fixes: https://github.com/npm/cli/issues/2123
    
    PR-URL: https://github.com/pull/182
    Credit: @isaacs
    Close: #182
    Reviewed-by: @darcyclarke

commit 9134f02bfa9709559ceab9354a0206dad18301c2
Author: isaacs <i@izs.me>
Date:   Thu Nov 12 12:00:24 2020 -0800

    fixture updates for new webpack version causing ERESOLVE errors

commit 22d50955439d353aeb0fbf15f0fd8fe499fdc59d
Author: isaacs <i@izs.me>
Date:   Tue Nov 10 11:12:56 2020 -0800

    1.0.10

commit 706ae511d8aa2e08e280a623095949251a6c2440
Author: James Addison <jay@jp-hosting.net>
Date:   Sun Nov 8 15:57:57 2020 +0000

    prevent self-assignment of parent/fsParent
    
    PR-URL: https://github.com/npm/arborist/pull/178
    Credit: @jayaddison
    Close: #178
    Reviewed-by: @isaacs

commit dda95de0f313208fc192ee988ff73eae7232df9f
Author: isaacs <i@izs.me>
Date:   Mon Nov 9 23:36:51 2020 -0800

    Support update options in global package space
    
    This adjusts the portion of the global actualTree that gets loaded when
    doing an update, and sets up the virtual global package manifest to
    depend on '*' for all the packages being updated at the top global
    level.
    
    Fixes: https://github.com/npm/cli/issues/1962
    
    PR-URL: https://github.com/npm/arborist/pull/179
    Credit: @isaacs
    Close: #179
    Reviewed-by: @ruyadorno

commit 56e3443d48ce5f0bb76d59c3b6eb7dc24dcbd8a2
Author: isaacs <i@izs.me>
Date:   Mon Nov 9 22:11:52 2020 -0800

    clarify comment in reify.js
    
    Make a note of the race condition that would exist if loadActual and
    buildIdealTree happened simultaneously in the global space.

commit 6eae14b451e903fcaaac363cd83f70055a0f9f26
Author: isaacs <i@izs.me>
Date:   Mon Nov 9 16:21:43 2020 -0800

    Set fsParent properly when .. paths are involved
    
    This MAY be related to/fix https://github.com/npm/arborist/issues/171

commit 12a140b0e36c1a5ca5e8e9b6319fb539bf026628
Author: isaacs <i@izs.me>
Date:   Fri Nov 6 10:46:13 2020 -0800

    1.0.9

commit a3ee4785f3b4bde4c1548907790f8c99799e5c0d
Author: nlf <quitlahok@gmail.com>
Date:   Thu Nov 5 08:07:45 2020 -0800

    use @npmcli/move-file instead of fs.rename
    
    PR-URL: https://github.com/npm/arborist/pull/176
    Credit: @nlf
    Close: #176
    Reviewed-by: @isaacs

commit ab5e7e5ed8bc511722ddd4b5530d427bf47dc45a
Author: nlf <quitlahok@gmail.com>
Date:   Thu Nov 5 07:53:47 2020 -0800

    use junctions instead of symlinks
    
    PR-URL: https://github.com/npm/arborist/pull/175
    Credit: @nlf
    Close: #175
    Reviewed-by: @isaacs

commit 02f198df7c545d166dc75114f46222e7d37c9403
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Oct 26 14:01:45 2020 -0400

    fix: process deps for all link nodes
    
    Arborist wasn't checking for any package.json dep changes within its
    Link nodes thus preventing users from adding new deps on workspaces.
    
    This changeset fixes it and adds a reify test repro.
    
    Fixes: https://github.com/npm/cli/issues/1984
    
    PR-URL: https://github.com/npm/arborist/pull/170
    Credit: @ruyadorno
    Close: #170
    Reviewed-by: @isaacs

commit db421d9ccd576193d4bdca476e06897aa8f45351
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 13:34:36 2020 -0800

    1.0.8

commit eceb5d98ac9615d97eec8e56c6c3fc0b68e3de0a
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 13:32:28 2020 -0800

    Guard against setting Node.package to something improper
    
    This can happen when loading from broken lockfiles, as I found while
    updating things and git rebasing in the npm/cli repo, causing `npm ls`
    to fail in annoying ways.

commit ef2737e7d5d0f8e8a35a72bc18cc6f4de14bdfe9
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 11:56:02 2020 -0800

    1.0.7

commit 05189ee64d26afc060277d28db206be86ad9fcff
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 11:15:21 2020 -0800

    Fix 3 related peerDep ideal tree edge cases
    
    1. we should _never_ place a dep in a target where the target
    has a peerDep on that dependency, even if it would be allowed or
    conflicts with a higher level.  However, we _should_ continue walking up
    the tree in this case, so the solution is to detect this in the walk-up,
    and continue to the next spot if there's a peer edge present.
    
    2. It's possible for the virtual root to not contain a peer node, if the
    edge is a peerOptional edge.  In that case, we may still need to detect
    and add the node, if the current dep version present is outside the
    dependency range.  (We do not install peerOptionals by default, but we
    DO ensure that they're valid if present, and install when necessary to
    avoid loading an invalid version, if possible.)
    
    3. In light of 1 and 2 above, it's important to _always_ attempt to
    dedupe peer deps, even if that means downgrading the version in use, or
    we find ourselves in many more ERESOLVE cases than we need to be.
    Solution here is to effectively always place peerDeps in preferDedupe
    mode, regardless of the option that is passed in to Arborist.
    
    PR-URL: https://github.com/npm/arborist/pull/174
    Credit: @isaacs
    Close: #174
    Reviewed-by: @ruyadorno

commit c2e4b09bdda10e1a90f81f6e1fd2227b719d85e9
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 11:06:38 2020 -0800

    mocks for testing more peerDep issues

commit 1cc72517105710bfe570a348af9d01489a1b254a
Author: isaacs <i@izs.me>
Date:   Mon Nov 2 12:31:59 2020 -0800

    lint build-ideal-tree test
    
    Also, add fixtures for the test that was being skipped

commit 2381aeb8eec8f68f0a53a959d76ddbc41a88f795
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 30 13:11:36 2020 -0400

    1.0.6

commit 053679c2afedfca5d002a11d4f559be8cb3caf08
Author: nlf <quitlahok@gmail.com>
Date:   Thu Oct 29 11:09:27 2020 -0700

    flag missing bins as a CHANGE
    
    PR-URL: https://github.com/npm/arborist/pull/173
    Credit: @nlf
    Close: #173
    Reviewed-by: @ruyadorno

commit ac5c4df8b511a0f47490ea14ac50f25d146586e9
Author: isaacs <i@izs.me>
Date:   Tue Oct 27 11:36:00 2020 -0700

    1.0.5

commit 6a02c1e2097dd4ca56323bbdaf163dcac59a92f4
Author: isaacs <i@izs.me>
Date:   Mon Oct 26 11:22:04 2020 -0700

    Forgot to add the debug method, whoops

commit 87a9fa922d6129e3be7f1ab3441eea2bb5d65466
Author: isaacs <i@izs.me>
Date:   Fri Oct 23 15:51:31 2020 -0700

    Do not set fsParent to a link node
    
    This was a weird side effect caused by the last bug, treating '..' as a
    local node in the root's tree.  While that was fixed, it highlighted the
    need for a better debug check on that sort of thing.
    
    This adds a 'debug()' method, which takes a function.  The function is
    ignored in normal operations, so it's perfectly fine to put expensive
    and/or hazardously aggressive assertion crashes in there.  In tests,
    methods passed to debug are always run, so we'll avoid creating new
    scenarios where it could have been caught.

commit 8da1864af2e405e7f21cb82d7868f432c1a35b88
Author: isaacs <i@izs.me>
Date:   Fri Oct 23 11:29:24 2020 -0700

    lint: force blocks to next line

commit 7632ff3bf7e2ce1d13ce61fc5d4acb4a060af331
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 23 13:47:41 2020 -0400

    1.0.4

commit 8aa6a2244c38cf985ec4082f67c16b37ba0af67a
Author: isaacs <i@izs.me>
Date:   Fri Oct 23 10:03:30 2020 -0700

    Do not set wrong fsParent when there is a link to ..
    
    We were testing for the presence of ../ on relative links to see if
    a node target is outside the root, but '..' is also outside the root.
    
    PR-URL: https://github.com/npm/arborist/pull/167
    Credit: @isaacs
    Close: #167
    Reviewed-by: @ruyadorno

commit daa5cf0f85f9c9ea58e270c6a18c232d65513244
Author: isaacs <i@izs.me>
Date:   Wed Oct 21 15:08:55 2020 -0700

    Install peerOptionals if explicitly requested, or dev
    
    Fix npm/cli#2005
    
    PR-URL: https://github.com/npm/arborist/pull/166
    Credit: @isaacs
    Close: #166
    Reviewed-by: @ruyadorno

commit 1d6b0577b2adab7d7a52e62c8576cd9a915eb837
Author: isaacs <i@izs.me>
Date:   Wed Oct 21 14:03:43 2020 -0700

    Do not conflict on meta-peers that will not be replaced
    
    When in a situation where a project has dependencies on several members
    of a peer set, it was encountering a spurious ERESOLVE error if the
    entire set was being replaced, but _one_ of the members did not need to
    be.
    
    For example:
    
    ```
    root -> (a@1, b@1, c@1)
    a@1 -> PEER(b@1, c@1)
    a@2 -> PEER(b@2, c@1)
    b@1 -> PEER(c@1)
    b@2 -> PEER(c@1)
    ```
    
    resulting in the tree:
    
    ```
    root
    +-- a@1
    +-- b@1
    +-- c@1
    ```
    
    If we try to upgrade both `a` and `b` to version 2, however, we would
    check the set of peers for each dependency node being replaced, and find
    that there was a `c` node with a non-peer dependency from the root node,
    and treat it as a conflict, even though there was no need for `c` to be
    modified at all!
    
    Resolve this by skipping the check when not doing `canPlacePeers` (since
    it's either already a conflict, or already set to be overridden by the
    version from the virtualRoot), and ignoring the conflict when a
    non-overridden node exists in the virtualRoot which meets the non-peer
    edge keeping the current dependency node in place.  In those cases,
    either we will replace or keep the current node anyway, so there's no
    need to conflict on it.
    
    Fix: npm/cli#2000
    
    PR-URL: https://github.com/npm/arborist/pull/165
    Credit: @isaacs
    Close: #165
    Reviewed-by: @ruyadorno

commit 89f238871d3cc73c570682d3bae1e4db867b5474
Author: isaacs <i@izs.me>
Date:   Wed Oct 21 13:58:00 2020 -0700

    do not elide edges in explain() output when a root edge exists

commit b2c445f0354f4be2147b76456e61a2ac79b23f8a
Author: isaacs <i@izs.me>
Date:   Tue Oct 20 13:21:46 2020 -0700

    Ensure that root is added when root.meta is set
    
    This was causing the root metadata (name, version, and the package['']
    member) to be missing when we replace the metadata object on the root
    node during the buildIdealTree step (which we do for 'npm update' with
    no package name args).
    
    Implicitly add the node to the metadata whenever node.meta is set.  This
    required a bit of shuffling around and the removal of some cases where
    we _were_ explicitly adding the root node, since it is now no longer a
    thing that can be forgotten.
    
    Fix: npm/cli#1997
    
    PR-URL: https://github.com/npm/arborist/pull/163
    Credit: @isaacs
    Close: #163
    Reviewed-by: @ruyadorno

commit c96e5e915e3e99ef7040992de9eb8fe9f582ab8e
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 16 15:21:50 2020 -0400

    1.0.3

commit fc1f8ea1bc4b467944a14b76fc1c8e93feafdd82
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Oct 15 17:35:12 2020 -0400

    fix: workspaces prepare lifecycle scripts
    
    When installing workspaces arborist will now run the `prepare` scripts
    as part of lifecycle scripts. It also tweaks a bit the build process to
    account for placing bin-links AFTER running lifecycle scripts for a
    workspace.
    
    Fixes: https://github.com/npm/cli/issues/1965
    
    PR-URL: https://github.com/npm/arborist/pull/159
    Credit: @ruyadorno
    Close: #159
    Reviewed-by: @isaacs

commit 6ed30898988cfbb2e7d3bcad760a2c098b61ddbd
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 22:23:15 2020 -0700

    update mock registry data
    
    Basically just delete the content folder and then run test-proxy.
    
    PR-URL: https://github.com/npm/arborist/pull/161
    Credit: @isaacs
    Close: #161
    Reviewed-by: @ruyadorno

commit ce7d7a0c2f3ef5bb7d93970a7a961d3bd09dbcad
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 22:07:09 2020 -0700

    Do not over-check peer deps during buildIdealTree
    
    This caused yargs to fail to install, even when --force was applied!
    
    While building the ideal tree, and checking to see if a node can be
    placed at a given location, we also check to ensure that all of that
    node's peer dependencies can be placed there.  And, since they can have
    peer deps, and those deps can have peer deps, and they may need to be
    overridden based on the source dependency's declared intent, we create a
    sort of "holding area" in a virtual root.
    
    Previously, in order to check if a peerSet could be placed at a given
    location, we just checked all the nodes in this virtual root, and then
    moved them into place.  This was a problem, because of the issue
    addressed in 94516f3, with cases like those described in
    test/fixtures/testing-peer-dep-nesting/README.md in this repository.
    
    In order to address this, the "check all the peers in the set and move
    them over" was replaced with a "check all the peers in the set and COPY
    them over".  Additionally, since we do still need to be able to dedupe
    PART of this peer family up in the tree when possible, the "check all
    virtualroot's children" was replaced with an approach where we keep a
    list of previously visited members of the peer set, to prevent cycles.
    
    Since there can be multiple peer dependencies on a given dep in the
    peer set, some more restrictive than others, so all edges need to be
    checked.  (Previously, it would not check meta-peers of the initial node
    being placed, so these additional constraints weren't being honored.)
    
    However, since we're re-checking peers of peers within the set, there's
    no need to *also* scan through all of the children of the virtualRoot!
    Doing so led to an explosion of peer dependency checking, an absolute
    cacophony of excessive and damaging pedantic strictness!  As a result,
    poor yargs could not install its peer dependencies, even though a
    resolution was quite possible without even resorting to force or
    non-strict overrides.
    
    Rather than spend several days replicating the precise issue that
    caused yargs' dependency graph to trigger a spurious ERESOLVE error,
    yargs is added as a test case.  Hence, there are quite a few new
    additions to the registry mocks packument data, and many snapshots
    changed to reflect the new versions available.  The next commit will
    remove all registry mocks which are no longer in use.

commit c9413055374893cd73abab47dfb668aa5ec331c1
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 15:43:39 2020 -0700

    1.0.2

commit 94516f30235077ca246298af76a7343b04e7e255
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 15:10:58 2020 -0700

    fix cycles/ordering when peer deps require nesting
    
    Previously, there were cases where a peer dependency group might cycle
    back in on itself, in such a way that we added a node and its peers
    _prior_ to another member of the peer set that also peer-depended upon
    the peer dependency.  Since the nodes were being moved rather than
    copied, this meant that the conflicting peer was not around to be
    checked, and so we would trigger peer conflict ERESOLVES when we tried
    to resolve the dependencies of the second peer dependent at a higher
    level.
    
    By copying out of the virtual root peerSet, rather than moving, and
    tracking which edges have already been overridden, we can avoid a lot of
    other checks later on in the process, while ensuring that the
    appropriate set of peer dependencies are being loaded at the optimal
    level each time.
    
    PR-URL: https://github.com/npm/arborist/pull/160
    Credit: @isaacs
    Close: #160
    Reviewed-by: @darcyclarke

commit ac51ae879b9087dc47d598da896f5fe59b17df17
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Oct 14 18:31:38 2020 -0400

    test: add tests for scoped registry fix
    
    PR-URL: https://github.com/npm/arborist/pull/158
    Credit: @nlf
    Close: #158
    Reviewed-by: @isaacs

commit 25beca5df92f8ea37baa18453b763bb75268a134
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Oct 14 18:26:16 2020 -0400

    fix: replace pacote.extract scope for resolved
    
    Instead of manually setting a scope property that gets forwarded to
    pacote.extract, uses a spec that sets the resolved value so that pacote
    uses that instead.
    
    Addresses code review from #158

commit 6f5939aa7e163b4aa77ed7500c4f418559fa7491
Author: nlf <quitlahok@gmail.com>
Date:   Wed Oct 14 09:03:03 2020 -0700

    fix: pass the scope of the package to pacote
    
    this allows npm-registry-fetch to correctly identify
    the registry associated with the request, which resolves
    the issues with incorrect auth being sent

commit d78e134bc9bba48d6aa3dfbe53574e910923c7da
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 22:50:10 2020 -0700

    1.0.1

commit bedb60d85be8dfa5cf9871c9a69a9e51a6719952
Author: Darcy Clarke <darcy@darcyclarke.me>
Date:   Tue Oct 13 01:13:32 2020 -0400

    fix: readme image
    
    Switching default branches from `master` to `main` changed the image ref.
    
    PR-URL: https://github.com/npm/arborist/pull/157
    Credit: @darcyclarke
    Close: #157
    Reviewed-by: @isaacs

commit 13d76e34158c96b039706fdf6df25b4b815042d1
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 17:46:46 2020 -0700

    1.0.0

commit 2e2e1b1dbb3548e85163cdf6fbd694e3e8a65364
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 15:10:11 2020 -0700

    Update peerDep conflict resolution logic
    
    This change makes it so that:
    
    - peerDeps will *always* install when --force is set
    - peerDep conflicts will crash when --strict-peer-deps is set
    - Otherwise, peerDep conflicts will be overridden force-style whenever
      the *cause* of the conflicting peer deps is not the current root
      project or a workspace.
    
    To accomplish this, the "source" of the peerSet is tracked, and the
    ERESOLVE explanation code is changed, because some sorts of conflicts
    can be detected in the peerSet creation phase, before a Node is
    instantiated.
    
    PR-URL: https://github.com/npm/arborist/pull/156
    Credit: @isaacs
    Close: #156
    Reviewed-by: @nlf

commit d774bc3d3a6dbf35c5480f6abcc11bb555e8ab10
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 15:04:43 2020 -0700

    move resetDepFlags into a module

commit c48feff8cb0a320ce0da8f1a84a751e0b4cd4c42
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 14:09:48 2020 -0700

    Add Node.isWorkspace flag, refactor explanation code
    
    This lets us explain an edge directly, since a subsequent commit will be
    explaining peer conflicts starting from an edge in some cases, rather
    than starting from a conflicted node, if the conflict occurs while
    building the peerSet.

commit e76b9f4bf603064561e0c7ca2d7bf948e9bc8e37
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 13:53:06 2020 -0700

    lint: allow labels on loops and breaks

commit ff3fe8e3375528c65da5a51d92435acfa65d441d
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 13:52:53 2020 -0700

    reg mocks: do not cache errors when proxying

commit 0071a21eadf099fd0ae96aa0a78f8f0fbead2869
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 13:51:39 2020 -0700

    mock packuments for more peerDep conflict cases

commit 45144a7d3bd52d2990dc7e847da323a7b3411cd8
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 12:49:58 2020 -0700

    Add packument test fixtures used by ancient lockfile inflation test

commit f54e99c8ad32abd0af3b8fa99e5fd44ce8d9c326
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 9 13:39:01 2020 -0400

    0.0.33

commit d72c667473933851f8d4395647bf2cd8319d4389
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Oct 7 16:13:56 2020 -0400

    fix: do not rewrite malformed package.json
    
    Reify was rewiriting contents of a malformed package.json. This
    changeset fixes the problem by making sure build-ideal-tree properly
    throws when finding EJSONPARSE errors from the root package.json
    
    Fixes: https://github.com/npm/cli/issues/1883
    
    PR-URL: https://github.com/npm/arborist/pull/154
    Credit: @ruyadorno
    Close: #154
    Reviewed-by: @isaacs

commit 99adcf58109be6c48fb4b3ff8f77f968af141d07
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Oct 6 14:41:07 2020 -0400

    0.0.32

commit 2abd9eaafb79ed11d7ccafff501f127b69bcd5bf
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Oct 5 15:33:14 2020 -0400

    fix: workspaces cleaning up nm folders
    
    When installing from a tree that has actual/virtual trees arborist was
    missing info on workspaces during build-ideal-tree leading to a reify
    diff that missed all workspaces and causing all workspaces and their
    dependencies to be removed from the node_modules folder.
    
    This fixes it by making sure we append workspaces info first thing upon
    reading root node in build-ideal-tree
    
    Fixes: https://github.com/npm/cli/issues/1784
    
    PR-URL: https://github.com/npm/arborist/pull/153
    Credit: @ruyadorno
    Close: #153
    Reviewed-by: @isaacs

commit 36449b1fa70ad834d0ed215d175c81b0741b7a08
Author: isaacs <i@izs.me>
Date:   Fri Oct 2 11:18:14 2020 -0700

    0.0.31

commit 967a99ddde969b03598792de0471e04935e46098
Author: isaacs <i@izs.me>
Date:   Fri Oct 2 11:05:01 2020 -0700

    Update bundle dep if bundled by root project only
    
    PR-URL: https://github.com/npm/arborist/pull/152
    Credit: @isaacs
    Close: #152
    Reviewed-by: @nlf

commit 3f305279add359857fd8bd260d9cddc2c5e36d7b
Author: isaacs <i@izs.me>
Date:   Thu Oct 1 10:53:00 2020 -0700

    Respect gypfile:false flag in package.json
    
    This does a couple of things:
    
    1. Explicitly add a flag in _addToBuildSet to indicate that we've
       already checked this node.  This _should_ be unnecessary, but it's
       possible that we have no script and still need to check for a gypfile
       when we have old metadata, so this addresses the edge case there, and
       makes the logic a little clearer.
    2. Use the defaultGypInstallScript from the @npmcli/node-gyp package,
       rather than a hard-coded string.
    3. Handle cases where there are bins and also a default node-gyp script.
    
    PR-URL: https://github.com/npm/arborist/pull/151
    Credit: @isaacs
    Close: #151
    Reviewed-by: @nlf

commit b2df550b5957226b3b23312e82bc984d3b9b637d
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:57:38 2020 -0700

    0.0.30

commit 66d47db67d5599a6ed1df03b90f481ec3e67faff
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:56:17 2020 -0700

    update all deps

commit 0a7514a84d5090b65164c6fa26d07fb4b5333208
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:54:55 2020 -0700

    @npmcli/run-script@1.7.0

commit fbdd920a0a6aac5ed9b52840ed8caa0b35e17e9f
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:51:49 2020 -0700

    0.0.29

commit 14969102f1b7b435c82f45c1e167ca74f0a2e77e
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Wed Sep 30 14:42:57 2020 -0700

    Default to building node-gyp dependencies
    
    PR-URL: https://github.com/npm/arborist/pull/150
    Credit: @bonkydog
    Close: #150
    Reviewed-by: @isaacs
    
    EDIT(@isaacs): replaced large fixture with mock, addressed edge case in
    rebuild logic.

commit dbc6b9228888ab7689ef2037861206de7bbf801a
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 10:44:17 2020 -0700

    Do not install or build if there is a global top bin conflict
    
    Fix: https://github.com/github/npm-cli/issues/14
    
    PR-URL: https://github.com/npm/arborist/pull/148
    Credit: @isaacs
    Close: #148
    Reviewed-by: @nlf, @darcyclarke

commit 60a796bc691262d0556ccdddb6f7fabbf17d3aae
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 10:07:14 2020 -0700

    add bin-links@2.2.1
    
    The better to check bins early with

commit 32cff51ccb7ce4779869e5dae63733ed3df42c8c
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 11:27:08 2020 -0700

    Do not drop peer/dev dep while saving if both set
    
    Fix: https://github.com/npm/cli/issues/1849
    
    PR-URL: https://github.com/npm/arborist/pull/149
    Credit: @isaacs
    Close: #149
    Reviewed-by: @nlf, @darcyclarke, @ljharb

commit 731226cba42e9d4cbf5dcf9abfc55d70ae9136ee
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 12:25:40 2020 -0700

    ci: push to coveralls on ubuntu, not macos
    
    The macOS build takes a lot longer, so let's not add an HTTP request on
    top of it.

commit a8f54542e60bef553d1042a3469fb5ab8fd8ea1c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Sep 30 11:48:28 2020 -0400

    @npmcli/map-workspaces@1.0.1
    
    Do not throw when reading workspaces that may have been defined in
    multiple patterns in package.json workspaces config.

commit 42ac0e4b89925f49d3f097ac04f1618ed3c61d2e
Author: isaacs <i@izs.me>
Date:   Tue Sep 29 10:24:50 2020 -0700

    0.0.28

commit bc6317fcd1b99e37deb7566e2fc51de63524584b
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 29 00:12:18 2020 -0400

    fix: workspaces install entering an infinite loop
    
    Turns out that having workspaces (or any linked packages) at the same
    level depending on conflicting versions of a peer dep was not yet
    handled by arborist. This specific combination was setting up the
    install into an infinite loop, unable to properly resolve
    build-ideal-tree._canPlaceDep.
    
    This changeset adds tests for this specific scenario and also provides a
    fix by properly resolving _canPlaceDep to a CONFLICT state if
    trying to resolve conflicting versions of a peerDep within a link node,
    resulting in throwing a proper ERESOLVE error in these cases.
    
    Fixes: https://github.com/npm/cli/issues/1843
    
    PR-URL: https://github.com/npm/arborist/pull/146
    Credit: @ruyadorno
    Close: #146
    Reviewed-by: @isaacs

commit 4b8f6207c6364ef625681ffde11004aab9cdcb2b
Author: isaacs <i@izs.me>
Date:   Mon Sep 28 14:10:37 2020 -0700

    Save provided range if not a subset of savePrefix
    
    If a user installs `foo@1.x <1.2.3`, and we resolve to `1.2.2`, then we
    should not save it as `^1.2.2`, since that would allow versions outside
    of the requested range.
    
    Explicit versions and tags are still saved using the savePrefix, since
    those are not ranges, and users can set `--save-exact` if they wish it
    to be saved exactly.
    
    Fix: https://github.com/npm/arborist/issues/127
    Fix: https://github.com/npm/cli/pull/193
    Fix: https://npm.community/t/7005
    
    PR-URL: https://github.com/npm/arborist/pull/145
    Credit: @isaacs
    Close: #145
    Reviewed-by: @isaacs

commit b1d5e36752984aa78398aab16517810ad3b01fee
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 24 17:46:20 2020 -0400

    chore: remove some unused lines on tests
    
    PR-URL: https://github.com/npm/arborist/pull/142
    Credit: @ruyadorno
    Close: #142
    Reviewed-by: @isaacs

commit c9f5323dbee328770b8d623b12d2629afa56e642
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 24 17:33:39 2020 -0400

    fix: package-lock.json custom indentation
    
    package-lock.json files should follow the same indentation used on
    package.json files.
    
    This commit fixes the issue by forwarding the proper indent selected for
    package.json to Shrinkwarp.save method. Also, added tests asserting
    appropriate tab-indentation for both files.
    
    Fixes: https://github.com/npm/cli/issues/1662
    
    PR-URL: https://github.com/npm/arborist/pull/141
    Credit: @ruyadorno
    Close: #141
    Reviewed-by: @isaacs

commit d38e967680693ab4752021596cd99c0642b8116a
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 24 12:35:16 2020 -0400

    chore: pruner should use _idealTreePrune
    
    PR-URL: https://github.com/npm/arborist/pull/140
    Credit: @ruyadorno
    Close: #140
    Reviewed-by: @isaacs

commit 410bc2ae17ae04f943aee6c22c312b6bb1af2d10
Author: isaacs <i@izs.me>
Date:   Fri Sep 25 13:55:00 2020 -0700

    use a linter
    
    We have more people contributing to this library now, so adding some
    automated consistency is looking more and more important.
    
    Also, this found a few unused variables, which highlighted a bug, albeit
    a harmless one: a timer string was being created, but then no timer
    being attached to Shrinkwrap loading.  (That's why the reify snapshot is
    updated.)  Some other light refactoring was done in a few places to get
    eslint to produce a reasonably readable output, and I think mostly for
    the improvement of readability.
    
    I don't 100% agree with every choice the linter is making here.
    Specifically, I prefer using {} around single-line blocks in some cases,
    especially loops, but they are omitted most of the time, so that's the
    way I set the config.  Consistency is good though, and this will help us
    maintain it.
    
    Linting is set up as a posttest operation, so we can catch things
    without having it stubbornly refuse to even run tests until it's all
    sparkling.
    
    PR-URL: https://github.com/npm/arborist/pull/144
    Credit: @isaacs
    Close: #144
    Reviewed-by: @ljharb

commit da93ff1493004ddc9b51e87f9d52b53723754f67
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Fri Sep 25 10:30:11 2020 -0700

    Don't check engine or platform of optional dependencies
    
    PR-URL: https://github.com/npm/arborist/pull/143
    Credit: @bonkydog
    Close: #143
    Reviewed-by: @isaacs

commit 424cc70ae834c4b41edbee9aebca48ba4f57e94b
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Thu Sep 24 15:37:05 2020 -0700

    Add test packages to registry mocks

commit 89581967a4c2abbbd9c570c53d7187303fdf14cb
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Thu Sep 24 14:44:48 2020 -0700

    Check engine and platform when building ideal tree

commit 3e86ff5f44de62e42fcec14f3f6b6379d6602ee5
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 22 12:15:46 2020 -0400

    0.0.27

commit 8e1291e69322a8e90d13949e9994f6f0b739bd34
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 22 12:09:34 2020 -0400

    fix: custom registry pacote manifest
    
    PR-URL: https://github.com/npm/arborist/pull/139
    Credit: @ruyadorno
    Close: #139
    Reviewed-by: @darcyclarke

commit e13ba3bb66a7f7619c3baaa03cc7bccb5201e1ce
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Fri Sep 18 15:20:22 2020 -0700

    Don't automatically install optional peer dependencies
    
    Fix: https://github.com/npm/rfcs/pull/224
    
    PR-URL: https://github.com/npm/arborist/pull/138
    Credit: @bonkydog
    Close: #138
    Reviewed-by: @isaacs

commit 383ccfcf8f5a9afc6cb13d41bf59d48e7b17d7b9
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Fri Sep 18 21:44:31 2020 +0000

    Clarify problemEdges logic

commit c427fa96ba4535f09cf625db31216c86dafe459c
Author: isaacs <i@izs.me>
Date:   Thu Sep 17 15:17:46 2020 -0700

    0.0.26

commit fe0a5f6945366a62fdbe334a8b2c235b8c622fde
Author: isaacs <i@izs.me>
Date:   Thu Sep 17 11:18:48 2020 -0700

    Add strictPeerDeps, override ERESOLVE if not true
    
    In the overwhelming majority of cases in the wild, a peer dependency
    conflict that results in an ERESOLVE can be fixed by using the
    `--force` flag.
    
    However, this has other side effects (causing `npm audit fix` to install
    semver-major fixes, blowing away file collisions, etc.) which might not
    be desirable.  Also, since it's opt-in, it means that users have to run
    the install twice for something where we're _pretty_ sure what the right
    course of action is.
    
    Let's just make that particular override the default, and reduce most
    ERESOLVE errors from a crash to a warning.
    
    PR-URL: https://github.com/npm/arborist/pull/136
    Credit: @isaacs
    Close: #136
    Reviewed-by: @ruyadorno

commit 0a35a362143d7480c5421f3323bbfa4304044f8f
Author: isaacs <i@izs.me>
Date:   Thu Sep 17 11:18:27 2020 -0700

    Do not stack overflow on vuln.via cycles

commit 3f14dac69eab0051ccc6b211bef457cd418018e4
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 16:53:18 2020 -0700

    sort bin link queue for greater determinism
    
    Fix: #130

commit 65732a7c0bbe69bf6f10038c2dbd3bc214b5207c
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 16:49:14 2020 -0700

    bin-links@2.1.4
    
    Avoid trying to clobber bins currently in the process of linking

commit 0edf2ed0bf7b210d249ed09e6bc8f5bf265c8393
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 15:08:30 2020 -0700

    Log cleanup and engine mismatches more usefully
    
    Via: https://github.com/targos/npm7-cra#issue-2-npm-ci-prints-an-error-without-context

commit 789f9bc8259dbe95486b0a8da2d8c23216276bff
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 14:52:45 2020 -0700

    Do not try to re-resolve failed nodes forever
    
    Via: https://github.com/targos/npm7-cra#issue-4-npm-i-react17-never-ends

commit ace4988d8abd1d8d82bd18964a8357ffea897bed
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Sep 16 10:40:12 2020 -0400

    0.0.25

commit 8dc47ac5a4aa784cc9d594885fe80e7f327301f8
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 18:23:02 2020 -0700

    Use @npmcli/metavuln-calculator for faster audits
    
    This makes the AuditReport calculation around 40% faster in the cold
    cache state, and anywhere from 90% to 99% faster with a warm cache.
    
    It also sets the stage for the capability of doing audits without
    hitting the registry, and potentially avoiding known-vulnerable package
    versions if they've been previously marked and cached as vulnerable.
    (This additional functionality is not implemented in this change, but
    it's something we can do in the future.)
    
    One impact is that the `Vuln` class now has an `advisories` set, as well
    as a `via` set.  `vuln.advisories` is a set of advisories created by the
    metavuln-calculator, which can represent either actual advisories or
    metavulns.  The `via` set is a list of Vuln objects _only_, so that we
    can track fixes and report on them comprehensively.
    
    Fix: https://github.com/npm/arborist/issues/109
    
    PR-URL: https://github.com/npm/arborist/pull/133
    Credit: @isaacs
    Close: #133
    Reviewed-by: @ruyadorno

commit 47b28cc9b72a670a708239a64088fdb52c65f002
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 17:51:44 2020 -0700

    scripts: note dangling/duplicated timers

commit 9c8899b64ac36a6dbec5e9d25a1a2c6b0248541c
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 17:51:10 2020 -0700

    add @npmcli/metavuln-calculator dependency

commit 013dac4e1ecbea717d91c99421c9de192ca399ea
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 17:48:52 2020 -0700

    0.0.24

commit ba2b5dcc7b463e028f429d515e9e761c2b5a1b29
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 15 18:28:16 2020 -0400

    fix: always parse spec from cwd
    
    Always parse specs from added deps using the cwd as reference. Also
    refactored lib/add-rm-pkg-deps.js to only used rawSpec now that
    build-ideal-tree does the heavy lifting of parsing relative paths.
    
    PR-URL: https://github.com/npm/arborist/pull/132
    Credit: @ruyadorno
    Close: #132
    Reviewed-by: @isaacs

commit 1645ab80b3aeea7eee983b00ea986336578d8b13
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Sep 14 18:12:15 2020 -0400

    fix: package.json deps order
    
    Dependencies should appear in alphabetical order in package.json
    
    Fix: https://github.com/npm/cli/issues/1766
    
    PR-URL: https://github.com/npm/arborist/pull/131
    Credit: @ruyadorno
    Close: #131
    Reviewed-by: @isaacs

commit 1374d55184e7b7a13de95b5236e92066ef5d9dfe
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 11 22:54:05 2020 -0400

    fix: follow symlinks on build-ideal-tree add
    
    Symlinks were being tracked as invalid when loading actual trees since
    their realpath wouldn't match, given that build-ideal-tree was just
    preserving the fetchSpec read from npm-package-arg when adding new
    packages to the ideal tree.
    
    This change fixes it by properly parsing and following symlinks
    realpaths at the moment they're added to the ideal tree.
    
    PR-URL: https://github.com/npm/arborist/pull/129
    Credit: @ruyadorno
    Close: #129
    Reviewed-by: @darcyclarke

commit db13425907e40a19c723f4365a0e2c3bfa669090
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 10 17:38:47 2020 -0400

    0.0.23

commit ef36c36b85811f1268e3d8d696d3b17f64c4af75
Author: isaacs <i@izs.me>
Date:   Tue Sep 8 11:51:54 2020 -0700

    Log script executions and exits
    
    There have been a few reports from users who were concerned and
    perplexed that their install scripts didn't seem to be run, looking at
    the logs npm produces.  In fact, the install scripts WERE running, just
    running quietly and successfully.
    
    This logs the commands Arborist runs explicitly, along with exit code
    and signal, so that it's more clear what ran when we look at the logs.
    
    Close: #112
    
    PR-URL: https://github.com/npm/arborist/pull/123
    Credit: @isaacs
    Close: #123
    Reviewed-by: @ruyadorno

commit 887728f81c3000b74350154e5da014a8e64796db
Author: isaacs <i@izs.me>
Date:   Thu Sep 10 13:49:56 2020 -0700

    0.0.22

commit 354f6800b6473fbd055920d97c2093148b4b09b9
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 10 16:01:01 2020 -0400

    fix: path resolution for global linking filepaths
    
    related to: https://github.com/npm/cli/pull/1786
    
    Co-authored-by: isaacs <i@izs.me>
    
    PR-URL: https://github.com/npm/arborist/pull/125
    Credit: @ruyadorno
    Close: #125
    Reviewed-by: @isaacs

commit 5492920be647d8933187fc666a656efdf6684a1e
Author: isaacs <i@izs.me>
Date:   Tue Sep 8 11:24:46 2020 -0700

    rebuild: finish dangling timer event

commit 58547d63697d47fc74e3424ac747e9fcf4f92ea7
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 4 14:31:21 2020 -0400

    0.0.21

commit b1e26631e6b4fd9364c920eb6aa7774a14c3c32c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 4 10:21:56 2020 -0400

    fix: install workspaces on update.all=true
    
    build-ideal-tree is missing info on workspaces when update.all=true
    since the mapping of workspaces got moved to load-actual.
    
    This commit fixes it by reinstating the mapWorkspaces logic to
    build-ideal-tree.
    
    fix: https://github.com/npm/cli/issues/1763
    
    PR-URL: https://github.com/npm/arborist/pull/120
    Credit: @ruyadorno
    Close: #120
    Reviewed-by: @isaacs

commit 85ae25549cf960ab53c1163f531a03a0db4de9f4
Author: isaacs <i@izs.me>
Date:   Fri Sep 4 09:51:19 2020 -0700

    Dont flag workspace edges as suspect unnecessarily
    
    The previous update to flag edges as suspect if the package.json had
    changed did not take into account the 'workspace' edges coming from the
    root node.
    
    As a result, it would _always_ flag edges as suspect if any workspaces
    were in use, resulting in unnecessary work in loadVirtual.
    
    The solution here is to load the actual workspace links when we load the
    package.json for the root node, so that we can compare the actual
    workspaces to the virtual workspaces present in the lockfile.
    
    This has the side effect of requiring that we fill out the fixtures for
    all the virtual workspace loading tests.  This more closely models real
    world projects, however, since workspace contents are typically part of
    the root project repository anyway.
    
    This does not go as far as detecting when the package.json files of
    workspace projects themselves get edited, which will likely have to be
    done in a later commit.
    
    PR-URL: https://github.com/npm/arborist/pull/122
    Credit: @isaacs
    Close: #122
    Reviewed-by: @ruyadorno

commit 7d1a3fdcddea575554e52fa242f3cedf9a36a862
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 4 14:23:38 2020 -0400

    fix: remove bin links on prune

commit 0b179612132473b30189d314399155fd0fcae471
Author: isaacs <i@izs.me>
Date:   Thu Sep 3 16:42:01 2020 -0700

    0.0.20

commit a20ea59639978e23d4ceaa410e62da7b2b2c688a
Author: isaacs <i@izs.me>
Date:   Thu Sep 3 16:40:36 2020 -0700

    update some registry mocks and the audit-report test

commit 368dd4ff04e4a68767ce2a73f5993526fd9ea80e
Author: isaacs <i@izs.me>
Date:   Thu Sep 3 16:26:32 2020 -0700

    Save long files less annoyingly in fixtures

commit e034306be56dbbb7073574ed71c5ea92eb3b2f6c
Author: isaacs <i@izs.me>
Date:   Wed Sep 2 14:27:02 2020 -0700

    Refresh dep flags in virtualTree, prune extraneous from ideal
    
    This fixes a situation where the root node's package.json is manually
    edited, resulting in a package-lock.json which contains extraneous
    dependencies.  If we don't mark those as extraneous, we end up reifying
    them back to disk, even though they should be pruned.
    
    This performs a fresh calcDepFlags step only in the case where the root
    node's package does not match the edges defined in the package-lock.json,
    to handle these cases thoroughly and completely, but only in when it's
    truly necessary to do the full tree-walk.
    
    PR-URL: https://github.com/npm/arborist/pull/119
    Credit: @isaacs
    Close: #119
    Reviewed-by: @isaacs

commit e8711ad3fcebb3c1607e72fbc971531776e30195
Author: isaacs <i@izs.me>
Date:   Wed Sep 2 10:58:51 2020 -0700

    update snapshots
    
    Also, ensure that the audit-report test is not hitting the public
    registry.
    
    PR-URL: https://github.com/npm/arborist/pull/118
    Credit: @isaacs
    Close: #118
    Reviewed-by: @ruyadorno

commit bc63759167b17f7a7b63253384577587e2a0703d
Author: isaacs <i@izs.me>
Date:   Wed Sep 2 10:56:42 2020 -0700

    update json-parse-even-better-errors

commit 7fa48a9c98c4823318aca34f108a95addf583ca0
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:41:39 2020 -0700

    Refactor and explain ERESOLVE conflicts
    
    When a peerDep cannot be resolved, this changes a few things.
    
    First, the Node.explain() method is used to explain what was present
    that conflicted, why it's there, what the conflict (or peer conflict)
    was that we couldn't install, and why THAT node was trying to be added.
    With some prettying up and conversion to human-intelligible language,
    this should provide the user with enough information to make an informed
    decision about what to do.
    
    Second, we override the peer dep with a "best guess" as to what ought to
    go in that location if --force is enabled.  If the target location is
    the first place we're trying to place the peerDep (ie, it is the parent
    of the node that has the peer dependency), and it has a direct
    dependency on the node in question, then we use the parent's dependency
    spec instead.
    
    Lastly, if a _set_ of peer dependencies can be moved deeper into the
    tree in order to avoid a conflict, we now detect that and do that as
    well.
    
    The "fixWithForce" boolean on the explanation object can be used to
    suggest that the user MAY retry the command with --force in order to
    resolve the situation.  Otherwise, --legacy-peer-deps is the other quick
    fix.
    
    With these changes in place, gatsby, reakit, doctokit, and several other
    real-world projects that depend on nested conflicting peerDependencies
    can be installed, albeit requiring the use of the --force flag.

commit 488293866d73e278d19cbe3ce46f375bf2f7e4d5
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:31:00 2020 -0700

    Initial ERESOLVE explanation spike in the example scripts

commit 57dd3dcf7b962fd6ef271cd0f84c4901a7e72941
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:30:11 2020 -0700

    Bump up test time limit for audit-report
    
    Really need to make audits faster by caching more, but for now, this is
    a band-aid on the problem.

commit b33621cd7c42b23bb1db06b27512700295b7fff2
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:23:04 2020 -0700

    add more explanation to infinite dep regress fixture readme

commit f52300767c5f5de697d1ed903d0839b77bd5375f
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:22:23 2020 -0700

    Fixture packages to test peer dep conflict cases

commit 86ba8c28cf79feb069204e2559a18d5eb60660a9
Author: isaacs <i@izs.me>
Date:   Mon Aug 31 16:22:51 2020 -0700

    A utility to get all the peers of a given node
    
    This is used when analyzing sets of peer dependencies for conflicts,
    when we need to determine whether the peer set can be nested deeper into
    the tree in order to avoid a conflict.

commit 749d5b10f87e9bb384b136e15167ba8ff1da7816
Author: isaacs <i@izs.me>
Date:   Mon Aug 31 14:54:33 2020 -0700

    Add Node.explain() method
    
    This allows us to easily get a simplified 'explanation' object that
    describes why a node is being placed in the tree.  Ie, the chain of
    dependencies that leads back to the root node in the project, for use
    when we encounter unresolvable conflicts in peerDependencies.

commit 2b892713526a5a90f287f34d5d0e3116b8c16fc3
Author: isaacs <i@izs.me>
Date:   Fri Aug 28 16:24:23 2020 -0700

    lint fix

commit c71f2db4159275aca02b8802cff868f8521b190c
Author: isaacs <i@izs.me>
Date:   Fri Aug 28 16:22:29 2020 -0700

    update all deps

commit 00ecfc7594cbd7b1b82ebf36c88ec15c7983017e
Author: isaacs <i@izs.me>
Date:   Fri Aug 28 15:42:52 2020 -0700

    Remove inaccurate statement re registry-scoped configs

commit c0b45dcc8bf1d5c5fb06049d5009e49723c19e1e
Author: isaacs <i@izs.me>
Date:   Fri Aug 21 15:28:21 2020 -0700

    test fixture with a long looping chain of peer dependencies

commit 5b550501f50d6489d7e5f7598a97a5cf4cc5cc8a
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 1 14:24:40 2020 -0400

    0.0.19

commit d7cb19737d19bc884c4573693522698147870a51
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 1 14:22:46 2020 -0400

    fix: extraneous workspaces

commit 804f2e3d9f6128bed134239a9f43ea172c3c9ef3
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 1 11:14:01 2020 -0400

    0.0.18

commit e9dd439a7059c9bf96dfa451f217712fc72ca5dd
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Aug 31 17:05:45 2020 -0400

    fix: loadActual workspace support
    
    - moved workspaces mapping from build-ideal-tree into load-actual
    - added tests and proper symlink setup
    
    PR-URL: https://github.com/npm/arborist/pull/117
    Credit: @ruyadorno
    Close: #117
    Reviewed-by: @isaacs

commit 9f08d0b1c5119fddf6321f21eccab276ccb148ed
Author: isaacs <i@izs.me>
Date:   Fri Aug 21 15:25:50 2020 -0700

    add sequential peer dep test fixture
    
    This use case is actually already covered by other tests, and since
    arborist does the right thing, there's no need to add another test for
    it, but I wanted to check my assumption when someone asked about this
    sort of use case.

commit 2e1d3f97af6aff7ed7c7e241cecb1b365b92d3ee
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:34:49 2020 -0700

    0.0.17

commit 1b45ef9d99b50febe61139d5b2301eb1467a44b8
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:23:16 2020 -0700

    test: add better error tracking in loadActual test

commit 987ad6e52b9da071f2a42baa850ebbf17613e41e
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:16:06 2020 -0700

    Load package.json when loading virtual tree
    
    Otherwise we drop all the extra metadata fields when doing
    npm audit fix.

commit 3654cd4cf3e5ee8a2ea22e62acfecb82cf972325
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:15:13 2020 -0700

    preserve both indentation and newline in lockfiles

commit 7eb3eddfbccc279289317a1a8f7268db8e072d70
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:09:07 2020 -0700

    preserve line endings and indentation when saving package.json

commit ef9b0ce7771542c68c06fdb9229f39eb1ab24db5
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:09:39 2020 -0700

    update json handling for formatting preservation

commit bf27f1a95259ca8407de365f925e98c1d9e7a4e5
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:00:59 2020 -0700

    parallelize inflating old shrinkwrap files

commit f8112e1433426600c8a9a9b166fa9ec315506494
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:00:33 2020 -0700

    a fixture with an empty package-lock and no package.json

commit f9dd429b6a0155148789f9e46553ec40b0e3b4dd
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 22:44:10 2020 -0700

    add missing test fixture and snapshots

commit f1cacc09f24424cf483e8b16a54f2734268283f3
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 18:23:06 2020 -0700

    refresh manifests when doing a complete idealTree build for old lockfiles

commit 021e24866a7157625bc11d734e99e79b2861d33d
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 18:08:10 2020 -0700

    reify a project with an ancient lockfile, loading all deps

commit f832c2cfe4c3351b0fcca77f06d9e11281d5c42d
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 17:55:05 2020 -0700

    Reinflate ancient lockfiles when building ideal tree

commit 1991bfbd7a6e99902dff7fdb5abc4ba2801afb38
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 17:41:50 2020 -0700

    Add the ancientLockfile flag for v1 lockfiles without requires

commit 916ebb6a5a9a1a8c96aa5c1301bf891ac122e85e
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:34:02 2020 -0700

    0.0.16

commit 2d24fa5b81974aaa32daf114dd8bdb200d91b07f
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:27:39 2020 -0700

    do not remove optional nodes from the tree when trashed
    
    We need them to stick around in the lockfile even if the optional
    installation fails.

commit 2b7194fb4b478ce2e360efd8ed54661181d0eb0d
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:11:18 2020 -0700

    add missing test fixture for lying v5 lockfile audit

commit 589ba9acaf26ae5ca9b2579df38f72435cdebac1
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:00:03 2020 -0700

    Respect omit options in Arborist.audit()
    
    This also cleans up some bugs in the data being sent to the legacy quick
    audit endpoint (which were failing, but since we only use it as a
    fallback, and the public registry supports bulk advisories, it went
    unnoticed in npm beta testing).
    
    Any advisories against omitted deps will now be ignored.
    
    Fix: https://github.com/npm/arborist/issues/110

commit fb6019c25f2d12ef3453b5a0e6e871bae4ee2024
Author: isaacs <i@izs.me>
Date:   Sun Aug 9 18:02:37 2020 -0700

    0.0.15

commit 909651d042f3f7912f7a1a9f2b47d3676249de6f
Author: isaacs <i@izs.me>
Date:   Sun Aug 9 17:57:30 2020 -0700

    Do not get confused when root matches a duplicated metadep
    
    Root cause of https://github.com/npm/cli/issues/1641

commit cd2d3f4af6a87d26f8f6e7d9c957343df5700177
Author: isaacs <i@izs.me>
Date:   Wed Aug 5 15:51:53 2020 -0700

    ideal: use async for nicer code, always end idealTree timer

commit 3a475996d44159841aee4b8408a276668e094eb2
Author: isaacs <i@izs.me>
Date:   Wed Aug 5 11:27:20 2020 -0700

    0.0.14

commit 9b9dabae2f2707479d6a5ea2cdadad1f141b289f
Author: isaacs <i@izs.me>
Date:   Wed Aug 5 11:17:34 2020 -0700

    Omit peer deps from legacy lockfile requires lists

commit 1551d1a511415b93d41a88c9ae5277f15033f8a4
Author: isaacs <i@izs.me>
Date:   Tue Aug 4 11:14:48 2020 -0700

    0.0.13

commit 31038b36977659e490bddc91d0c2df9d7a8aeff2
Author: isaacs <i@izs.me>
Date:   Tue Aug 4 11:13:28 2020 -0700

    Avoid invalid auditReport with npm v5 lockfile
    
    npm version 5 created package-lock.json files that did not contain the
    full dependency spec in the 'requires' block.  As a result, a node may
    _appear_ to be a meta-vulnerability, but when we scan for the versions
    that actually _are_ vulnerable, we don't find any.
    
    The AuditReport.delete() method was not removing the vuln from the
    'effects' list of the vulnerabilities causing it, so this led to
    problems when trying to print the report, and being unable to find the
    missing items.
    
    There's still an issue where audit fix won't be able to fix the problem
    without first reifying to get a new lockfile, but since this only
    affects projects migrating from npm v5, the impact is more minor.
    
    cc: @ruyadorno

commit 69e62b7c456cf776615bd865a9073231493d34ec
Author: isaacs <i@izs.me>
Date:   Mon Aug 3 17:58:33 2020 -0700

    0.0.12

commit 73220d065d39304d8bec0a3204c7edade576a590
Author: isaacs <i@izs.me>
Date:   Mon Aug 3 17:54:04 2020 -0700

    Memoize many audit actions for huge speed benefits
    
    Need to go further, though.  If you have a library with a lot of deps,
    which has also published a lot of versions, and several of those deps
    have advisories posted against them, then there's an exponential
    explosion in the time required to figure out which versions of the
    library are vulnerable.
    
    In the case of npm's docs website, the dependency on gatsby was somewhat
    punishing as a result.
    
    We can go further in the future by caching the resulting set of
    metavulns from a given set of advisory endpoint JSON, and load those
    along with the initial set of vulnerabilities, so that we don't have to
    scan every packument's dependencies for transitive vulnerabilities.
    This commit doesn't do that, but it would be good to get that done prior
    to Arborist's 1.0 release.

commit 25799aa3b09cefe2c32a3a6312660ca22ce4b545
Author: isaacs <i@izs.me>
Date:   Sun Aug 2 13:31:45 2020 -0700

    0.0.11

commit c67fc64f822b58cb82628ebd622b193cdd1f00b3
Author: isaacs <i@izs.me>
Date:   Sun Aug 2 13:28:32 2020 -0700

    Do not duplicate bundled metadependencies
    
    Fix: https://github.com/npm/cli/issues/1597
    
    This implements approach 2 described in
    https://github.com/npm/cli/issues/1597#issuecomment-667639545.  It
    turned out not to be as challenging as originally thought, because the
    check happens when we can still just throw nodes in a trash to avoid the
    unpack and clean up the sparse tree.

commit 05dca3caea44988c5490c181e28ea124766c7f03
Author: isaacs <i@izs.me>
Date:   Wed Jul 29 10:44:04 2020 -0700

    0.0.10

commit d97228dbf56e4d124fd9512d38cc4864511de762
Author: isaacs <i@izs.me>
Date:   Wed Jul 29 10:42:00 2020 -0700

    Include ctor options with method options
    
    In practice, it seems weird that calling arb.reify() will drop the
    options passed to new Arborist(opts).  They can still be overridden, but
    since there are no overlaps (by design), it's fine to accept them from
    both places.
    
    It may be worthwhile to move _all_ options to the ctor, and not accept
    options objects in the public methods, but that's a bigger move.

commit 8a949bea7cdff2a6b7e78846111f4395fbe9508a
Author: isaacs <i@izs.me>
Date:   Wed Jul 29 10:33:52 2020 -0700

    Do not remove bundled deps when updating pkg
    
    When calculating the diff between the actual and ideal, the ideal tree
    does not contain bundled dependencies, since they'll be installed
    automatically and thus don't have to be reified.  As a result, the Diff
    shows these nodes as "removed", since they exist in the actual tree, but
    not in the ideal tree.
    
    However, this causes a problem when updating a package!
    
    When reifying, we add all the "removed" nodes to the trash list, and
    remove them at the end of the process.  In this case, it's unnecessary,
    since the contents of the updated package will have already been moved
    aside, including all their bundled deps.  The items on the trashlist are
    thus the _new_ installed bundled deps of the new version of the package.
    
    This led to a particularly perplexing situation self-installing the npm
    cli, where it would appear to install properly, but installing again
    left it without any dependencies at all!
    
    The fix is relatively straightforward, but it does mean that the Diff
    for a normal reify will be somewhat misleading, showing many removals
    that are not actually going to be removed.  The diff from a
    buildIdealTree({complete:true}) tree will be accurate, but at the
    expense of extra unpacks for all nodes with bundleDependencies.

commit 8248118c432e5a72a4ddeb7874ba4406dc8edf35
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 14:03:24 2020 -0700

    0.0.9

commit 6f7b263be1061c1f18691bbd5bfc749a7f701ae2
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 13:59:50 2020 -0700

    Correct usage of bundled:true in legacy shrinkwrap data
    
    Arborist was setting bundled:true for any bundled deps, including those
    bundled by the root project.  However, that's not what npm v6 does. The
    bundled:true flag reflects (in Arborist lingo) the Node.inDepBundle
    flag; ie, that a node is bundled by an installed dependency.
    
    This causes npm v6 to look up and try to install the parent node, which
    causes really bizarre failures with the root node.

commit e9da4c4a1a6e8b9d7fae3bb72b7a7fdc864f850b
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 09:56:30 2020 -0700

    0.0.8

commit e2916c6a2844bf4a06b6c4f4257b82e564ba5404
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 09:55:24 2020 -0700

    loadVirtual should never produce a root node marked extraneous

commit de66814d085d17842ee1dc3430f6b712e56c706f
Author: isaacs <i@izs.me>
Date:   Sat Jul 25 13:04:43 2020 -0700

    0.0.7

commit 6c77194942db6bd530045bcb31cc6491b3cbcce6
Author: isaacs <i@izs.me>
Date:   Sat Jul 25 13:03:36 2020 -0700

    Fetch the specific tag when pkg@latest is added

commit 83272f2ade6ba8ccbf9628dd77bc077af8c2e98f
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 17:53:29 2020 -0700

    0.0.6

commit f09ae6dfaac1aa1b2bb607682657b54ce8829256
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 17:52:30 2020 -0700

    Resolve file: dep paths against cwd when installing globally
    
    Otherwise 'npm i foo.tgz' tries to look for /usr/local/lib/foo.tgz,
    which is clearly not the right thing to do.

commit ad912229691b49b0045be4b5b5c76ab924ae434f
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 12:22:26 2020 -0700

    0.0.5

commit 590cb50da4c28c1a4f2f127bf76fdf5d1e1530a9
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 12:18:56 2020 -0700

    Do not use hidden lockfile if a package is missing
    
    If a hidden lockfile contains a package which is missing from the
    node_modules folder, then it should be considered invalid.
    
    Typically, this would already be caught by the hidden lockfile
    being created prior to the folder being created.  However, in the
    bundle deps bug fixed in the previous patch version, the lockfile
    at node_modules/.package-lock.json would be created afterwards,
    and packages in node_modules would simply not be created in the
    first place (so there's no time update for deleting an entry).

commit 449f9703d03184222f739ee48ed6fdf543344854
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 11:18:40 2020 -0700

    0.0.4

commit 25c45128772ad29d4bcc4243272cb782fe9ff5c9
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 10:19:21 2020 -0700

    reify: unpack deps bundled by root node
    
    This introduces a Node.inDepBundle property, which specifically means
    that a Node is bundled by something _other than_ the root project.
    
    Previously, we were not unpacking nodes that are in a bundle, which is
    usually correct, except when they are bundled by the root project.

commit 1c03bb53f13a0fc08ac5fe0bc8c0db533cd46f0b
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 10:18:53 2020 -0700

    Avoid dangling timers in audit-report when no nodes found

commit 7cdb6cd3d4c831388f235f80d1db96416ead3224
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Jul 17 14:28:44 2020 -0400

    test: fix links-all-over fixture
    
    PR-URL: https://github.com/npm/arborist/pull/107
    Credit: @ruyadorno
    Close: #107
    Reviewed-by: @isaacs

commit 37dc16ce82c81bc4403e1d7f2b26f805612bd1ef
Author: isaacs <i@izs.me>
Date:   Fri Jul 17 11:18:42 2020 -0700

    0.0.3

commit 9902c865d8d172b198563d3091b2a078797714df
Author: isaacs <i@izs.me>
Date:   Fri Jul 17 11:17:24 2020 -0700

    Add defense against Node/Link ctor throwing in loadActual
    
    Added test doesn't add coverage, because line was already covered.
    
    Paired with @ruyadorno

commit e29ee0e22c05bfb73cedd88debd2b0bc5ec74037
Author: isaacs <i@izs.me>
Date:   Thu Jul 16 11:40:58 2020 -0700

    0.0.2

commit e82f6fe4d61545962f3bc2d91f6061409599e8d6
Author: isaacs <i@izs.me>
Date:   Thu Jul 16 11:39:55 2020 -0700

    add Edge.prod convenience getter

commit df90b5f9b13c2de4514696febcdc58d01aa78f4a
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:50:52 2020 -0700

    0.0.1

commit f13174424a9285cfd8226471fbf77ec89c9ae2c0
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:44:26 2020 -0700

    Add Node.version getter field

commit 02bf5ff0f57f15e76a58a66cc98ca895a737e51b
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:40:52 2020 -0700

    Add Node.pkgid field

commit 017e9f5ff03865d982f1eb6bd451f205d9a4f008
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:23:24 2020 -0700

    Add Node.satisfies(request) method

commit 522b446eb044a5f3266949b79333ca3873fadac8
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:23:08 2020 -0700

    Add ENOLOCK error code to missing shrinkwrap file error

commit 2702ffea9060c5d9529b95959172c1671d3294ed
Author: isaacs <i@izs.me>
Date:   Fri Jul 10 17:41:49 2020 -0700

    0.0.0

commit 739b8fa56e27560ff207f03ef9dd3ef23782a7a8
Author: isaacs <i@izs.me>
Date:   Fri Jul 10 17:18:25 2020 -0700

    update mkdirp-infer-owner

commit 727492c58c766c89602295ab8292e55b42967dc8
Author: claudiahdz <cghr1990@gmail.com>
Date:   Tue Jul 7 17:46:44 2020 -0500

    test(prune): add test cases to pruner
    
    PR-URL: https://github.com/npm/arborist/pull/104
    Credit: @claudiahdz
    Close: #104
    Reviewed-by: @isaacs

commit d716c8c46d32cc18061a2fef5eeb1a9ab4f1aafb
Author: isaacs <i@izs.me>
Date:   Tue Jul 7 17:59:24 2020 -0700

    update dependencies

commit d21a3802f78584b72231d9d745c90d47db15c39a
Author: isaacs <i@izs.me>
Date:   Fri Jun 5 16:08:44 2020 -0700

    0.0.0-pre.21

commit d0d81c9b7df9d91cd2ed2b9279ee224e17815e4c
Author: isaacs <i@izs.me>
Date:   Thu Jun 4 13:34:32 2020 -0700

    Prevent duplicate/conflicting entries in yarn.lock file
    
    This fixes a few flaky tests, and strips any duplication or conflicts
    out of the yarn.lock file that we generate from Arborist trees.
    
    PR-URL: https://github.com/npm/arborist/pull/102
    Credit: @isaacs
    Close: #102
    Reviewed-by: @ruyadorno

commit dbee531a4336bca7170dc99beb2e1346e8b3237b
Author: isaacs <i@izs.me>
Date:   Wed Jun 3 18:39:18 2020 -0700

    audit: use new bulk advisory endpoint
    
    This isn't available on the public registry yet, but tested against
    live data on the internal npm staging registry.  When it goes live,
    it'll make audits significantly lighter.
    
    When we _do_ fetch data from the quick audit endpoint, because the
    bulk advisory endpoint is not available, strip out all the info that
    we don't use for anything.
    
    Fix #101

commit 185f657bf4d15321b6ed324541a8bb061eec970b
Author: isaacs <i@izs.me>
Date:   Wed Jun 3 16:07:52 2020 -0700

    Do not incorrectly report bundleDependencies as fixable
    
    Rather than attempt to fix bundle dependencies in-place, report the
    dependent module as vulnerable if its dependency range _intersects_ with
    the vulnerable range, since it _may_ contain that version in its bundle.
    
    From there, we can simply report the vulnerability as we normally do,
    with the assurance that fixing it will certainly avoid the vulnerable
    dependency.
    
    Note that we don't actually have to report them as unfixable (as long as
    some non-bundled and/or non-intersecting dependency range is found), or
    track the bundled-ness through to the data passed to
    npm-advisory-report.
    
    This also fixes an error where bundleDependencies in `loadActual` were
    too liberally set.  Only the top-most bundled parent should be
    considered a bundleDependency of its parent, not every child node.  This
    showed up in being overly broad in determining which dependency versions
    are affected by a bundled meta-dep.
    
    Fix #69

commit 0537810b9c2a72113299417c19b8832ed757d094
Author: isaacs <i@izs.me>
Date:   Wed Jun 3 08:57:13 2020 -0700

    fix test: was utimes-ing the wrong hidden lockfile

commit 6c96f372bd97b7f9858600e9763eda24194e843f
Author: isaacs <i@izs.me>
Date:   Tue Jun 2 22:11:27 2020 -0700

    fix timing consistency on hidden lockfile test

commit c1adb545c0c2e209acba3a5aaae789e22bd938a5
Author: isaacs <i@izs.me>
Date:   Tue Jun 2 15:10:28 2020 -0700

    0.0.0-pre.20

commit a8984cd544dc01d82ccb11740388744de8416d46
Author: isaacs <i@izs.me>
Date:   Mon Jun 1 16:09:40 2020 -0700

    Add formatPackageLock boolean config
    
    Fix #99
    
    PR-URL: https://github.com/npm/arborist/pull/100
    Credit: @isaacs
    Close: #100
    Reviewed-by: @ruyadorno

commit 48e075fc9b0ed0150a6874191454201ece6ee74d
Author: isaacs <i@izs.me>
Date:   Fri May 29 23:47:28 2020 -0700

    Resolve infinite dependency nesting with a symlink
    
    Fix #96
    
    In a case like http://npm.im/@isaacs/pathological-dep-nesting-a we have
    a dependency cycle that would nest infinitely:
    
    ```
    a@1 -> b@1
    a@2 -> b@2
    b@1 -> a@2
    b@2 -> a@1
    ```
    
    When trying to reify this, we have to nest another a@2 under b@1,
    because it would otherwise resolve to a@1.  Then that a@2 needs a b@2,
    which has to nest or otherwise resolve to b@1, and the cycle goes on.
    
    The actual (deduped) reified tree looks like:
    
    ```
    root
    +-- a@1
    +-- b@1 (deduped from a@1's dep)
        +-- a@2 (overriding a@1 one level up)
        +-- b@2 (deduped from a@2's dep)
            +-- a@1 (overriding a@2 from one level up)
            +-- b@1 (deduped from a@1's dep)
                +-- a@2 (loop forever...)
    ```
    
    With this commit, the loop is cut by detecting in buildIdealTree that a
    node being added to resolve a problemEdge is satisfying an edge that
    already has an identical node in its ancestor set.
    
    Ie, in this example, when we get to the second a@1, we need to place b@1
    to satisfy its dependency, or else it will resolve to b@2 (its parent).
    Since the edge is a problem, we know that the nearest resolution is
    _not_ a match (or else we wouldn't be bothering to add it).  Thus, any
    node in the ancestry that matches the node we're attempting to add to
    the tree is certainly going to cause an infinite regress, because its
    presence has caused it to need to load another identical copy of itself.
    
    While we could throw in this situation (and it'd certainly be better
    than spinning forever trying to build an infinitely large tree), we can
    do better, by instead creating a symbolic link to the matching node
    further up the tree.  This is almost as efficient as throwing, and
    produces a correct dependency resolution.
    
    Thus, instead of growing infinitely, the resulting tree looks like:
    
    ```
    root
    +-- a@1
    +-- b@1
        +-- a@2
        +-- b@2
            +-- a@1
            +-- b@1 (symlink to root/node_modules/b)
    ```
    
    When using legacyBundling, the tree would look like:
    
    ```
    root
    +-- a@1
        +-- b@1
            +-- a@2
                +-- b@2
                    +-- a@1 (symlink to root/node_modules/a)
    ```
    
    Which, surprisingly, is 1 less package on disk, and perhaps the only
    scenario where legacyBundling produces a _more_ deduplicated tree than
    the default.
    
    We could someday explore a way to detect all matching nodes in the tree
    and replace them with symlinks, as a sort of "deduplicate more", but
    since that's considerably more work and may have some unforeseen
    consequences, it's left as an area for future exploration.
    
    PR-URL: https://github.com/npm/arborist/pull/97
    Credit: @isaacs
    Close: #97
    Reviewed-by: @ruyadorno

commit 393079998ee508befd2312ce1a5b6b71d603eb74
Author: isaacs <i@izs.me>
Date:   Fri May 29 23:37:46 2020 -0700

    add node.matches(otherNode) method
    
    This can be used to detect pathological dependency nesting, by
    being able to check whether a matching node already exists in the
    ancestors of a possible placement

commit 573c40411c98453bafc6f9ccb37a85e8260bb606
Author: isaacs <i@izs.me>
Date:   Fri May 29 17:18:28 2020 -0700

    node: reload edgesIn to nodes matching name in reloadNamedEdges
    
    Wow, that's a dense commit heading.  Tried hard to get it under 50
    chars, and still failed.
    
    When we add a node into a parent node, we call reloadNamedEdges on the
    parent, to walk the tree reloading any edges that have the name of the
    child node being added.  This takes care of the case where a node is
    being added, and will end up changing the dependency resolution of nodes
    within that portion of the tree.
    
    We were previously skipping over any nodes by that same name, and their
    children, with the reasoning that they would block the new higher-level
    addition from being reached by their children anyway.
    
    However, this turns out to not be sufficient, because those nodes may
    still have edgesIn that have to be re-validated, and would not otherwise
    be reached by the walker, if there is one version of a given named node
    nested inside a _different_ node with the same name.
    
    This becomes relevant for detecting infinite regressions in the nesting
    algorithm, because we need those invalid links to show that there's
    still more work to do, or else we never hit the infinite regress, and
    cannot warn the user that their tree is impossible to resolve.

commit d8dcbb3076f061d922f8561299b1039402215e6d
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:58:52 2020 -0700

    ensure hidden lockfile is fresh in shrinkwrap test
    
    PR-URL: https://github.com/npm/arborist/pull/94
    Credit: @isaacs
    Close: #94
    Reviewed-by: @ruyadorno

commit 250d81f1153323de0672b9f3066de68d54d3c0a7
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:54:36 2020 -0700

    remove unused printDedupe function in test

commit 61acbddf1c0a9646c4e26d55fa54b65e7a2539ee
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:54:11 2020 -0700

    remove unnecessary second initialization of actualTreeLoaded set

commit 1c60777686c462f474295b45180a3a75e7321af1
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:53:31 2020 -0700

    Do not treat dummy node as valid cached dep in findMissingEdges

commit 740e84584962fdcd5a2ced276239358c91c692d1
Author: isaacs <i@izs.me>
Date:   Fri May 29 10:44:28 2020 -0700

    test: ensure hidden lockfiles in fixture are newer than contents
    
    There's a race in the fixture generation we use which can _sometimes_
    end up creating a hidden lockfile isn't newer than the contents of the
    node_modules folder, and ends up being ignored out of an abundance of
    safety.
    
    Ensure that doesn't happen in our tests by bumping the mtime after
    fixture creation.
    
    Also: add some missing fixture folders that were present in the
    reify-cases snapshots, but not in the actual directories.

commit b43b065c875b503036403537e7716961a615d48a
Author: isaacs <i@izs.me>
Date:   Thu May 28 01:19:34 2020 -0700

    Add dryRun config to not touch the file system

commit bab746aa3efbf7dd59eb1119be9051266eab73ac
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri May 29 11:58:33 2020 -0400

    feat: prune
    
    - Add `Pruner` mixin that exposes a `prune` method
    - Added tests
    
    PR-URL: https://github.com/npm/arborist/pull/95
    Credit: @ruyadorno
    Close: #95
    Reviewed-by: @isaacs

commit 9077c4bed1db67469af4e327c388c49411a3aa97
Author: isaacs <i@izs.me>
Date:   Thu May 28 00:55:14 2020 -0700

    Add support for packageLock option
    
    Re #46
    
    PR-URL: https://github.com/npm/arborist/pull/93
    Credit: @isaacs
    Close: #93
    Reviewed-by: @ruyadorno

commit a11d5da50c822c0e6d6d903c9f8d43b24bc0ba25
Author: isaacs <i@izs.me>
Date:   Thu May 28 00:36:05 2020 -0700

    add missing package.json in test fixture
    
    This was causing a weird as hell race condition due to the prior commit
    that checks if the hidden lockfile is up to date.
    
    If the test fixture was created with a >10ms gap between the hidden
    lockfile being created and the package contents being created, then the
    hidden lockfile wouldn't be respected, and it'd have to load the
    package.json from disk.
    
    However, since the package.json was missing, this meant that the semver
    node always had a node.package of {}.
    
    That timing issue would only hit if the test fixture generation took
    more than 10ms, AND the delay landed in just the right spot in the test.
    Reproduced by adding a ton of loging, and then running the test in a
    tight loop along with 6 other tests going at the same time, and even
    then, it only usually triggered after 5-10 minutes.
    
    It wasn't a problem before, because a hidden lockfile contains
    everything necessary to load the tree.  So, when there was no safety
    check to ensure that the hidden lock is newer than the packages it
    describes, the lack of a package.json file was never a problem.
    
    PR-URL: https://github.com/npm/arborist/pull/92
    Credit: @isaacs
    Close: #92
    Reviewed-by: @ruyadorno

commit 34cbd1a6c579300f192b6d39d34e48e073d743bb
Author: isaacs <i@izs.me>
Date:   Wed May 27 18:15:46 2020 -0700

    Only use hidden lockfile if up to date
    
    Compare the mtime of the hidden lockfile at
    node_modules/.package-lock.json against all package folders in
    node_modules, and ensure that all packages in node_modules exist in the
    lockfile data.
    
    This of course still can be thwarted by editing a single file within a
    package folder, but not adding or deleting any files or folders, or
    modifying files in nested subfolders in a package in any way whatsoever.
    
    However, it prevents the overwhelming majority case where this would
    bite us, which is someone installing something with yarn or previous
    versions of npm.
    
    In those cases, we ignore the hidden lockfile, meaning that any
    loadActual call will read the files on disk as normal.
    
    Fix #91

commit b6ad06b126d153402b1970019db8125cf03f72d0
Author: isaacs <i@izs.me>
Date:   Wed May 27 16:26:29 2020 -0700

    Base idealTree on actualTree if no lock present
    
    Fix #79
    
    If there is no package-lock.json or npm-shrinkwrap.json file present,
    then base the idealTree on the actualTree if available.
    
    This minimizes surprising meta-dep updates (and in some cases, extremely
    slow install times!) when not using a package-lock.json file.
    
    A caveat here is that it _may_ result in a lockfile being saved for the
    first time with `resolved: null` for some deps, if they were present in
    the `node_modules` folder to start with.
    
    PR-URL: https://github.com/npm/arborist/pull/90
    Credit: @isaacs
    Close: #90
    Reviewed-by: @ruyadorno

commit 153b538b6e980c7fa2dd578b29aafdcb82b643a4
Author: isaacs <i@izs.me>
Date:   Wed May 27 14:48:30 2020 -0700

    more extensive tests for deduper
    
    Added while debugging why making buildIdealTree respect the existing
    actualTree was not working as expected.

commit a115eeef789da5a67076c24c05895e4f1fd263ee
Author: isaacs <i@izs.me>
Date:   Tue May 26 22:20:41 2020 -0700

    make Arborist.loadActual() parallel-safe
    
    Do not load the actual tree multiple times if loadActual() is called
    multiple times on the same Arborist object.

commit c5c983c9b40a7f36f3a39e241614e8920e467685
Author: isaacs <i@izs.me>
Date:   Tue May 26 10:52:17 2020 -0700

    Refactor shrinkwrap for correctness and elegance
    
    Since the Shrinkwrap class was developed prior to figuring out exactly
    how it would be used in the various Arborist methods, some things ended
    up growing in a somewhat inelegant direction.
    
    - Nodes were fetching their resolved and integrity values in multiple
      places.
    - The Shrinkwrap internal data tried to keep up both the new and old
      data up to date as the tree changed, but this was not always possible.
    - Dependencies of link targets were not properly reflected in the legacy
      shrinkwrap metadata.
    - The Node class and buildIdealTree methods both had to dive deep into
      the internals of the YarnLock class, which should be an implementation
      detail of the Shrinkwrap class.
    
    Now, the Shrinkwrap object keeps a reference to the root tree node found at
    its own path.  Rather than try to keep the legacy metadata in sync at
    all times, we _only_ build up the legacy shrinkwrap data when calling
    `this.commit()`, by walking the `node.children` and
    `node.target.children` maps appropriately.
    
    Also, `this.yarnLock` is updated on commit(), and a `checkYarnLock()`
    method is added to return the spec that should be fetched, and update
    the provided options object with resolved and integrity metadata.
    
    All of the logic for setting node metadata from the Shrinkwrap is now
    done in `Shrinkwrap.add(node)`, making it much simpler and harder to get
    wrong.
    
    This means that:
    
    - `yarn.lock` files are respected more fully (including their resolved
      and integrity expectations)
    - We don't have cases where both `extraneous` and `dev`/`optional` are
      set in the lockfile (which is always an error -- extraneous nodes
      cannot be either dev or optional!)
    - Link target dependencies are accurately reflected in the legacy
      shrinkwrap data, rather than creating invalid `../` entries.
    
    Fix: #82
    Fix: #84
    
    PR-URL: https://github.com/npm/arborist/pull/88
    Credit: @isaacs
    Close: #88
    Reviewed-by: @ruyadorno

commit c5de416e7170a1e05db80a5b456e32dc11bcd5bb
Author: isaacs <i@izs.me>
Date:   Mon May 25 10:35:07 2020 -0700

    Rework approach for finding link target deps
    
    This change updates a few things, resulting in a much more resilient and
    reasonable approach to finding the dependencies of link targets, which
    is relevant for workspaces and for interpreting pnpm trees, and reduces
    the "load my whole dev folder" antipattern.
    
    Prior to this change, in loadActual, if a link target was found in a
    node_modules folder, then the parent of that node_modules folder would
    be loaded, along with its children.  While this is seems like a
    reasonable way to handle pnpm trees, it has the following problems:
    
    1. If you are developing a bunch of projects right in a `node_modules`
    folder, then it would sometimes result in loading ALL of your JS
    projects in the actualTree!  This is rarely what you want, and had some
    surprising behavior when I encountered it myself.  (I develop quite a lot
    of projects in a node_modules folder for convenience.)
    
    2. If you have a situation where a package is _not_ in a node_modules
    folder, but it does have some missing dependencies which are in fact
    resolved by deps already in the tree, it would show up as missing.
    
    With this change, the loadActual process will walk up the parent
    directories of any top nodes, searching for any missing edges.  If a
    folder is found at `${dir}/node_modules/${name}`, then a "dummy" node is
    created for the parent, such that the parent/fsParent resolution
    algorithm will find a hit and resolve to the named dep.
    
    It will not load any _other_ dependencies in the dummy node, however,
    and will not walk up higher than the nearest common ancestor of the
    project root and the link target.
    
    Furthermore, this uncovered a bug where setting the parent of a node to
    a new parent with the same `root` was causing it to unlist itself and
    all children from the root.meta and root.inventory, but only _relist_
    itself, and not its children.  This bug was previously not hit in test
    because the node demonstrating it was within a node_modules folder, and
    so was fully loaded along with all of its siblings.
    
    Lastly, because dummy nodes are never "extraneous" (they're just there
    as placeholders, they're not "real" anyway), had to update a few
    shrinkwrap files in fixtures to not get weird results.  An upcoming
    refactor of the Shrinkwrap class will make this incorrect metadata less
    of a hazard moving forward.
    
    PR-URL: https://github.com/npm/arborist/pull/86
    Credit: @isaacs
    Close: #86
    Reviewed-by: @ruyadorno

commit cdfe16420119cde9f3edb4ce72bd79ae1b324c0c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed May 27 13:57:26 2020 -0400

    chore: deduper refactor
    
    PR-URL: https://github.com/npm/arborist/pull/89
    Credit: @ruyadorno
    Close: #89
    Reviewed-by: @isaacs

commit 9d01b6deea9c08ced54d15c65e376a40936cddb0
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue May 26 11:40:55 2020 -0400

    chore: dedupe cleanup
    
    - added fixtures for dedupe reify-cases
    - tweaks and cleanup in lib trimmer/build-ideal-tree
    
    Fix: #66
    PR-URL: https://github.com/npm/arborist/pull/87
    Credit: @ruyadorno, @claudiahdz
    Close: #87
    Reviewed-by: @isaacs, @ruyadorno

commit cfede2e78b14512aae9f18bfed64e30f1b541bd7
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon May 25 14:51:45 2020 -0400

    test: dedupe test cases

commit bb4f1a82436a997b69be8d5879cf2334e81b5896
Author: claudiahdz <cghr1990@gmail.com>
Date:   Wed May 6 14:45:19 2020 -0500

    feat: arborist dedupe()

commit 2d94b28402a2f8868e934b812257ea99eaad643b
Author: isaacs <i@izs.me>
Date:   Wed May 20 22:47:58 2020 -0700

    add Arborist.rebuild()
    
    This refactors reify() to move bin linking and script running
    into the rebuild() method, and exposes it for use in 'npm rebuild'
    
    PR-URL: https://github.com/npm/arborist/pull/83
    Credit: @isaacs
    Close: #83
    Reviewed-by: @ruyadorno

commit 9efb437e542adfa78a9e58dff79746d9e20ba615
Author: isaacs <i@izs.me>
Date:   Mon May 18 21:53:12 2020 -0700

    fix: Handle tarball dependencies properly
    
    For 'file:' deps (whether directory or tarball type), Node.resolved is
    always absolute.  It was initially set up to be relative to the node
    path, because it had to be stashed back to package.json.  But, then we
    got rid of that approach in favor of a more comprehensive lockfile, and
    so the added complexity of constantly re-evaluating the resolved value
    as the node moves around serves no purpose.
    
    This relative linking also _wasn't_ being handled properly in tarball
    dependencies, resulting in attempting to fetch a tarball from the wrong
    location, relative to the dependent's directory in node_modules, rather
    than where it should be found.  Since we never store Node.resolved
    anywhere, there's no need for it to be portable, and the portability had
    a bug anyway.
    
    *Shrinkwrap* files *do* have to be portable, so the paths get
    relativized (and resolved) going into and out of lockfiles.  But that's
    much simpler.
    
    Tarball dependencies are more consistently handled, and now that the
    Node.resolved value is absolute and predictable, it's easier to get that
    right.
    
    Tarball dependencies are properly regarded as a valid dependency
    resolution, provided that they come from the same target file.  It's
    still a bit of a crapshoot when we get legacy install trees, but at
    least now we're not throwing out package._resolved when we load the
    manifest from pacote directly.
    
    The added test case installs a tarball dependency which depends on two
    other tarballs: 1 in its own containing folder, and another outside of
    its folder.  (This exact situation was a thorn in npm's side for most of
    6.x, and might still be in some cases.)
    
    PR-URL: https://github.com/npm/arborist/pull/81
    Credit: @isaacs
    Close: #81
    Reviewed-by: @ruyadorno

commit 7e92f6cea0e9ea8cd90aa71dffe2a17d86486a17
Author: isaacs <i@izs.me>
Date:   Mon May 18 12:31:32 2020 -0700

    Refactor the Arborist class mixin stack
    
    There's no reason why these mixins have to stack on one another in the
    definition or extend one another.  We only ever use the Arborist class
    as a fully-assembled thing, so it's fine to just throw them all in a
    list and call it a day.

commit d4ab8b3c273f29e555bfc2a0ac5fb59d8aaa2ef5
Author: isaacs <i@izs.me>
Date:   Mon May 18 11:54:33 2020 -0700

    Support rebuildBundle: false
    
    Re: https://github.com/npm/arborist/issues/46
    
    PR-URL: https://github.com/npm/arborist/pull/80
    Credit: @isaacs
    Close: #80
    Reviewed-by: @ruyadorno

commit 6ea73de40aaa362cc32cc6911e58e459ea27c8bf
Author: isaacs <i@izs.me>
Date:   Mon May 18 11:20:02 2020 -0700

    test: add proper caching where it was missing

commit ce51fc962efdcae90c8deda5f1248e041abefd32
Author: isaacs <i@izs.me>
Date:   Thu May 14 22:57:26 2020 -0700

    Add support for the packageLockOnly config
    
    This tells reify() to just generate the ideal tree and write
    package-lock.json and package.json, but do nothing else.
    
    Re #46
    
    PR-URL: https://github.com/npm/arborist/pull/78
    Credit: @isaacs
    Close: #78
    Reviewed-by: @ruyadorno

commit ffe57201350c79eedd57fbec4f4a09670f72ddf1
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:16:30 2020 -0700

    remove unused load-bundle-deps module
    
    PR-URL: https://github.com/npm/arborist/pull/77
    Credit: @isaacs
    Close: #77
    Reviewed-by: @ruyadorno

commit 5fac0af5a7d1f821c07c610e5a81aa4d67afc9b2
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:16:06 2020 -0700

    buildIdeal: replace load-bundle-deps module with loadActual({root})

commit 32747a258f46fbf1835fa16b381b5f2b31c4f263
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:13:43 2020 -0700

    reify: replace load-bundle-deps module with loadActual({root})
    
    This makes it so that we get proper dep flags in bundled deps! Win!

commit 5ee0d16502d0e9bd35985d0d2b075f6158d1ca28
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:08:43 2020 -0700

    loadActual: add transplantFilter method to filter what gets transplanted

commit 9b979840479216c874a3967659f692823eb38b49
Author: isaacs <i@izs.me>
Date:   Thu May 14 18:27:44 2020 -0700

    calcDepFlags: add 'resetRoot' flag to tell it to not do that
    
    When we call loadActual to load bundle deps, we do NOT want to reset all
    the dev/optional/etc flags.

commit 89fb80fa9427b6ac112e09e41dafc106c8dc4408
Author: isaacs <i@izs.me>
Date:   Thu May 14 17:19:04 2020 -0700

    loadActual: cleanup code using async/await

commit 92176417f6f22b1998833e306c5104310a293bcc
Author: isaacs <i@izs.me>
Date:   Thu May 14 17:11:29 2020 -0700

    Add loadActual({ root: Node }) to compose trees
    
    Implementation for #72

commit 4f8c6c9541bb4266365a67f4f213e853a88d23de
Author: isaacs <i@izs.me>
Date:   Thu May 14 16:54:05 2020 -0700

    Fully update metadata/location when moving roots
    
    There were some cases, especially when moving fsChildren from one root
    to another, where the node.location would not be updated in the correct
    sequence, resulting in the metadata being incorrect or missing, and
    node.location being out of sync with node.path and node.root.path.
    
    Discovered while adding functionality for #72

commit 983e7517bc427ccac9d55c912fe12444936ed830
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu May 14 18:09:58 2020 -0400

    fix: avoid throwing type errors on inventory.add
    
    Trying to load mock malformed testing data from the cli resulted in an
    unexpected TypeError. The issue can be reproduced by having a falsy
    funding property in a package.json, as seen here:
    https://github.com/npm/cli/blob/abdf52879fcf0e0f534ad977931f6935f5d1dce3/test/tap/fund.js#L81
    
    This commit fixes the problem by avoiding trying to retrieve the `type`
    and `url` properties when having a `null` object reference.
    
    PR-URL: https://github.com/npm/arborist/pull/76
    Credit: @ruyadorno
    Close: #76
    Reviewed-by: @isaacs

commit b28a43f002b44292860111004fef6c6bc3a68f0e
Author: isaacs <i@izs.me>
Date:   Fri May 8 18:32:58 2020 -0700

    Add {complete:true} buildIdealTree option to load sw/bundles
    
    Needed for implementing 'npm install --package-lock-only'
    
    PR-URL: https://github.com/npm/arborist/pull/73
    Credit: @isaacs
    Close: #73
    Reviewed-by: @ruyadorno

commit c6d9e46fc2e0e18b49e8a637c2863adf38b3da18
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:16:05 2020 -0700

    Omit name from shrinkwrap when not needed
    
    Now that we load the name when creating Node objects in loadVirtual,
    there's no need to include it in the shrinkwrap metadata entry.
    
    PR-URL: https://github.com/npm/arborist/pull/74
    Credit: @isaacs
    Close: #74
    Reviewed-by: @ruyadorno

commit 3f94af2b789c3ac91a70a0bdceb32f100eb8512f
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:13:41 2020 -0700

    Include name in loadVirtual node.package
    
    Fix #70
    
    Reify change is to maintain coverage, since we never have a package
    version without a name, so there's no need for the fallback to
    node.name.

commit 9078b7dd7e526c5ae81e2952b156d03457ebd793
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:22:04 2020 -0700

    test reify for #70
    
    Demonstrates the issue by showing `"wrappy": "npm:undefined@^1.0.2"` is
    saved to the package.json incorrectly.

commit bcd7e35eaef95490178ce57e181004dd29554796
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:02:07 2020 -0700

    include pkg name/version in loadVirtual test snapshots
    
    Demonstrates root cause problem of #70.  The Shrinkwrap class only adds the
    'name' field for new lockfiles, but loadVirtual expects it to be there
    
    Really, it probably shouldn't be there for v2 lockfiles either, since it's
    almost always extraneous, except for alias dep types, but regardless,
    loadVirtual should work out the package name from the folder if it's not
    present.

commit 43254142a21b76d00a3bf5c2293895f1138ded92
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:16:41 2020 -0700

    test fixture with a v1 shrinkwrap

commit 6f30725b60d157d4ca42457897dc94389a50ba3c
Author: isaacs <i@izs.me>
Date:   Fri May 8 22:52:01 2020 -0700

    ideal: minor refactoring for clarity in add method

commit ed5f476e2fd497eb313f6deede6a64c6117a8bcd
Author: Matt <mtoothman@users.noreply.github.com>
Date:   Tue May 12 10:23:41 2020 -0400

    Trivial spelling correction in README
    
    PR-URL: https://github.com/npm/arborist/pull/75
    Credit: @mtoothman
    Close: #75
    Reviewed-by: @ruyadorno

commit 1570bea52039b71d152758fac9356b5e793a4650
Author: isaacs <i@izs.me>
Date:   Tue May 12 18:35:04 2020 -0700

    update pacote to pull in fixed minipass/nrf/mfh

commit 36f3da4cc198dd3dc9d0a3a306a95f3c18011c30
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:42:40 2020 -0700

    edge: add convenience getters for edge types/errors

commit f5394a79a99819c189b9e07f5c2fff07d27b9ddc
Author: isaacs <i@izs.me>
Date:   Fri May 8 18:28:21 2020 -0700

    prefer package-lock.json over yarn.lock

commit 8c6ef38fc159dacfeb74a6a6f6b05a35690310d4
Author: isaacs <i@izs.me>
Date:   Mon May 4 23:36:47 2020 -0700

    0.0.0-pre.19

commit 26463fd5318e815552e3920a6efe8d72ef92a441
Author: isaacs <i@izs.me>
Date:   Mon May 4 23:35:22 2020 -0700

    Respect yarn.lock file when generating tree
    
    We were already using it as a source of information.  However, if a
    package-lock.json file is not present, then we should *also* use it as a
    lock file, at least insofar as it can pretend to be one.

commit 0b09179a7d168b3cb1f645ee60baf2f60a12f82c
Author: isaacs <i@izs.me>
Date:   Mon May 4 22:18:30 2020 -0700

    tracker: be more lenient
    
    There are cases when doing an 'audit fix' with a lot of outdated deps,
    where a node might be scheduled for processing, but then be removed
    prior to getting to it in the queue, without putting another node in
    that node.location.  As a result, in normal operations, the
    node.location is not as permanent or deterministic as we might hope,
    resulting in a lot of spurious throws for unfinished trackers and
    nonexistent subtrackers.
    
    We really need to re-evaluate how this is being done.  It's not the best
    user experience, since the ideal tree building process is not
    predictable or linear enough to lend itself to a progressbar display.
    In the meantime, at least we can stop it from throwing.

commit 4c438e07a41f3947d5aa8c73ef8038343a62bffa
Author: isaacs <i@izs.me>
Date:   Mon May 4 21:24:02 2020 -0700

    Do not use --before option when looking for audit fixes
    
    Otherwise, we end up getting ETARGET errors, because the version
    depended on likely does not exist with the time specified.
    
    Also, whatever errors we DO get from pickManifest when looking for
    vulnerability fixes, we should just treat as a reason to avoid that
    version, since it may well not be installable anyway.

commit f0c9f9f04e4e1559df1c37418e191d80cb5b1593
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:35:32 2020 -0700

    0.0.0-pre.18

commit 09614f6789c38a8f2dbb9ba6ef27d98b248f8674
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:33:48 2020 -0700

    update pacote/npm-registry-fetch deps

commit a3886306ffb80828e595b3b54906823eb5d72c04
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:29:19 2020 -0700

    remove spurious return statement

commit 2f412ca7724f2d2ca6b131c331d4688227701ef1
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:29:06 2020 -0700

    do not attempt to audit-fix bundleDependencies

commit b8f4b9c906338285886d9fd31d06ea28f6127ff2
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:27:31 2020 -0700

    update yarn.lock when reifying

commit 1b7d9b9f56e2ac2e9aabaa4d6e9ee4bf301dc49c
Author: isaacs <i@izs.me>
Date:   Mon May 4 11:32:46 2020 -0700

    Correct root tracker name in buildIdealTree

commit 3821b5e1274b3d9084f0dc809fe8fa1635e17681
Author: isaacs <i@izs.me>
Date:   Mon May 4 00:22:19 2020 -0700

    node: give the getBundler() method param a default value

commit 596f4b9f03b9c46375f406c935b0aa1a9c7b0d1e
Author: isaacs <i@izs.me>
Date:   Fri May 1 16:14:44 2020 -0700

    0.0.0-pre.17

commit c8d208fa1677620c84ba5467204873b0d7c83983
Author: isaacs <i@izs.me>
Date:   Fri May 1 16:13:41 2020 -0700

    update deps

commit 09cc51558a93c15bc885e3084d6941dca05ca41b
Author: isaacs <i@izs.me>
Date:   Fri May 1 16:12:18 2020 -0700

    0.0.0-pre.16

commit 6965aeaaddda7941c1f88a4f838f3295c8f407b4
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri May 1 11:00:03 2020 -0400

    chore: cleaning up
    
    Leftover from the initial implementation of workspaces.

commit d9d99cd33a12a669e06dc2abacdca2814fbb0662
Author: isaacs <i@izs.me>
Date:   Fri May 1 00:19:38 2020 -0700

    Fix case where dep vuln also has an advisory
    
    This preserves the information that was previously being thrown aside,
    where a node that is vulnerable by virtue of having a dependency on a
    vulnerable module *also* has an advisory posted against it.
    
    Prior to this commit, the dep vuln would be lost.
    
    Also, more importantly, the calculation for upgrading severity was
    completely backwards, which could result in vulnerabilities being
    reported at a lower level then they should have been in these cases.

commit f024962f7076a9c592631b62ec9eadb264f974a0
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 21 22:58:21 2020 -0500

    feat: npm workspaces
    
    Introduces support to workspaces; adding ability to build an ideal tree
    that links defined workspaces, storing and reading lockfiles that
    contains workspaces info and also reifying installation trees properly
    symlinking nested workspaces into place.
    
    Handling of the config definitions is done via @npmcli/map-workspaces
    module added.
    
    refs:
    
    - https://github.com/npm/rfcs/blob/ea2d3024e6e149cd8c6366ed18373c9a566b1124/accepted/0026-workspaces.md
    - https://www.npmjs.com/package/@npmcli/map-workspaces
    - https://github.com/npm/rfcs/pull/103
    
    PR-URL: https://github.com/npm/arborist/pull/50
    Credit: @ruyadorno
    Close: #50
    Reviewed-by: @isaacs

commit d367a702ac1dd0396945362f785d6620dbbb78ac
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Apr 29 13:38:34 2020 -0400

    test: build-ideal-tree registry refs
    
    Some build-ideal-tree tests were pointing to actual registry due to
    missing setting the registry option pointing to the local fixtures.
    
    PR-URL: https://github.com/npm/arborist/pull/65
    Credit: @ruyadorno
    Close: #65
    Reviewed-by: @isaacs

commit 1537f4bea4723601de82282decd94ccc59064a43
Author: isaacs <i@izs.me>
Date:   Wed Apr 29 11:14:44 2020 -0700

    more auditing tests

commit 123314396fa08a7367f72190f5528b25ab3bec0c
Author: isaacs <i@izs.me>
Date:   Tue Apr 28 17:31:29 2020 -0700

    audit: include count of vulnerabilities
    
    Otherwise I have to tally it up in a bunch of places in npm-audit-report v2

commit 2b0acbeb038d0e7c74273c125a773664bed299e1
Author: isaacs <i@izs.me>
Date:   Tue Apr 28 17:29:37 2020 -0700

    audit: include auditReportVersion:2 in serialized object

commit 8d7d3f88439d0f01e86e189e75fbadadb7b2bf15
Author: isaacs <i@izs.me>
Date:   Mon Apr 27 17:36:53 2020 -0700

    0.0.0-pre.15

commit e81deb0e4c3e3b5bfcb8db818afb5f07c1772e8c
Author: isaacs <i@izs.me>
Date:   Mon Apr 27 17:35:59 2020 -0700

    update pacote dep

commit 29ded541c4b5d0a9daea5d5926e90a6d09d06e77
Author: isaacs <i@izs.me>
Date:   Fri Apr 24 16:50:41 2020 -0700

    Produce JSON-friendly format for AdvisoryReport
    
    This adds a toJSON method on the AdvisoryReport class, so that it can be
    passed to npm-audit-report, without that module having to know about
    Arborist's internals.
    
    This also moves the 'fixAvailable' calculation into the AdvisoryReport
    class rather than buildIdealTree, since it's relevant to the report that
    we output for the user, and thus needs to be in the pojo result.
    
    Also, remove some tap snapshot files for tests that were removed (in
    some cases, quite a while ago!)
    
    PR-URL: https://github.com/npm/arborist/pull/59
    Credit: @isaacs
    Close: #59
    Fix: #54
    Reviewed-by: @ruyadorno

commit aef496fa363cc92286dd5933d253b1e802f20ec4
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:34:28 2020 -0700

    no need to run tests twice on macOS node 14.x

commit d283c12140ab7f339a0120198d1c42e7ba5dcfec
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:29:45 2020 -0700

    remove test timeout in CI

commit 22e368c59f108729d97ca18c0d5c696a1487eb64
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:28:31 2020 -0700

    force pretty tap output in CI output

commit 14a8567a122229100d6c3c6b90c2501d9356fd87
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:23:07 2020 -0700

    s/travis/github actions/

commit d68051c2162fc88e5beebb1afb8792e92f0d7342
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 10:55:09 2020 -0700

    test: increase artificial load timout
    
    The loadActual test fails its coverage limit pretty frequently on CI
    because 10ms is still not enough for the actual node to take longer than
    the link node.

commit c591e1278d2b75ad33a6dcf30726eeec9663b2b7
Author: isaacs <i@izs.me>
Date:   Wed Apr 22 19:03:20 2020 -0700

    Tests for buildIdealTree's audit behavior
    
    This also adds the functionality of having loadVirtual attempt to read
    the package.json file for link targets found in legacy shrinkwraps,
    because otherwise their dependencies were never being loaded.  This
    means that the recheckEngineAndPlatform in Arborist.reify() is no longer
    necessary for link targets, but we still have to do that for
    non-link-target nodes, since it also does not set bin/engines/os/cpu
    fields.

commit 139f4931a1d1fa75a3d3d72d6cf12facd7d249c5
Author: isaacs <i@izs.me>
Date:   Tue Apr 21 23:23:57 2020 -0700

    Arborist.audit() with fix support
    
    Still lacking proper unit tests for buildIdealTree.  That is only
    exercised at the moment by Arborist.audit({fix: true}), through the
    reify call.
    
    It would be good to stash the ranges to be avoided somewhere, either in
    the lockfile or in a separate file, so that we can support the case
    where someone runs `npm audit` followed immediately by `npm install`,
    without giving them things that we ought to know are no good.

commit 5ce2454b629c8f22001f28eef354e1bb406b707b
Author: isaacs <i@izs.me>
Date:   Tue Apr 21 22:36:13 2020 -0700

    loadVirtual: do not throw if shrinkwrap is empty

commit 4c973cfebcc31794f5ab6863197f22bbedb524f2
Author: isaacs <i@izs.me>
Date:   Tue Apr 21 22:32:21 2020 -0700

    Add AuditReport class, tests, fixtures

commit e409cf3500fdfeb091530f4d5bf5ea471744b9e6
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 21:50:25 2020 -0700

    Vuln class initial implementation

commit 815a37b07a52f0e5ae6496b62d6e4c676d33a0b3
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 21:19:26 2020 -0700

    only ignore random .js files in root, not everywhere

commit 35b412da6645caa3553b0850f3bd0aa4a231903d
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 21:18:33 2020 -0700

    log audit endpoint errors

commit 6424563b164545288c87dd5c9a19a394fc4cac72
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:45:16 2020 -0700

    add npm-pick-manifest, update deps

commit 4bfe480f27a11e135401117ac822688fcae292d8
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 23:49:03 2020 -0700

    reify: do quick audits
    
    If `audit:false` in the options, or if the submission fails for any
    reason, then `arb.audit` will be set to false.  Otherwise, `arb.audit`
    will be set to the quick audit response object that comes back from the
    server.

commit 0bfc66175229cb9c064ecf1108960ed92086abf6
Author: isaacs <i@izs.me>
Date:   Wed Apr 22 00:46:57 2020 -0700

    get fsChildren/bins properly from legacy lockfiles
    
    Fix #63

commit fa2c2b333613f4fdbe612210b8e49bc40597c3b2
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Apr 21 22:32:28 2020 -0400

    test: asymmetrical bin across versions repro
    
    Added a test that reproduces a problem when installing transitive deps
    that contains multiple versions in which its `bin` package.json
    declaration is not symmetrical across deduped versions.
    
    When a lockfile v1 is available the installation will fail to produce
    `node_modules/.bin` symlinks. A similar install setup but with an absent
    lockfile will yield a functioning bin folder.
    
    PR-URL: https://github.com/npm/arborist/pull/63
    Credit: @ruyadorno
    Close: #63
    Reviewed-by: @isaacs

commit 626d54743c4435bfd77bf17139a76bd34dd8a0bc
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Apr 17 21:14:36 2020 -0400

    test: fix corgi metadata update

commit 9877247dabaa62f1a9569b2f9361b22e1301bc31
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:46:59 2020 -0700

    remove noisy extraneous output from fixtures/index.js

commit ca8c657e2783aef8466fa6de609445af348b447d
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Apr 16 17:27:15 2020 -0400

    feat: add legacyPeerDeps option
    
    Adds an option to allow install trees that ignore peer dependencies.
    Similar to the way we handled them in npm@6.
    
    PR-URL: https://github.com/npm/arborist/pull/62
    Credit: @ruyadorno
    Close: #62
    Reviewed-by: @isaacs

commit 50d9b377b91175347c596fc52cdab0b171839454
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:28:05 2020 -0700

    fixture doc: add note about not creating symlinks manually

commit 4259f96292e87f6a31b05f724148ca074efcfbd0
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:24:02 2020 -0700

    update deps to make npm audit happy

commit b852072bfb00c73ac22b14cd21019d26f42cfb83
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:21:58 2020 -0700

    Add documentation to the test fixtures

commit db683d5a2ac962c7057ee5cc8b021d7f961b99b9
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:21:21 2020 -0700

    save corgis when fetching lock contents to mock registry

commit bca05017426b3be790d65ed0e804ac36fd093f0e
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:21:03 2020 -0700

    automatically update .gitignore with test fixture symlinks

commit 01275261cf40a4605907d90d4f5d4068e16c2f30
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Apr 16 18:44:52 2020 -0400

    test: fix tests
    
    - Fixed broken deprecated warning test
    - Added missing refs to local registry in tests
    - Added package contents required by these local tests
    
    PR-URL: https://github.com/npm/arborist/pull/61
    Credit: @ruyadorno
    Close: #61
    Reviewed-by: @isaacs

commit 696c2f2b8eca76a0d75bee96a824a8ef13876342
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 16:34:44 2020 -0700

    track timing via process time/timeEnd events
    
    Emit a 'time' event for various things, and then a timeEnd event when that
    thing is completed.  This is picked up by the CLI in its logger when the
    loglevel is set to 'timing', but can also be consumed by any module using
    arborist in a generic way.
    
    Close #55

commit ac5c9f462fbc3b71ecd252ed7b322f4ba4a0c61e
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 23:51:30 2020 -0700

    Do not push bundled deps into list unnecessarily
    
    If the parent already contains a bundled dep, then don't push it into
    the list again.  Otherwise this leads to a case where the bundled dep
    gets absurdly long if we load from a v2 lockfile where this is tracked
    explicitly.

commit 4595f2c3c42617cc1c00f1369952ee6364ac8ca9
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 23:34:29 2020 -0700

    Correct logic to leave bundled deps untouched
    
    This was a really interesting bug to track down.
    
    Basically the bug comes down to a way that arborist tracks bundled deps.
    The getter `Node.isBundled` calls `Node.getBundler()`, which tries to
    figure out which node is bundling this one, if any.  This uses the
    following algorithm:
    
    - if there's no parent node, it's definitely not bundled
    - if the parent node is bundled, then the bundler is the parent's
      bundler.  (if you bundle `a`, you also bundle `a/node_modules/b`)
    - if the parent package has a `bundleDependencies` list, and the node's
      name is on the list, then it's bundled, and the parent is the bundler
    - if any of the edgesIn referencing this node are bundled, and _their_
      bundler is the node's parent, then that is the bundler of this node as
      well.
    
    The downside of this algorithm is that the 4th step of checking the
    edges can potentially be slow (like, _O(n!)_ slow) but since it can only
    ever end up traversing the edges within a given set of deps at a single
    level of the tree, n is always very small.  even absurd bundled dep
    lists still only have a few dozen to a hundred or so bundled deps, and
    it'd only get pathological if you had one bundled dep with a long chain
    of dependencies hanging off of it, all of which also depended on one
    another (but were not explicitly bundled).
    
    The benefit is that if we remove the thing that is triggering the
    bundling, everything else that it was pulling in automatically stops
    being marked as a bundled dep, without having to re-evaluate _bundling_
    every time we mutate the tree (at the cost of having to evaluate the
    bundling triggered by edges every time we check if one of these
    meta-deps is bundled, but as established, this is not very expensive).
    
    That's all fine and good, _until_...
    
    There's a shortcut in the diff calculation that basically says, if a
    node is unchanged, and it has bundled children, then we want to mark all
    the children as unchanging as well.  A Diff object has `actual` and
    `ideal` node references, but the `ideal` wont' know about the unlisted
    metadeps in the bundle until it actually unpacks.  So, the hacky kludge
    is, let's just move all the bundled `actual` nodes over to be
    re-parented on the ideal node.  This would modify the `actual` tree, of
    course, but since we don't bother to actually unpack anything that's a
    bundled child of an unchanging node, it doesn't matter.
    
    However, I was doing it like this:
    
    ```js
    for (const [name, node] of actual.children.entries()) {
      if (node.inBundle)
        node.parent = ideal
    }
    ```
    
    Which means, if a metadep is bundled, but comes _after_ the primarily
    bundled dep in the `children.entries()` list, then first we'll move over
    the direct dep, _and then_ hit the metadep.  At which point, it says
    "nope, not in the bundle".
    
    Since the ideal tree doesn't contain that metadep (since it didn't
    resolve the bundled deps), and will never resolve that metadep (since it
    doesn't traverse bundled children, as their deps should already be in
    the bundle), the resulting diff will show that there is a node in the
    actual tree that _isn't_ found in the ideal tree, _and delete the
    metadep!_
    
    Solved by making the hack loop work like this:
    
    ```js
    const bundledChildren = []
    for (const [name, node] of actual.children.entries()) {
      if (node.inBundle)
        node.parent = ideal
    }
    for (const node of bundledChildren) {
      node.parent = ideal
    }
    ```
    
    Turns out I already had a test for this, and once I realized wtf was
    going on, lo and behold, the `tap-snapshots/test-diff.js-TAP.test.js`
    file shows that it's dutifully deleting the
    `bundler/node_modules/metabundled` node.  Now that it's fixed, it'll
    show up as a snapshot error if we break it again.

commit d677dac9b4add821fb958404793cbfacc17a6c97
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 11:57:52 2020 -0700

    0.0.0-pre.14

commit cd010a06700f040aed5afc46111475410de6754c
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 11:06:53 2020 -0700

    Clean up log usage in reify

commit e13a70a71586a6c61bcb77535e45e980bbb95fe9
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 10:55:15 2020 -0700

    Warn when reifying deprecated dependencies

commit 7107070c93bff8101ebfe6f35617b857f55e3c43
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 17:13:50 2020 -0700

    Add Shrinkwrap.reset() method for loading fresh
    
    This avoids the inefficient kludge in buildIdealTree where it loads the shrinkwrap
    but then throws it away when doing update:{all: true}

commit 22c05c399de16d776e3dd17d29062928d80ba4e2
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 16:34:23 2020 -0700

    abstract name-from-folder to standalone module

commit 90ae8493340f32020d20e480fbeb1a5db687a564
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 16:22:02 2020 -0700

    defensive code for strangely broken lockfile issue
    
    Honestly still not exactly sure how this happened.  I was switching back
    and forth between installing and removing a variety of things with npm
    v6 and v7, and somehow ended up in a case where it was trying to fetch a
    dep that somehow did not have a resolved value.
    
    My best guess is that it has something to do with the fact that mkdirp
    and minimist are bundled in tap 14, but not in tap 12, and npm v6 isn't
    as aggressive about re-optimizing the tree for nested deps, but arborist
    did pluck off the  when setting back to tap 12.
    
    Anyway, saved as a test case so we can verify that the defensive
    handling of this brokenness works as intended.
    
    Arborist will now do its best to resolve based on the version, if
    available, and if not, then it will just remove the node from the tree
    entirely, so at least we're not leaving busted litter lying around.

commit ff1612d2420c468a6c7fb9a4013116e0dc607a8b
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 16:05:14 2020 -0700

    Update scripts for new add argument shape

commit 21a2a533f5af7b225c0721c1e1739816506cc670
Author: isaacs <i@izs.me>
Date:   Thu Mar 19 20:58:06 2020 -0700

    0.0.0-pre.13

commit 2ddaf8aa3d7dd16d13850f9eb94cbdb8fd17226e
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 19 01:12:13 2020 -0400

    fix: do not crash writing to hidden lockfile
    
    If there are no dependencies, then the node_modules folder may be
    missing, meaning that the hidden lockfile will fail to write.
    
    Also, a hidden lockfile is a best-effort performance boost anyway, so we
    should just ignore failures to write it.
    
    PR-URL: https://github.com/npm/arborist/pull/53
    Credit: @mikemimik
    Close: #53
    Reviewed-by: @isaacs
    
    EDIT(@isaacs): Updated to ignore errors and remove the file, rather than
    creating the node_modules folder on any ENOENT from the write.

commit 926165cdf14e488b4dbee7abf08e3726a97535b3
Author: Michael Perrotte <mike@npmjs.com>
Date:   Tue Mar 17 21:18:29 2020 -0400

    0.0.0-pre.12

commit ef12880eba66eed2a025f15e2620ed1d9c039639
Author: Michael Perrotte <mike@npmjs.com>
Date:   Mon Mar 16 14:55:41 2020 -0400

    fix: address pull-request feedback
    
    - removed addition of explicit 'save' option value default
    - added type equality check to exposed to property

commit b2262b1b204b65f7f6fcca87fbe3ab2a8aeca006
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 12 23:29:27 2020 -0400

    fix: exposed explicitRequests set

commit 2f59324fa2c3b080586429cfcd59cd48ee447de3
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 12 14:58:15 2020 -0400

    fix: added explicit default to options.save property

commit c1631e6f5477ac1d529c0efb9d587a77ad5f9b57
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 12 13:42:22 2020 -0400

    feat: expose diff property on arborist instance

commit 332c64eaffaeb35eb42310004471c6843f8807b7
Author: isaacs <i@izs.me>
Date:   Sun Mar 8 14:44:41 2020 -0700

    push to git before publishing to npm

commit 4e103f4ab85a513c1f201ad9fb843382e089166d
Author: isaacs <i@izs.me>
Date:   Tue Mar 3 13:22:09 2020 -0800

    license: update owner, clarify provenance of registry mock fixtures

commit b6984de44cd4a9d3043da63a6e96e55088a39ad3
Author: isaacs <i@izs.me>
Date:   Tue Feb 25 21:17:34 2020 -0800

    0.0.0-pre.11

commit b3a311eae221802e6c55ee485abd9a0eff3fbb47
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 21:00:33 2020 -0800

    pacote@11.1.0
    
    No longer sending 'Referer: undefined' on registry requests.

commit af5315e296b29efe4091aabb3e1deb3b553f7299
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 17:49:16 2020 -0800

    perf: don't reload edges for non-dep node.package updates
    
    Considering that maybe that Node.package setter is more of a footgun
    than it's worth.  It's nice to know that the deps will always be kept
    up to date, but throwing away and reloading edges just because you
    pulled in something tangential feels like it's bad-clever.

commit 640527939d734c0550aa9f648d4254b27dc591f4
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 17:34:30 2020 -0800

    further simplify adding new deps to the root
    
    The previous revision of the buildIdealTree/reify `add` option converted
    the package.json-esque data structure into instead passing a list of
    specs for each location in the package, since the name couldn't be known
    100% of the time up front.
    
    However, that still puts too much of the burden of placing deps onto the
    caller.
    
    When you run `npm install foo`, if `foo` is already a devDependency,
    then the updated save spec gets added there, unless specified otherwise.
    Since we aren't guaranteed to know the _name_ of the dep until we've
    resolved it, how is the caller (ie, the npm CLI) supposed to know where
    to put it in the objecet?
    
    At the expense of a slight amount of flexibility, this changes things
    further so that the `add` option mirrors exactly the positional
    arguments passed to the `npm install` command: it's just a list of
    specs, that's it.
    
    Two more options were added:
    
    - saveType
    - saveBundle
    
    If the saveType is not set, then added deps are added wherever they
    already exist, or to `dependencies` if they're not already present.
    Otherwise, it should be set to one of the edge type values:
    
    - 'prod'
    - 'dev'
    - 'optional'
    - 'peer'
    - 'peerOptional'
    
    If `saveBundle` is true, then newly added deps are added to the
    `bundleDependencies` list as well.

commit 3457ac0cf2627515ca5e9bcaf9fbb96f7ddf3340
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 17:18:46 2020 -0800

    add a utility for updating a dep spec in a manifest

commit 67df4e7d9cc3e0ebd99a02401f40502972187a0f
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 20:53:52 2020 -0800

    Respect binLinks:false option to reify()

commit 64cdfcd867e832d6c87a06e98eb3174bcb9979c8
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:21:47 2020 -0800

    Remove unused legacy-location-to-relpath module

commit 157a4ee176d5e01e8ba1e2bb1d289683ff733fb6
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:20:49 2020 -0800

    0.0.0-pre.10

commit e8a03c07a02d42b54e89b6170a936374e1c15496
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:19:51 2020 -0800

    Add global reification support
    
    Note that it only allows add/rm in the global space -- there's no way to
    reify from a shrinkwrap or update all the deps, etc., because there is
    not typically any 'dependencies' in the global space, so it does a
    filtered loadActual to create the diff.

commit fb7d67a7f043f4c60d3ae8786f509eea8666d8b0
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:12:09 2020 -0800

    test fixture for global installs

commit fed587e86c4e7a5e832f5c00a05e6d3aa55c7c46
Author: isaacs <i@izs.me>
Date:   Thu Feb 20 21:20:59 2020 -0800

    update reify and ideal scripts for new add/rm API surface

commit 23dad7290e21eb4ba426d5f0b424d35b77029b6d
Author: isaacs <i@izs.me>
Date:   Wed Feb 19 16:43:15 2020 -0800

    0.0.0-pre.9

commit 485c6827902f04f9eaca9167171bb8c23708ef15
Author: isaacs <i@izs.me>
Date:   Wed Feb 19 16:10:14 2020 -0800

    update bin-links to published v2

commit bc8d799d5ac3faa1fdb323dbda2f731ff6fc5d11
Author: Michael Perrotte <mike@npmjs.com>
Date:   Tue Feb 18 19:11:25 2020 -0500

    0.0.0-pre.8

commit a248e4e89cc026065ba3c7522f9da3903dab742f
Author: Michael Perrotte <mike@npmjs.com>
Date:   Tue Feb 18 19:06:24 2020 -0500

    feat: updated build-ideal-tree; add support for unnamed specs

commit 34d6bb9d64e2b3954f5170e00c711c2dbc7af90a
Author: isaacs <i@izs.me>
Date:   Mon Feb 17 20:30:36 2020 -0800

    doc: use js instead of javascript for syntax hiliting

commit 19c56c51c6130aed44bfd6b8c74dc804046a5d52
Author: isaacs <i@izs.me>
Date:   Mon Feb 17 18:22:22 2020 -0800

    0.0.0-pre.7

commit ffb9f2695a4ade54f67f4683f16c26a9b368995a
Author: isaacs <i@izs.me>
Date:   Mon Feb 17 18:21:24 2020 -0800

    Update pacote, no longer any trace of figgy-pudding

commit 8f2d7a03dd79ac93a38a7bec44f4bb4ea8b4c388
Author: isaacs <i@izs.me>
Date:   Mon Feb 10 15:49:02 2020 -0800

    0.0.0-pre.6

commit bce9602199c40786da240c825949b7f48baae8dd
Author: isaacs <i@izs.me>
Date:   Mon Feb 10 14:23:58 2020 -0800

    Include fsChildren in diff so link targets can be reified
    
    Fixes bug found in workspace exploration discussion with @ruyadorno.

commit 4883b2eff514646360eda3c77208818305004115
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 17:43:21 2020 -0800

    stop including vim swap files in published package

commit 7825375722791dcc921eecbb6f2f345d554d6aa4
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 17:42:44 2020 -0800

    0.0.0-pre.5

commit 8acb411811a708903000c4968f12ea96a17ff121
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 17:41:23 2020 -0800

    Add flags for omitting peer/dev/optional in reify()

commit 9040fdfb97321b2d4181d96cc0d5b3f7671290b5
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 15:56:54 2020 -0800

    Add a 'peer' flag to Node object and shrinkwrap
    
    This will be relevant when we add an option to omit peer deps in
    Arborist.reify().

commit 698edda3348f722b8471e06a081336fd2445f07d
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 14:44:42 2020 -0800

    remove duplicative and extraneous readmes and license text from fixtures

commit dc1c7055e93e5325f1b46f8a8d3795d61a4d4bf5
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 14:44:16 2020 -0800

    lightly refactor this.options.follow to this[_follow]

commit 705578db834a48be171bb974e5a0128aa7133398
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 21:50:33 2020 -0800

    Support acceptDependencies object in package.json
    
    This treats any dep ranges in the acceptDependencies field as an
    acceptable alternative for any dependency range specified elsewhere in
    the package manifest.
    
    Implementation of https://github.com/npm/rfcs/pull/72

commit 54656939171d448978d3a4d6350acecffcff1ebe
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 12:00:18 2020 -0800

    Add follow:true flag for reifying deps in external link targets

commit b305e523145819b468ac4fa6ead49170bf7c721c
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:55:36 2020 -0800

    0.0.0-pre.4

commit 758b5cf2f89d003d670e374661ea49264f46651c
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:54:42 2020 -0800

    test for non-string edge.spec error

commit a814ec52a2b3730e769296f4c55519bed8f5264f
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:52:29 2020 -0800

    update optional dep notes

commit 0cad0f037db4e84b62af7c5b8aa65759addb9220
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:51:24 2020 -0800

    update semver and npm-install-checks deps

commit af45b2544931068d472937e7474930778aab1fbe
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:50:02 2020 -0800

    Support arbitrary config flags to reify.js script

commit 747217c57dc621879ee9dc27e1f54df585eb1573
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:49:46 2020 -0800

    Add --save-hidden option to actual.js script

commit b6b6bd1340a7473cb63b2d74d1b0963e0a626db3
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:47:37 2020 -0800

    perf: pre-fetch and inflight pacote.manifest calls
    
    It's not uncommon for an ideal tree to contain many identical requests
    to load a common dependency, like `react@^16.12.0`.
    
    By caching, pre-fetching, and inflighting these, it cuts the ideal tree
    build time roughly in half for a medium sized react-based web project
    (of 2200 deps or so).

commit 373d71fd189a604984f0a4f81cc98a9b67ecc764
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:46:05 2020 -0800

    Call mkdirp when necessary to move a file during reification

commit f4a4e22918fce86f7a06a2eb78132ccc4e253e37
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:45:45 2020 -0800

    Write hidden lockfile after reification

commit 4b5a22de1aab920ab82cc884eaf38d00402fdb4b
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 18:41:32 2020 -0800

    edge: assert that spec is a string

commit ab55e0feb788b39fd9c43f63c9e901f07cecee4a
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 18:41:07 2020 -0800

    loadActual from a hidden lockfile if present

commit 6aad989496f0d47e785f64e156ddfc44b362d1c9
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 17:05:41 2020 -0800

    shrinkwrap: add support for a hidden lockfile
    
    The hidden lockfile is a .package-lock.json file living inside
    the node_modules folder.  It does not include a dependencies field,
    because it's only used by Arborist, not npm v6.

commit eb03ee94c0ef9c230594277d4b575df0876ff6bb
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 18:55:52 2020 -0800

    Filter fsevents out of snapshots so Travis doesn't fail
    
    The reify() method now returns the *actual* actualTree, so even though
    engine-mismatching optional deps remain in the package-lock, they're not
    being passed in the resolved tree.
    
    Filter the offending darwin-only module out of the snapshots so that Travis
    (which is Linux) doesn't fail tests.  In that case, just manually verify that
    fsevents is actually in the package-lock, even though it isn't in the snapshot.

commit 3072abf838a5e1f0d9dd762d55849947d00ea739
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 18:32:04 2020 -0800

    Set resolved property properly on Link nodes
    
    Should be the relative path from the link's containing folder, not from
    the link path itself.  Ie, it should be the actual argument passed to
    fs.symlink() if one were to try to reify the Link node.
    
    This changes a lot of snapshots, but the only one that's really relevant
    is the handling in the YarnLock class, since all the other instances of
    using consistentResolve to re-relativize a path were handling Link nodes
    specially anyway (eg, in reify, shrinkwrap, etc.)

commit ec3884b175178783e5f4e7ab8e5b1bf74150d99c
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 18:12:14 2020 -0800

    Handle link deps properly in ideal/virtual/reify
    
    Fix: #43
    
    This fixes the bug identified by https://github.com/npm/cli/issues/750
    
    Link deps that point to a location underneath the root package are fully
    resolved and reified.  Links external to the root path are left alone,
    because they exist in a different project and presumably have their own
    dep resolution being done separately.

commit fc1382d13c2eac6e1c3c2158fc3ffdfd1101a9a5
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 17:58:25 2020 -0800

    Tests for link metadeps, external links, internal links

commit dcd582ba9b57736b8d712f7a7f1709f47d7b02de
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 16:28:46 2020 -0800

    prune trashed optional deps from reified actual tree before returning, but after saving

commit 7a650ee207578de1376711b480a303434d3a8772
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 15:53:55 2020 -0800

    0.0.0-pre.3

commit 78f95d13cc315431e348d63f5d72709bce206984
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 15:35:33 2020 -0800

    Use the specified ideal/virtual/actual tree if provided
    
    Close #34

commit a9d380bb5b7fe0b0a1773b4a029c8e86da9a9970
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 14:57:00 2020 -0800

    Properly restrict/warn based on engines, os, cpu fields

commit 1eb6f3e6f7f6976d4ac22ab959d5e7e898e47898
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 14:49:10 2020 -0800

    test: add to registry mocks by running in proxy mode
    
    This enables the mock registry server to save new fixtures when running
    in prox mode, where it fetches from the real registry, and saves the
    tarball, json, and minified json, as appropriate.

commit d0d2bccbc63ce6c898b5f5a23a8f3dcbd553cbf6
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 16:00:10 2020 -0800

    update all deps

commit 2d6aafbd32ac9522bda618abff3af344806cade3
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 15:56:32 2020 -0800

    track hasInstallScript in lockfile

commit 1e5ac3047845e27a9f421c8b05e33080053cf4e4
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 15:54:30 2020 -0800

    node: add getter for hasInstallScript

commit 11a4a13854280a3e71783702c7628ac6fb8757c7
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 09:54:25 2020 -0800

    Include engines, os, and cpu in lockfile metadata

commit 0015c68af58e24af3f7d72018cccb597c32124f3
Author: isaacs <i@izs.me>
Date:   Wed Jan 29 17:29:50 2020 -0800

    run scripts and check engines
    
    Handle failures from these if the node doing the running or checking is
    an optional dep.

commit f19b47a4d4ab1a8fb674a2adf1dbe97566cbe309
Author: isaacs <i@izs.me>
Date:   Tue Jan 28 15:51:16 2020 -0800

    fixtures for testing reifying with lifecycle scripts and optional deps

commit 6befe89b6aada54124caec0e1a7aeef43088a204
Author: isaacs <i@izs.me>
Date:   Tue Jan 28 15:50:01 2020 -0800

    dep updates for running scripts and linking bins

commit 7aa071b8845d4a7720ec817c249dd27a8c0dc70d
Author: isaacs <i@izs.me>
Date:   Mon Jan 27 15:22:15 2020 -0800

    Update to bin-links v2 and mkdirp-infer-owner

commit 8912a2d9dd34bf0e9c041583c05c50c4fe11e073
Author: isaacs <i@izs.me>
Date:   Mon Jan 20 23:15:03 2020 -0800

    Retire and clean-up bins along with package paths
    
    Fix #36

commit b7ce867333bb75a1c34341a3bceaa566c0cc3be8
Author: isaacs <i@izs.me>
Date:   Mon Jan 20 22:30:09 2020 -0800

    node: add getter for package bin paths

commit 7f00d72fb2387288834c0f6d855d46ea0c52c433
Author: isaacs <i@izs.me>
Date:   Mon Jan 20 22:02:56 2020 -0800

    reify: handle optional dep failures
    
    Fix #29

commit a73d2d3f4cafec3b8ec681b734b7ab199afbf74e
Author: isaacs <i@izs.me>
Date:   Sun Jan 19 21:55:53 2020 -0800

    diff: bubble up all removed paths to save a walk later
    
    First part of fix for #29

commit 57d3f9242d004e0cbef642bfcdedce5c45071bf6
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 14:11:05 2020 -0800

    handle optional dep failures in buildIdealTree

commit d976c1ab5a1b82d021387b372a1e9aac88bea09c
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 14:09:20 2020 -0800

    fixtures to test various optional dep/metadep failure cases

commit c3d0bf124baf956a826bb4b1fd43ae0baef7c478
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 12:58:45 2020 -0800

    notes on handling optional dep failures

commit d1f510efaaaa2e9c58613203879279765c363efc
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 10:11:05 2020 -0800

    Include optionalDeps in ideal tree

commit 3f805395d28d90b54220c4062fd911e0214a89a7
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 10:10:03 2020 -0800

    refactor buildIdealTree to use gatherDepSet

commit c9bfbf9d01b52136b75d27995060dca3d39fa5d4
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 09:57:34 2020 -0800

    function to gather all deps making up an optional section of the tree

commit 96f481ccf6893737b1935752ff014a8186194b87
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 09:31:40 2020 -0800

    A function to gather a set of dependencies making up a branch of the tree

commit c8d267248b60fb1f9a6e97e7269bb7d052b1f76d
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 15:08:28 2020 -0800

    Update binLinks, clean up reify test and procLog

commit 1259a0b95cb3958dd7dedb11da9974f37027b3a5
Author: claudiahdz <cghr1990@gmail.com>
Date:   Sat Jan 25 01:39:21 2020 -0600

    feat: add tests for tracker class

commit 9dc0758894a2eea84cd5ec0e17acf92718f3b07e
Author: claudiahdz <cghr1990@gmail.com>
Date:   Thu Jan 23 17:30:28 2020 -0600

    feat: add tracker blocks for dependency queue on Arborist.reify

commit cd6f2499826cefc1eeffad5eef3486dab7c45e6b
Author: claudiahdz <cghr1990@gmail.com>
Date:   Wed Jan 15 21:18:33 2020 -0600

    feat: add tracker blocks for dependency queue on Arborist.buildIdealTree

commit ce98077586a9601223565ea281e3d88f308e2385
Author: claudiahdz <cghr1990@gmail.com>
Date:   Wed Jan 15 21:16:37 2020 -0600

    feat: add tracker class

commit 1a5f74495c50a98b903009126b75ec2e62f64c19
Author: claudiahdz <cghr1990@gmail.com>
Date:   Tue Jan 7 16:17:52 2020 -0600

    feat: add logger fallback

commit 6bc6c76b4ff156979509bc26a3c50020f69c8c0f
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:48:13 2020 -0800

    reify script: use cache folder

commit 5f263ef3dcfa131f622e3c31ef7d2c1b76059b82
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:47:28 2020 -0800

    link bins when reifying nodes
    
    Fix: https://github.com/npm/arborist/issues/27

commit 353c7eea108f984fbfed5fc914ead781a9555c64
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:46:36 2020 -0800

    reify: rimraf targets when moving if fail with EEXIST

commit e68a9cc8b578c4426cb59f0f45fe74c87e22b98b
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:44:46 2020 -0800

    add bin-links dep
    
    Note: floating a dependency on a git fork until
    https://github.com/npm/bin-links/pull/14 lands.

commit 84d56e70dd5c3c8f1234d626b518d55c7a29a679
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:43:56 2020 -0800

    load actual: ignore . dirs in scoped folders as well

commit 9e4075935c1a958956003fee3942b5e4efa8dadb
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 21:42:01 2020 -0800

    document how auth is provided

commit 802b0bc8ad5e9629b835b3557f111096ffec3d1b
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 15:25:31 2020 -0800

    reload requested additions even if they're valid

commit 0873cd20f123af2f8186505208a96e5219418bdd
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 09:07:36 2020 -0800

    reify: respect savePrefix, save=false options

commit 71f6ded4a658138a861c8ce759713fa353a1b023
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 09:03:37 2020 -0800

    refactor out an unnecessary internal prop in buildIdealTree

commit 71f3ccfefba85d2048484569dba8c1829f6f41d7
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 17:17:40 2020 -0800

    refactor to use addRm module

commit f71571b4994ed7a9621ea21aa8edc3ea1219f943
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 17:11:25 2020 -0800

    module for adding/removing to/from package manifest

commit 7e10a9a68209279746019ba20547bc6a9784c2df
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 10:30:24 2020 -0800

    update ideal tree notes

commit 67a99984e81c8901d71061933b6412c9f62c4f85
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 10:29:09 2020 -0800

    Ensure that moving a child node refreshes all edges
    
    Previously, it was only refreshing *invalid* edges, meaning that any
    previously-valid edges would be referencing nodes outside the tree when
    the parent and root were changed.  This led to some weird duplication in
    the reified actualTree, where nodes were left with edgesIn coming from
    the temporary actualTree of bundleDependencies nodes.

commit 65b839e3ab3661d9a918cd27cf0c70914c34d2f6
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 00:32:42 2020 -0800

    clean up tree snapshot on reify test

commit 491c5b0005abd27c7a02f239b6fa0a9f6b4d0587
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 00:01:04 2020 -0800

    0.0.0-pre.2

commit 37740984c4e3d1d9499f9e03fd05d72c4261f827
Author: isaacs <i@izs.me>
Date:   Wed Jan 1 23:59:54 2020 -0800

    Add link to notes folder from readme
    
    Still need to refactor the documentation and make it better overall though.

commit 16959355f45fd9e69645fc9b6ed54868d7741ac0
Author: isaacs <i@izs.me>
Date:   Wed Jan 1 16:48:16 2020 -0800

    Split Arborist class into 4 mixins
    
    This change is mostly for esthetic code management, but also it makes
    the following substantive changes visible in the API:
    
    - Internal methods and properties moved to hidden Symbol properties.
      (Some are shared symbols for testing or sharing between mixin
      classes.)  This prevents accidental clobbering, and makes it much
      clearer what is intended for external consumption.
    - legacyBundling and preferDedupe were moved to buildIdealTree/reify
      options instead of constructor options.
    
    The test coverage map was simplified, so that now the various Arborist
    method tests only test the parts that they're intended to.  (There were
    some buildIdealTree and loadVirtual code paths that were only getting
    hit by the reify test, but now it's all properly covered by what it's
    intended to be covered by.)
    
    Tests were also added for the cases where rimraf fails.  Even though
    this is unusual, it's not impossible.

commit 03e95b1b02a3dcf1f2b6fd08b9eeb4eb2e1e6a4b
Author: isaacs <i@izs.me>
Date:   Wed Jan 1 16:44:45 2020 -0800

    a script that reifies

commit 20d5b9e785b53710f59f93bd5132fc9d863e721e
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:28:13 2019 -0800

    0.0.0-pre.1

commit 651bb48d90919d793444cad9ec4bc2d45d48729d
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:27:46 2019 -0800

    hard code the logo to full url

commit 0233dbbc66e01343470bb66aeea61f625d034215
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:24:46 2019 -0800

    0.0.0-pre.0

commit 38d5b57ad776f2c998af3b38f55c78fcd0e93fe6
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:19:37 2019 -0800

    tests and bug-fixing for reify error rollbacks

commit c42b8911ab22d34ae7fab6de6a91b16827644300
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 15:44:58 2019 -0800

    Remove race in reify test
    
    npm v6 only inconsistently saves the resolved url for deps that
    are bundled.
    
    That's fine, since we don't have to fetch them anyway, but it does
    mean that the test had a race, where it would get a different
    snapshot based on whether it had loaded that node (and thus updated
    the shrinkwrap) or not.

commit 6df51547b8eb16001d48b16b359abf4d9fda09f6
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 14:18:54 2019 -0800

    remove some slow reify tests that weren't adding coverage

commit 505e32d455500a1ca2876f2951be65fb286af37b
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 13:17:59 2019 -0800

    update reify test cases, improve comment in generated fixture

commit 0b304d50f5d0eceaeb18d4ec239e36df21e35bfc
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:57:22 2019 -0800

    Initial Arborist.reify() implementation
    
    Lots of XXX istanbul ignore comments.
    
    Next step is to write tests for all the rollback behaviors.

commit 1e57ea2af68656bdf8f5e5fc43510dfe50b0d231
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:48:59 2019 -0800

    loadActual snapshot update for removing fsChildren from legacy shrinkwraps

commit 411a2647492cde5f66c2f27afbbf11a9fe3562ec
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:47:11 2019 -0800

    clean up extraneous:true from loadVirtual snapshot

commit db0a2068afe232ce6b4a685393191c7822cb75d5
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:46:08 2019 -0800

    buildIdealTree changes shaken out of reify work

commit c5b4edbd602d8539311e64a73580a958fc2911ca
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:39:23 2019 -0800

    link: clean up path/realpath handling in ctor

commit 0b1e4d3cc8315d7656fb3a2ad5edc265d748f65a
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:28:56 2019 -0800

    shrinkwrap: don't track fsChildren in legacy shrinkwrap data

commit 83d535881737d410a71f19a4da09ffe834edf923
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:27:27 2019 -0800

    diff: do not clobber fsChildren
    
    TODO: provide a deep:true argument to tell it to diff the children of
    fsChildren nodes.
    
    There's no sense in diffing these, however.  Either they're included in
    a package's contents (in which case, they'll be handled when/if the node
    is replaced or otherwise modified), or they're a separate project and
    shouldn't be modified.

commit e14ffdb0c9052f34ab0d3702a765583696e6521d
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:23:55 2019 -0800

    fixtures for Arborist.reify testing

commit f3adda2781fe86b53fa4ee88b9387e45fa4d5070
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 22:47:14 2019 -0800

    test case for updating node with unchanging children

commit cac3c7804a46fc64cbd6dba4c42fcde85a8cf38d
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 20:08:11 2019 -0800

    diff: Copy bundled deps from actual to ideal tree

commit 3e400b0d92d32a2e500af09be8e7b8c76d3fc4b0
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 10:54:14 2019 -0800

    remove a few large unused fixture files

commit 30585319329fa3257fc061ee6c87841106194b4e
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 08:33:23 2019 -0800

    correct markdown indentation for gfm

commit 01633787394a6f1fa4043560e4037c605fa957c1
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 22:29:54 2019 -0800

    notes on workspace layout options

commit a4cb41dbbe463827bddb8230f49b32b8654e7c1e
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 22:24:41 2019 -0800

    diff: walk fsChildren as well as children

commit fef8adb95cda0bff30088b859f8d3f33238d2b53
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 22:23:31 2019 -0800

    rename 'staging' to 'retired'
    
    These aren't actually 'staged', as in, nodes that we are installing, but
    rather 'retired', as in, nodes that are moving out of the way to let new
    instances come into place.
    
    Other synonyms considered: acquiesce, move-aside, ceded

commit 8a8abb98037c686fe7c81d2e3007fb888f40966b
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 21:50:30 2019 -0800

    notes: parent, top, root, edge, fsParent concepts

commit 8ea94990b65809b4d90b3cbd18bceae9f9c99bf5
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 21:36:40 2019 -0800

    build ideal tree algorithm notes

commit 99811cb49b4163f86e27209423799b96c10e0bb1
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 17:56:21 2019 -0800

    tree type notes

commit b0b86a964f8f0230d4dc7a87e3e4e610650cae20
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 17:56:04 2019 -0800

    diff notes

commit 56a6ba8b4a98cfd8ff2fb266f63102e9ad50711f
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 17:43:42 2019 -0800

    reify notes

commit c881482cfe04613b49152b29ea2a6328e87ded97
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:57:30 2019 -0800

    Add late rejection and package-installed-contents deps

commit 7b36b35587a4047cebb49e0918e240c632844576
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:56:53 2019 -0800

    Track bundled/inBundle properly in legacy shrinkwraps

commit c585ce1f51e5ddc4ad75588bf89ea4583dddeaf5
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:55:05 2019 -0800

    ideal script: add --add-dev=... option

commit 97cd91b31f937649bf47dcc3b4d6f4a296052c3e
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:54:30 2019 -0800

    diff: track set of unchanged nodes in each branch

commit 4c0ebba0f9eb6064a1bd8251d640e161db997c53
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:53:36 2019 -0800

    module for determining a folder for staging

commit de4c61d93662f7af7720bf4780d8b889bc958c1a
Author: isaacs <i@izs.me>
Date:   Thu Dec 26 10:59:52 2019 -0800

    A class for calculating tree diffs

commit eeab3a8a630a4e9b2686e3631608bb8f887ec5f4
Author: isaacs <i@izs.me>
Date:   Wed Dec 25 19:30:25 2019 -0800

    update pacote

commit 2c71154d213411ea526268fcff77300dd453636c
Author: isaacs <i@izs.me>
Date:   Sun Dec 22 00:27:13 2019 -0800

    Properly dedupe nested meta-dep cycles
    
    This implements a pruning algorithm when replacing nodes, such that any
    cyclical set of dependencies required by the old version can be
    optimally replaced by the dependencies of the new version.
    
    For example, a cycle of peer deps, all updated to a new version with the
    new version of the dep being updated, would cause conflicts when finding
    the ideal place in the tree, because each node would have edgesIn from
    another conflicting version.  As a result, the cycle of deps would get
    nested, and then after placing everything, the pruning step would remove
    those now-extraneous deps anyway.
    
    The earlier pruning step in the case of node replacement reduces the
    cases where we have extraneous deps left over in the first place (maybe
    eliminates it altogether? not sure, haven't taken the time to prove it
    one way or another), so that these conflicting metadeps will be moved
    out of the way before attempting to place dependencies.
    
    Additionally, a check is now performed after placing a node to find any
    nodes by the same name which are descendants of the target and can be
    safely replaced by the target.  So, if a previous installation required
    a nested placement of a dep, but it's no longer required after an
    update, then the nested node is duduped out automatically as part of the
    subsequent placement.

commit e75a388788053456097163e680c8a02962bfae4d
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 23:29:25 2019 -0800

    Skip shrinkwrapped deps in buildIdealTree
    
    Also, track hasShrinkwrap and inShrinkwrap on Node objects, and store
    hasShrinkwrap in the lockfile.

commit 02b75128a6f990a4a5d0d3c665c1b594da82d5d9
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 22:49:27 2019 -0800

    inventory: add funding to default query keys

commit 2bb6768647123631d6c92f778e86d76a74fe629b
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 22:48:58 2019 -0800

    Fix scripts timing and sorting

commit 4251044b22edb256b0f3e87acd1e69184587a6c2
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 16:33:36 2019 -0800

    Revert "buildIdealTree: support {update:{depth:Number}} option."
    
    This reverts commit 7744295d027146409775c55d83ff5908112dff7f.
    
    See https://github.com/npm/rfcs/pull/81 for rationale.

commit 7744295d027146409775c55d83ff5908112dff7f
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 12:03:07 2019 -0800

    buildIdealTree: support {update:{depth:Number}} option.

commit c143da5ab9b22a04cab250c06735c8e615f6070d
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:58:31 2019 -0800

    fsParent and target are bidirectional and managed
    
    This automatically updates the path, realpath, and associated fields
    whenever the node.fsParent or link.target are modified, as we were
    previously doing with node.parent.
    
    That is, if the link.target is reassigned, then link.realpath is updated
    to match link.target.path.  If node.fsParent is modified, then its path
    is updated to be relative to the new fsParent's path.  And, if changed,
    the paths of all nodes referencing this one as either a parent or
    fsParent or link target are similarly updated.
    
    In order to accomplish this, the linksIn and fsChildren sets are added,
    making link.target and node.fsParent bidirectional.

commit b8b8d7d4545d16be2ec67773e6a836f0117e1b70
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:53:08 2019 -0800

    update snapshots

commit 39931355bcfef0d08f665af6b974313a8ff70be1
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:43:16 2019 -0800

    add --save option to scripts/virtual.js

commit 77d5c7e7b2d0d88d90e6d8dba31e7536af3aaf8d
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:42:57 2019 -0800

    add fixtures for update tests

commit 390451920f4167ca68453536302f83f4d28ee4ef
Author: isaacs <i@izs.me>
Date:   Tue Dec 17 16:47:58 2019 -0800

    update tap
    
    Removes extraneous deps

commit 1e769a6b46444848c276debade50cd1c2148531b
Author: isaacs <i@izs.me>
Date:   Mon Dec 16 09:19:20 2019 -0800

    add resolveParent getter
    
    This simplifies the parent/fsParent selection logic when resolving deps.

commit 963e047ef3e5ace091f40110805adc5f22fb9a6c
Author: isaacs <i@izs.me>
Date:   Sat Dec 14 11:13:00 2019 -0800

    update with a set of names

commit 2c74748e8ca06539b63f53e4857b7c43194dec1e
Author: isaacs <i@izs.me>
Date:   Sat Dec 14 10:42:38 2019 -0800

    Implement update.all, keep update settings around

commit 6152b8b68eb1d18eda00a804200c4c04ad74b898
Author: isaacs <i@izs.me>
Date:   Sat Dec 14 10:39:10 2019 -0800

    Add Shrinkwrap.reset() method

commit 45ca2c9473cdca08c6ff8c8b1687d64f9d275e5d
Author: isaacs <i@izs.me>
Date:   Fri Dec 13 17:07:45 2019 -0800

    add bundled deps properly

commit b7845e3a21c4f35304f163a8fb0d538f3ca5e3cc
Author: isaacs <i@izs.me>
Date:   Thu Dec 12 13:33:41 2019 -0800

    update docs, add logo

commit 5e356e72e772083b5e6a1955ff28035457956f86
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:19:27 2019 -0800

    build ideal: add/remove deps, prune properly, more peer dep handling

commit d2c15eeb0c6d6553d6db5a88c7b0a482af00fcd7
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:12:56 2019 -0800

    Make node.package a getter/setter
    
    This allows for automatically refreshing all the edges by putting a new
    package on the node.  Useful when adding or remove package deps in
    buildIdealTree.

commit f0c455dd2468aec176c797953e2a98e0cbbc6856
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:09:12 2019 -0800

    Add inventory.filter(fn)

commit 0cbb0154ff82bcfb270a0ea84d2a20f86957eb97
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:08:26 2019 -0800

    make edge.reload() a public method
    
    Arborist class needs to do this when updating the root node's package
    dependencies.

commit 6345380e1bdddb1adf52f9a8934cad0bb0bf7069
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:07:35 2019 -0800

    add peer-dep-cycle v2 mock

commit 0b965bfa137286e6f8560a9ac5e56051c53eb136
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 22:46:54 2019 -0800

    more peer dependency fixtures

commit 9c9072543e44f181e301876ae48e03f7a9c333f1
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 22:45:39 2019 -0800

    organize registry-mocks fixture a bit better

commit 8dfeafde916b28014652d02c607f9352d0ecfe5d
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 17:19:07 2019 -0800

    Save license info consistently in lockfile

commit 0cad4e8871ed808f76566faefd09bd5a01e01f68
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 17:10:22 2019 -0800

    inventory: be resilient against mutated/invalid data

commit 61135ce82809f06ba56ba0f9f246c185241c1619
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 17:00:50 2019 -0800

    some tweaks to the funding and license scripts

commit c10bfff3ed3a0fe88b9cc21db4e1968be404f5df
Author: isaacs <i@izs.me>
Date:   Wed Dec 4 23:42:50 2019 -0800

    little helper scripts, early makings of a cli maybe

commit 37c1df8141263844072eec7d0b4689b365e681d7
Author: isaacs <i@izs.me>
Date:   Wed Dec 4 22:19:02 2019 -0800

    add a test fixture with a cycle of peer deps

commit 454151cf90ff12943f8e235d37996183ff4d348c
Author: isaacs <i@izs.me>
Date:   Wed Dec 4 22:13:42 2019 -0800

    give the regmock test fixture loader a better name

commit 49fd0cfb2230b6a16b06663da02089c37f373da8
Author: isaacs <i@izs.me>
Date:   Tue Dec 3 18:05:09 2019 -0800

    build ideal: Include bundleDependencies at the root level
    
    Also, refactor the build ideal tree test a bit so that the server is
    reusable, since we'll need that in the reify tests as well.

commit 055a2d434a5acd53043171a5737803ef869cf400
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 21:01:05 2019 -0800

    Arborist.buildIdealTree()
    
    This builds out the ideal tree from a package.json and/or package-lock.json,
    by walking the tree and fixing all problems encountered.
    
    It does not (yet) auto-prune, or take requests to add to the tree.  Ie, it's
    strictly 'npm install <noargs>', not 'npm install foo'.

commit ca558213f741546033a25d58771d55ca7cc2ce61
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 14:51:39 2019 -0800

    update loadVirtual with recent shrinkwrap/resolved changes

commit 1873a65aeec4f54bba87c329350bfea2cdadf5fc
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 14:00:35 2019 -0800

    Add node replacement, fix node.resolved for file:
    
    This adds the replace(), replaceWith(), canReplace(), and
    canReplaceWith() methods to the Node class, and some other methods
    needed for building ideal trees.
    
    It also adds consistency to how shrinkwraps and node objects track the
    node.resolved values for file: deps.  The resolved value is now always
    relative to the object or file reporting it.  That means that we
    effectively can't do anything with the _resolved value in package.json
    for file: deps, so we have to rely on package-lock and shrinkwraps for
    those.

commit f00c262b173b7abe96564e24e770776a3c133038
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 13:09:10 2019 -0800

    util to convert a legacy location to relative path

commit 86a0583291f2359ef882e2279c52a3bf2879e6db
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 09:35:03 2019 -0800

    resolve 'foo' to 'foo', not like 'foo@'

commit 459b71c834596b8ef41d8be39e25666dd38c4840
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 23:09:02 2019 -0800

    Link resolved is always relative from path->realpath

commit 75c785f64bc27f326b645854be0b2607e219f09b
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:50:14 2019 -0800

    keep path resolution relative to file storing it
    
    This changes how lockfiles store the resolved paths for Link nodes.
    
    Instead of making it relative to the Link, the path is always relative
    to the lockfile in question.  That gets rid of an extra layer of
    indirection, and makes it easier to move Link nodes around in the tree
    without having to do lots of path calculations that can be hard to
    reason about.
    
    Note: this makes some other tests break, but they will be updated in a
    subsequent commit.

commit 6f58d5b2012d754479d6e5b9bbb1c2880cd58967
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:41:02 2019 -0800

    test fixture showing the tap/react@15/ink collision

commit b1d027b51437140bb0f162b2cdd642982c75a19a
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:39:22 2019 -0800

    a fixture to demonstrate inferring dep types from shrinkwrap file

commit d0ab3c5f218be2732391235c9b7396ca8ead55af
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:36:52 2019 -0800

    add Edge.satisfiedBy method

commit 58d3e3d3d22946f6d2edc2f38487a3950e4f6929
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:34:04 2019 -0800

    update pacote, read-package-json-fast, tap, and tcompare

commit 763f1ca66a02279a07e4f6db01cb7c9abc6f1da5
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:32:35 2019 -0800

    inventory: make querying by license actually work

commit 49c24ed59661611b9f3b6b7bbadf1522cf4afb17
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:25:43 2019 -0800

    module for /-normalized relative paths

commit 3f152813824579b6c2c810183c6225d7d73dcd2b
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:25:30 2019 -0800

    module to make resolved values consistent

commit dda54febdf82d0ab7d23d41fd3271f535a41ab12
Author: isaacs <i@izs.me>
Date:   Sat Nov 23 23:14:37 2019 -0800

    Shrinkwrap class takes an options object
    
    The number of things that had to be passed to the Shrinkwrap class was
    getting a little out of hand.  We're contemplating adding a 'backup
    lockfile' concept, which will make matters even worse, and it needs to
    know about save:false, so the right thing to do is have it take a set of
    options at construction time, rather than passing booleans around.

commit c2a5ab9db2c2511e040142e3a00a7101fce65abb
Author: isaacs <i@izs.me>
Date:   Sat Nov 23 22:19:59 2019 -0800

    Resolve confusion around 'root' vs 'path'
    
    On Node and Link objects 'root' refers to the root node.
    
    But on Arborist and Shrinkwrap objects, 'root' referred to the root
    path.
    
    This led to some weird and confusing internal terminology.  Fix by
    making 'path' always refer to the string path to a thing, and reserving
    'root' to refer to a root node in a graph.

commit 2dc703ccdcc2813663441949b33e5fddb34ac20f
Author: isaacs <i@izs.me>
Date:   Fri Nov 22 17:05:26 2019 -0800

    upgrade pacote, switch to read-package-json-fast

commit 1da36f91f2b439d05d5bb526e8e51d22b6726e3f
Author: isaacs <i@izs.me>
Date:   Fri Nov 22 15:01:57 2019 -0800

    DRY path/location handling, fix deeply nested edge case
    
    DRY the code that was handling metadata fetching and updating, and
    take care of an edge case that prevented deeply nested link targets
    from being properly updated when they eventually get parented.
    
    This is mostly a refactor that just cleans up the code for readability,
    but it does fix a (albeit obscure and unlikely) bug in the process.

commit c5b39991c08f5e5ccca227d4a1015a1caad9165d
Author: isaacs <i@izs.me>
Date:   Fri Nov 22 13:28:31 2019 -0800

    correct comment in dep-valid function

commit f3b9ac483ba631f8e2df97e16d81de39f2981e26
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:52:34 2019 -0800

    re-add tcompare as dev dep
    
    Removing it caused problems, because tap had a conflicted version at a lower level.

commit 92e9dad6f2f5a70d8a2b72fe91a26bb380250e14
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:41:05 2019 -0800

    include funding in metadata
    
    This will make it easier to quickly get info for 'npm fund'

commit bee2adc6fb81a22f3439531b504f05549ad40b18
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:36:33 2019 -0800

    update tap for nicer diffs

commit 47c777f52d8f3b27c6d4c0fe9b4721c356ca76e4
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:36:22 2019 -0800

    check for fsParent links on any top-of-tree node

commit 12c6d3d08c64e3e9ed32022299065cdea195743c
Author: Darcy Clarke <darcy@darcyclarke.me>
Date:   Wed Nov 20 10:52:09 2019 -0500

    chore: Add github settings for labels
    
    PR-URL: https://github.com/npm/arborist/pull/17
    Credit: @darcyclarke
    Close: #17
    Reviewed-by: @isaacs
    
    Note: node 8 was already removed from travis in another branch.

commit 04ff0a16e8954151f460f4ed3770cebb9281a403
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 11:09:32 2019 -0800

    ensure that fixture symlinks are loaded in yarn test

commit ee514e019474a1a705cdeab237be06cf95bf473e
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 10:44:54 2019 -0800

    Add static methods to load yarn lock from string/tree

commit a0f73eeaa163955f3e71202f83fc0986b47fa9f8
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 10:30:07 2019 -0800

    save the yarn.lock if it was loaded

commit 5cd2658641cf4f494c569e644f939f6d6cc3913f
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 09:59:32 2019 -0800

    Get metadata from yarn.lock, clean up root/parent behavior
    
    This fixes a lot of weird edge cases and one race condition in how
    metadata was being handled between the root, top, and parent semantics.
    
    The race condition was that loadFSTree would sometimes be called on a
    link whose target had not yet loaded, resulting in an empty children
    collection.

commit abb0c07fa887473f3618749cb66f649126db0519
Author: isaacs <i@izs.me>
Date:   Tue Nov 19 23:09:37 2019 -0800

    shrinkwrap: add test for weird broken data case

commit b8a0f6794cfd0d1f4a3b97700295f124b6b4c2b7
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 22:22:15 2019 -0800

    shrinkwrap: load yarn.lock file as well

commit dd6a7001b0612c641d16790e785a7a32ed704520
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 22:21:11 2019 -0800

    handle yarn lock files that don't end in \n

commit 42b962d4d2e71327143b223ac84362510600e7ab
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 22:20:34 2019 -0800

    don't delete fixture symlinks on each test run
    
    Makes it too difficult to share fixtures between tree-walking tests.

commit 974c7fb8483c1864da3bc282670dccfcd5e3f9d7
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 13:16:37 2019 -0800

    Some slight changes to the install-types fixture
    
    Remove the (no longer used) .arborist-lock.json file.
    
    Remove the _fields from a few package.json files, just to ensure that
    we still get the same results.

commit 1cb81ef3f94485ac14495f1f7d40287843e80d2c
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 21:32:10 2019 -0800

    ci: drop node 8, add latest node

commit 97be6d83d124b1297c241fae9340a5d5b4da6ada
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 21:29:52 2019 -0800

    test: turn off --esm

commit c83bfbda1b7e4be9f73f7329b7a0475c5a347fa1
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:45:08 2019 -0800

    sort loadActual snapshots
    
    Fixes node version dependence

commit 85f4463663a86be9d1bb4e1d32aede72ad1ee52a
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:38:11 2019 -0800

    fix spec-from-lock snapshots for Node version dependence
    
    RegExps toString differently starting with node v12

commit a74a6b5bd7ecd2c241f687f13986754e885732b9
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:33:31 2019 -0800

    Remove cwd from yarn-lock shapshot names

commit 4f0aa97be95e59b1c50c4eb93ff57ffa62b406a4
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:29:57 2019 -0800

    fix link tests when run on travis
    
    Or any system running in /home instead of /Users, really.

commit 2b2fed221e9de20c605d43e7f08ca14468381136
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 12:27:32 2019 -0800

    YarnLock: class to parse and stringify yarn lock file metadata
    
    This is just the initial implementation spike.  It does not yet provide a nice
    way to lookup or update metadata, or keep it up to date with a Node tree.
    
    Next step: integrate with the Shrinkwrap class so that a yarn.lock file is
    automatically respected and kept in sync if it exists.

commit 55e6387a7f5f4208a57840518bf9b638f292a638
Author: isaacs <i@izs.me>
Date:   Sat Nov 16 20:59:49 2019 -0800

    style: remove excess \n char

commit 54f00871516d884ab31de6521bd9b31707b0a17e
Author: isaacs <i@izs.me>
Date:   Sat Nov 16 20:58:51 2019 -0800

    update tap
    
    makes npm audit happy

commit 37c1a87a808f1c09225b7ce0007937de78485711
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 12:00:51 2019 -0800

    test: forgot load-actual snapshot file

commit 07c65a0e7e3ad618c7d1d85cf35970158ae0a339
Author: isaacs <i@izs.me>
Date:   Sat Nov 16 18:43:46 2019 -0800

    Load virtual trees from shrinkwrap file
    
    This drove several updates in the Shrinkwrap class and legacy data
    handling functions.
    
    The Shrinkwrap[_metaFromLock] method should probably be split out into a
    standalone function for easier unit testing.  If not, then the
    versionFromTgz and specFromLock functions could be brought into the
    class, for consistency if nothing else.

commit 318fc7d6d3bd9ad520ba9037427d4dcca2aeef46
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 16:35:48 2019 -0800

    Properly set dev, optional, and devOptional in shrinkwrap

commit 2cf89997cebd18461345fd3a1f8fbf8515f7c162
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 15:59:20 2019 -0800

    calc-dep-flags: Properly walk deps of link targets

commit 4e1688435f5fadffd70548f871e457f5419bd292
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 14:51:05 2019 -0800

    Save file: deps resolved values relative to root
    
    Otherwise it ends up being specific to a given system.
    
    Also ensure that the relative() calls in Shrinkwrap class don't drop \\
    chars in metadata files on windows.

commit eb968f53a5db30c8b59e8fc92679c51a9fee6228
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 13:06:06 2019 -0800

    Ensure root is preserved when loading actual tree
    
    Also: add the metadata to the loadActual snapshot tests, which would've
    caught this, and use the built-in tap object sorting so that the
    shrinkwrap is consistent across runs.

commit da9bf4c490d2c6805f87bf40cda22635e9fdfda1
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 12:16:44 2019 -0800

    Add Shrinkwrap.commit() method, fix some obvious bugs
    
    Found during pairing with @darcyclarke

commit dd1a91f93da726a828dd8b0559f46ca0c8b8e5b8
Author: isaacs <i@izs.me>
Date:   Wed Nov 13 17:45:30 2019 -0800

    Replace Metadata class with Shrinkwrap class
    
    This unites the handling of npm-shrinkwrap.json and package-lock.json
    files into a single class, and defines the lockfileVersion 2 style
    shrinkwrap files.
    
    There's no need for an .arborist-lock.json file in node_modules, because
    the 'packages' section covers all that we would put in there anyway.
    
    In lockfileVersion 3, we can drop the dependencies section, along with
    the legacy metadata code supporting it.  (Likely we'll want to drop the
    writing/tracking of the legacy metadata before we drop support for
    reading it, if ever.)
    
    The loadVirtual function has been removed, but will be brought back
    similar to how loadActual was migrated into the Arborist class.  The
    intent of the Shrinkwrap class is to make that easier to accomplish,
    since we effectively just have to generate all the Node and Link objects
    and assign their parents to hook them up into a tree, and the lockfile
    will contain the arguments needed to generate them.
    
    Still todo: store funding info in the lockfile, so that we can run `npm
    fund` without loading the entire actual tree.  There are a few other
    other use cases where we'd want to get a quick and dirty snapshot (ci
    and audit, at least).

commit 47b4f65505597d525fd9b34311039c7f3255266e
Author: isaacs <i@izs.me>
Date:   Sat Nov 9 12:22:51 2019 -0800

    deps: add pacote from git branch, and json-stringify-nice

commit 100bf7bf22a82024d260016d6b0810954272ead6
Author: isaacs <i@izs.me>
Date:   Thu Nov 7 15:17:24 2019 -0800

    metadata: splitting location by node_modules, don't need to handle scopes

commit ebc253110ee8678642c3537b93c1583afb1936cc
Author: isaacs <i@izs.me>
Date:   Thu Nov 7 14:23:53 2019 -0800

    Fix some loadActual bugs that popped up in the refactor

commit 0d8784e26a5ed256ebb534a2f3ebec411f734eef
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:49:19 2019 -0800

    add pacote, update tap

commit 08388418e18da80fcf033448809018306da84a46
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:48:33 2019 -0800

    Metadata: record links in a more useful fashion

commit 7f8fade16419947bcf0e6ed8999ce75a029b081b
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:47:02 2019 -0800

    Fold loadActual functionality into Arborist class
    
    This will allow us to have a single source of truth for metadata as we
    build up the idealTree from that metadata, and reify the idealTree onto
    the actualTree.

commit 8c267ca72c4e85059966dfde6604bb3e5f984002
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:48:52 2019 -0800

    move inNodeModules function onto Node class

commit c2bcf244c63b571162942062397c479e7179dd09
Author: isaacs <i@izs.me>
Date:   Mon Nov 4 16:10:49 2019 -0800

    Refactor data model to enable reification and ideal tree building
    
    This changes a number of things in the data model to make it easier to
    reify package trees and build ideal trees from package requirements.
    
    - The .arborist-metadata.json file is renamed to .arborist-lock.json,
      and contains a more complete picture of the package tree.  This will
      eventually be merged into the package-lock.json under the 'packages'
      key, so as to support locking workspaces and other trees that don't
      follow npm's traditional dep/node_modules/dep/node_modules/...
      structure.
    - Location is now the relative path from the root node to the node in
      question, again to better support trees that don't conform to npm's
      traditional expectations.
    - The root node keeps an index of packages by location, which is
      queryable by name or license key.  This will make it easier for use
      cases where we need to jump directly into the tree to all packages
      with a given name, for example for 'npm ls', 'npm update', or the 'npm
      audit' server-side service.

commit a4ad5b86b64a9b076890e09a0eb8d7114762e22c
Author: isaacs <i@izs.me>
Date:   Mon Nov 4 16:06:14 2019 -0800

    inventory class

commit bd517ee9c46e82b742abf9ace27702c62275ca64
Author: isaacs <i@izs.me>
Date:   Mon Nov 4 09:25:51 2019 -0800

    remove tacks (not being used)

commit 0587ced7001c0e968176819b0f875a01d491345d
Author: isaacs <i@izs.me>
Date:   Fri Oct 25 22:33:39 2019 -0700

    Parse pnpm trees (and other links into node_modules folders)
    
    Fix: #16

commit aaa8353caf45804ba8c44a24b8946830f67fcc7d
Author: isaacs <i@izs.me>
Date:   Fri Oct 25 16:37:45 2019 -0700

    Resolve deps to fs parent folder children
    
    Fix: #15
    
    Note: this does NOT support pnpm style trees.  They still show up as a
    ton of missing deps.  But, this commit adds a test fixture and snapshot
    for how pnpm trees are handled, so we can track changes against it more
    easily.
    
    pnpm trees will be addressed via #16
    
    This lays the groundwork for Workspaces, by resolving dependencies in
    the `packages` (or whatever) subfolders against the root node, if those
    deps are found there.

commit 6e9b6a3f0caacf72550e4ba1b3c39d5274de11d3
Author: isaacs <i@izs.me>
Date:   Fri Oct 25 14:13:21 2019 -0700

    edge: Always compute the error
    
    The better to print it with.

commit bc98f5fd402c6728e8a88be373a905704bd4e951
Author: isaacs <i@izs.me>
Date:   Thu Oct 24 23:31:44 2019 -0700

    two more workspace-ish examples

commit 5288b21bb0d4b0d6c377dc84506d778e2f2a82b0
Author: isaacs <i@izs.me>
Date:   Wed Aug 7 15:44:57 2019 -0700

    Implement peerDependenciesMeta

commit 67c9ef1d3a1deb7781e4f627853bf8af0c2e30d1
Author: isaacs <i@izs.me>
Date:   Wed Aug 7 15:28:02 2019 -0700

    Handle git-conflicted shrinkwraps, prefer shrinkwrap to lockfile

commit b2674fb579f771aea8efff667d12e0b8e219cf55
Author: isaacs <i@izs.me>
Date:   Wed Aug 7 09:12:18 2019 -0700

    npm-shrinkwrap has priority over package-lock

commit 5cf92b8fb0392a05f62a0887957a7ec2648fc0f0
Author: isaacs <i@izs.me>
Date:   Tue Aug 6 16:32:58 2019 -0700

    remove my home directory from tap snapshots

commit 10609464e29e8f97dfddb111f618840adabd05cf
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 22:21:51 2019 -0700

    Thread Metadata object throughout Node tree
    
    Effectively, only the root node gets a Metadata object, the others all
    copy the reference to their parent's meta whenever this.parent changes.
    
    This allows all the location updates to automatically update the
    meta.data.arbmeta, so it's ready to write when we reify the tree.

commit 8b152b2f35ea7e51973523ab9595bdfb51610311
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 21:58:12 2019 -0700

    Add Metadata.load(root) to instantiate and load in one
    
    I keep mistyping it this way, may as well just make it part of the API.

commit 217ca01bfe30c339cfc016af9fedf0c05acdd9e5
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 21:47:04 2019 -0700

    index exports test

commit 345f6876a98592969942dc2402004a6c165ac30e
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 19:27:49 2019 -0700

    load a virtual tree from a shrinkwrap

commit a90badbb216b745baa9a3f48f66069d46df8da4f
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 17:28:13 2019 -0700

    depValid: handle errors more consistently
    
    Also, guard against a null request coming in, which can happen
    when a shrinkwrap is very old or hand-munged.

commit 91de8fdedb0ac921342926671c19aca92c7cfcba
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 17:16:30 2019 -0700

    beef up the install-types test fixture
    
    This will be used to test loadVirtual, needs more edge cases.

commit 4dceb469235b62db4df4eb9b63d097eb97a7ace2
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 15:33:39 2019 -0700

    node: keep errors in this.errors[]
    
    There can be more than one, it turns out.

commit 2421365b05f94a1ae12128727ce02d8245deee50
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 15:27:10 2019 -0700

    metadata: always memoize to arbmeta object
    
    This makes it so that at the end of an install, we can easily
    write it back to the file for next time.

commit 783ec99282f2befe15a8b453df0494708ac0c116
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 15:17:06 2019 -0700

    Get a spec from a lockfile entry

commit e2813887e5bc240acbc999e4b9dac83e8de5778f
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 14:51:15 2019 -0700

    try to get a version from a tarball file/url

commit df08ef2d313239fd6cc4433f3a21713fb6dbdc53
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 12:53:05 2019 -0700

    dep-valid: don't rely on package.json _fields

commit 8b800075a296a5a6f188b5be4dd5dc74a430ceba
Author: isaacs <i@izs.me>
Date:   Sun Aug 4 23:02:20 2019 -0700

    bump deps

commit 59297daa78b104dda68f6c65fc0e8f6b637da46a
Author: isaacs <i@izs.me>
Date:   Sat Aug 3 16:33:11 2019 -0700

    Load integrity/resolved metadata in loadActual

commit b7f68b64fba91343079a768d0027b854edcef9db
Author: isaacs <i@izs.me>
Date:   Sat Aug 3 16:17:35 2019 -0700

    Metadata class for loading resolved and integrity

commit 27f9d77356436ce7f9ed96de33e39e3e4144071f
Author: isaacs <i@izs.me>
Date:   Fri Aug 2 10:47:33 2019 -0700

    Calculate dep flags (dev, optional, etc.) properly
    
    This also adds the capability of a Node constructor to not be given aa
    `path` or `realpath`, since that can be inferred when assigning to a
    parent.  In that case, it gets the `name` field from its `pkg` option.
    
    Of course, this means that alias deps will have to be given a path (at
    least `path: 'alias-name'`) when being created.  Another option might be
    to have an explicit `name` field in the options.

commit 41d343abb50983c61c035500e0ab638b4b4089bf
Author: isaacs <i@izs.me>
Date:   Wed Jul 31 15:26:04 2019 -0700

    Add coverage map

commit a921e10c0c5e6228027e4e547cace0eea63c245e
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 15:00:01 2019 -0700

    Properly exclude dev deps below top level

commit f787c135977e3bd06f754a9b7e2bf68c90612cef
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 13:50:56 2019 -0700

    docs: edge class

commit 281dd748698553e1b056424a2c226b5966629b50
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 12:22:10 2019 -0700

    doc: s/req/prod/

commit 9e8dec191fae4fba78f55d140d509e1b4f7fbacf
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 10:27:47 2019 -0700

    Do not load devDependencies below top level

commit 0d1c0a9f53a7b59a1686b65d8ec10b7dd2bef152
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 10:26:04 2019 -0700

    Do not treat a missing optional dep as an error

commit 3d5655bc569cf632738c77a2280c4a31f6cda000
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 01:04:19 2019 -0700

    docs: document some recent changes to Node and Link classes

commit 918caa72ae7f1e4b81cafcea668f7f9b7048e9c3
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 00:53:47 2019 -0700

    test: abstract out fixtures, sort better in load-actual

commit 7ba17f269f0da0c1f80c796e8b55aba79f13c805
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 00:37:17 2019 -0700

    Make node.children a Map instead of Array
    
    This simplifies all the cases where we need to look up a child node by
    scanning for the index, or even worse, filtering based on a name match.

commit 7e67734dc686d71ed691e153da684abe8ed13183
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 23:49:46 2019 -0700

    test: fold symlink test into load actual
    
    Also, clean up symbolic links better, and use Maps/Sets in the snapshot
    rather than arrays and objects, so that it's order-independent.

commit 4b779383f585967f5f6dbfe2294c3d26ee0bd2bf
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 23:45:59 2019 -0700

    test: use a coverage map

commit f27893fa2742b76fe89519b0e6257e84fd663cd1
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 23:30:53 2019 -0700

    loadActual: update to new Node API surface

commit e0cd438ca42c869addf0346440f87f2fc66539f5
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 22:52:45 2019 -0700

    node: track errors encountered loading node
    
    Typically, this is an error reading the package.json file

commit 689a22243985a08605d97ec61a3c01e1431f716e
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 16:44:45 2019 -0700

    New classes for Node, Edge, and Link
    
    This is taking the module completely away from the approach used by
    read-package-tree.  Loading is still not done, so the tests are
    expectedly failing, but the need for this rewrite became more and more
    apparent when trying to shoehorn virtual loading and tree munging into
    the older data structure.
    
    With this, the dependency graph is automatically generated and updated
    as the folder tree is defined or mutated, making it much easier to do
    the kinds of operations that will be required for npm's use cases.
    
    From the Node point of view, there's only one kind of 'thing' that
    represents a dependency, which is captured in the Edge class, making it
    much simpler to keep up to date when re-parenting nodes.

commit 98e4999d1b0481b74cd8f5b9083cde130ea0a353
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 13:17:19 2019 -0700

    todo comment: don't rely on package _fields

commit 01e907a8c7a294fd60a1df446fdcd1ebce0722e7
Author: isaacs <i@izs.me>
Date:   Fri Jul 26 15:42:50 2019 -0700

    Clean up path and parent handling
    
    Make node.parent a setter that updates location, so that cases where a
    package is linked multiple times throughout the tree resolves to the
    appropriate path.  If a link target is outside the tree, then node.path
    remains null, rather than being set to the logical path where it first
    occurs in the tree.
    
    Fix #1

commit 9ff6f226b2bf0cb19d4a1de4793efe638d6ed05e
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 21:45:56 2019 -0700

    Track bundledness more reliably
    
    Fix: https://github.com/npm/arborist/issues/4

commit ac1036e68b5d91f4006cc5d302f98de516783bea
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:35:26 2019 -0700

    Get rid of node.id
    
    Fix: https://github.com/npm/arborist/issues/2

commit 770dd43bb44003f6c46299dbc9efc4174049697f
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:27:47 2019 -0700

    don't bother unsetting flags that aren't set

commit 1859a9d74ed57b9104300ca91b49cada3719c8ad
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:26:14 2019 -0700

    devOptional: for deps both dev and optional graphs
    
    Fix: https://github.com/npm/arborist/issues/3

commit 7af682370f595ea58b0e61a2d6b9e4e8026dbcab
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:24:39 2019 -0700

    update deps

commit 64e0d491e33b18d7c35593ff4b473bd1da435ffe
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 14:49:55 2019 -0700

    todo comment to not depend on special _fields in package.json files

commit 4d1be1b791e62bfa2d0c46811d0888c339ba2af6
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 14:48:40 2019 -0700

    update deps

commit a2bd6bb2846d1636bca77a1e17c6dd3cd29c5142
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 14:12:56 2019 -0700

    test: skip root package-lock test on CI
    
    npm ci does not produce the exact same kind of package-lock as npm i.
    
    As a result, this test will always fail on travis.  It's more of a
    temporary gut-check anyway, since npm will be using this module
    eventually.

commit 1dc603e46f728607dfec49660f0104ea271ec43f
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 12:31:03 2019 -0700

    start moving to the arborist API surface
    
    Still todo:
    - Unit tests for all classes.
    - Most of the arb.whatever() methods (other than loadActual, really)
    - Make the Arborist class the top-level export

commit dd6f629ae832edfa13a9548aec807bce440eff39
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 11:52:43 2019 -0700

    remove unused 'warnings' property

commit da3fc8267cbc5810b84b8db2a88fefb633a58f9d
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 11:16:14 2019 -0700

    test: Add a basic workspace fixture, make paths all consistent

commit a88479147c82dd183570db1dcfa9b62fce01fae8
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 10:56:01 2019 -0700

    two todo comments

commit a18b1ac8370ba53b3f4151d37d54e8defb7da8ca
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 10:55:51 2019 -0700

    Drop the filterWith method

commit b9a88513fdf415e945777c321cd4cabd62aaca81
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 10:55:09 2019 -0700

    change name from read-package-tree to arborist

commit 49d2df1fbaee6322df2b7a928f9e8ec167219c09
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 22:08:39 2019 -0700

    Specify parent in arguments to Node/Link ctor

commit 2374249076a282f881544cf11d9e49ff3e570586
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 15:29:24 2019 -0700

    get rid of unused property

commit 6b8394343ec17a5b87d0b45548860568805ddb20
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 15:14:05 2019 -0700

    Use options object instead of sprawling arg lists

commit 5c6f65d7fc20e6a1fa87189c887368d7d57f0ea0
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 14:49:43 2019 -0700

    Test deps properly, track extraneous deps

commit bfa7d3561667f89a92c2df29be2a935a7a51b088
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:45:27 2019 -0700

    use native util.promisify

commit 0b86bf4a3044879016060268a6bda654e4f811ab
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:44:45 2019 -0700

    update deps, prune package-lock

commit 8528a637ad78c23a5dd3c3287bf655cc7ab2c87a
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:44:00 2019 -0700

    module to test if deps are valid

commit 9b6226809b2b749f269637c9df79f277cbbef4e9
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:41:16 2019 -0700

    fixtures for more looping edge cases

commit f7871b158a2b1d05883d959ee3737575f855ee2e
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 23:19:02 2019 -0700

    Track the /-style flat location in the tree

commit 844c31f7b5a77fac2d0e64cb5de0ee200de6bff1
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 18:29:57 2019 -0700

    restructure code into more logical modules

commit 62239488359721b34bc2255807c1167027419c02
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 17:16:40 2019 -0700

    rename rpt.js to index.js

commit 86b349780fecf11ffbe6679ea77dce15da86819e
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 16:46:48 2019 -0700

    Add test that exercises package aliasing
    
    Adding the alias also results in a case where the sync and async
    walkLogical calls produce different results.  To test this properly,
    persistent array objects are used instead of strings, so that they're
    fully updated in the final result.

commit 1fab6fd5fbb2e9c282118f1e5751dfd1ce057da7
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 17:20:21 2019 -0700

    Don't exclude links within the tree from package-lock.json view

commit aa58840a5672272d7f171e79c205893f0eb6cc06
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 17:10:24 2019 -0700

    Add package-lock.json info on the .packageLock getter

commit 7285526cda75e4bba6a9a497d35098e98a59b9d7
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 15:15:21 2019 -0700

    Use walk methods more like a map/reduce
    
    Enter function can transform a node, and then the exit function
    receives the result of the current node plus all children results.
    
    This makes it easy to archyize (etc) and capture information
    properly, even when there are cycles.

commit b86cca07caf2277d73ca0a5344f107ca3147cdae
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 14:11:14 2019 -0700

    Handle peer deps, load all dep info in one walk

commit a3600ec7bd0524306d368426a42c0dbffc42a33e
Author: isaacs <i@izs.me>
Date:   Fri Jun 21 20:35:37 2019 -0700

    Track and mark invalid dependencies

commit d7156678effa868079c873ec6285c56871d34fce
Author: isaacs <i@izs.me>
Date:   Fri Jun 21 17:12:29 2019 -0700

    Flag optional deps, sort without localeSort
    
    The better to match the existing logic in creating package-lock.json
    files.

commit 64c62e6be479c2b7756b83b9a7c4a7a123bb308f
Author: isaacs <i@izs.me>
Date:   Mon Jun 10 23:51:39 2019 -0700

    Load logical tree, add methods for walking trees
    
    As of this commit, each node has a Map for dependencies, identifying
    whic node resolves each of their dependencies, devDependencies, and
    optionalDependencies.  Missing dependencies are stored in the
    misisngDeps map.
    
    Still todo:
    - peerDependencies and semver validation.
    - reading the logical tree only (eg, from a package-lock.json file).
    - outputting to a package-lock.json file.

commit 3174edfcb529df349d595fa6b7aad16bec89453c
Author: isaacs <i@izs.me>
Date:   Sat Jun 29 14:04:22 2019 -0700

    5.3.1

commit 6acf66a16cb3d70cfca55b5a851f9d3223f57336
Author: isaacs <i@izs.me>
Date:   Sat Jun 29 13:58:29 2019 -0700

    Revert breaking change, preserve legacy design bug
    
    Two breaking changes were mistakenly landed in v5.3.0.
    
    The first is returning full paths on the Node.path property, where
    relative paths were previously provided.  (Since the fully resolved path
    is on the Node.realpath property, it's not really necessary to have the
    full path on Node.path anyway, and this was just an oversight.)
    
    The second is that the children of a Link node were previously rooted
    with the *Link* as the parent node, rather than the target.  This causes
    problems in dependency tree analysis, which npm CLI mostly (but not
    entirely) works around.  When combing through this code to remove the
    fs.realpath race conditions, this weird bug was 'fixed', but doing so
    breaks a lot of the code that works around this read-package-tree design
    flaw (which dates back to before this code was abstracted out of npm CLI
    4 years ago, so working around it as established context can certainly
    be forgiven).
    
    Version 6 will fix this long-standing design bug, but doing so requires
    much more work on the tree shaking algorithms in npm CLI.
    
    Fix https://github.com/npm/read-package-tree/issues/21

commit c995ab2c95083bfa5943aadb5e5bffdf3bb3ead4
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 12:35:37 2019 -0700

    only the node_modules in root should be ignored
    
    This was causing a failure on travis, because a new node_modules test
    fixture wasn't being included in the repo.  Oops.

commit 5534e74abc1aff107ee961086892e1d9f8e65f06
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 10:44:45 2019 -0700

    5.3.0

commit 0515c80d8e88da2e88f4780364fb798b92fb565b
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 10:40:39 2019 -0700

    auto-publish on version bump

commit 42314104b532f4e622dc6a0a2b74dc5733980ddd
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 10:35:22 2019 -0700

    Restore node v6 compatability
    
    This rolls back tap to v12, and adds the util-promisify polyfill.

commit e9cd536c543a0b722cb3acdee2cf2c7f881a9016
Author: isaacs <i@izs.me>
Date:   Mon Jun 10 14:47:25 2019 -0700

    Use custom cachable fs.realpath implementation
    
    In this use case, we don't care much about a lot of the stuff that
    fs.realpath can (and should!) do.  The only thing that's relevant to
    reading a package tree is whether package folders are symbolic links,
    and if so, where they point.
    
    Additionally, we don't need to re-start the fs.lstat party every time we
    walk to a new directory.  While it makes sense for fs.realpath to do
    this in the general case, it's not required when reading a package tree,
    and results in a geometric explosion of lstat syscalls.  For example, if
    a project is in /Users/hyooman/projects/company/website, and it has 1000
    dependencies in node_modules, then a whopping 6,000 lstat calls will be
    made just to repeatedly verify that
    /Users/hyooman/projects/company/website/node_modules has not moved!
    
    In this implementation, every realpath call is cached, as is every
    lstat.  Additionally, process.cwd() is assumed to be "real enough", and
    added to the cache initially, which means almost never having to walk
    all the way up to the root directory.
    
    In the npm cli project, this drops the lstat count from 14885 to 3054
    for a single call to read-package-tree on my system.  Larger projects,
    or projects deeper in a folder tree, will have even larger reductions.
    
    This does not account, itself, for a particularly large speed-up, since
    lstat calls do tend to be fairly fast, and the repetitiveness means that
    there are a lot of hits in the file system's stat cache.  But it does
    make read-package-tree 10-30% faster in common use cases.

commit 4eed760707c2e8f4bb5e4b111e29b0e59aca4273
Author: isaacs <i@izs.me>
Date:   Thu Jun 6 21:01:15 2019 -0700

    Add promise API to readme

commit 9a290ec609015e1ecb250c1c8c2d4de49b5379ad
Author: isaacs <i@izs.me>
Date:   Thu Jun 6 20:58:03 2019 -0700

    drop old versions from travis
    
    This drops node 6, which is still technically supported, but modern
    tap is a compelling draw.

commit 4782b1f1850f6498ce7dcd44ee0dc25d6ff56219
Author: isaacs <i@izs.me>
Date:   Thu Jun 6 17:58:29 2019 -0700

    Refactor to be promise-based
    
    This commit changes no functionality, except that a Promise is returned
    by the read-package-tree function.  (A supplied callback is attached to
    the returned promise if provided.)
    
    Test coverage is brought up to 100%, and some code paths have been
    slightly optimized, but the excessive level of realpath/lstat calls
    remains for now.

commit f656af895b2f480e135c54619cb9633d0f7294ed
Author: isaacs <i@izs.me>
Date:   Tue Jun 4 23:04:38 2019 -0700

    Use tap snapshots

commit 463394833735e8df1f00ff857f04472443d2dcfb
Author: isaacs <i@izs.me>
Date:   Tue Jun 4 23:03:24 2019 -0700

    update tap

commit ee595cb0d318e07ffaeb52f6dc4d84cf92f7cbf9
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Feb 12 15:13:55 2019 -0800

    5.2.2

commit 4b6e0a37aeb7e7e58f20a1be940ba85233356e01
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Feb 12 15:13:18 2019 -0800

    fix(audit): npm audit fix --force

commit 0989a5cd3189f039dd8936cd6d0b59be740192db
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Feb 12 15:12:19 2019 -0800

    fix(name): fix calculation of node and link names

commit a7f0ab70c52bcd14b2094f2585cf324384c70721
Author: Ashley Williams <ashley666ashley@gmail.com>
Date:   Tue Jun 6 11:42:32 2017 -0400

    feat(test): add travis badge to readme

commit 5245c6e50d7f46ae65191782622ec75bbe80561d
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 18:46:46 2018 -0700

    5.2.1

commit 608b650560d623794dccd3fb94011bc47d7af99b
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 18:46:11 2018 -0700

    fix(name): only need one dirname call

commit db2770c40e1194e63e2adb175171beba7572ed37
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:50:50 2018 -0700

    5.2.0

commit 099462c60d5c9b73e0206ca99526df070d0816b3
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:48:50 2018 -0700

    meta: add node 8 and 9 to travis

commit d89fa5422fb4c7c559152b7e600eade698a409d2
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:47:15 2018 -0700

    meta: add package-lock.json

commit e5e5535e825a464b038edc2371572b3d0e508db7
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:47:04 2018 -0700

    feat(name): add node name from local dir names

commit d9e0ed750eada0850b8a4d2a01d4510a3776ce45
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jun 1 18:15:16 2017 -0700

    5.1.6

commit 130f384d5b9df00cc676e222b7a59a363cd4cad2
Author: Anna Henningsen <anna@addaleax.net>
Date:   Thu Aug 11 02:52:41 2016 +0200

    Make sure directories for symlinks always exist
    
    Adds the missing test/fixtures/badlink/node_modules directory.
    
    As the directory would usually have no contents except during testing,
    it isn’t present in a normal git checkout of this repository and so
    needs to be created manually in order for the tests to work.
    
    Work around that by letting the test file create it.

commit 5c19d70d88aa787c53dee8227b92e85681895182
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Aug 10 17:17:39 2016 -0700

    Reduce the raceyness of where we get the `path` attribute for Node objects
    
    Previously if you had a module AND a symlink to that module in the same
    node_modules tree then the value of the `path` attribute would
    non-determinstic due to `read-package-tree` doing everything async.

commit 44985bb9a5240a62b8940f21d6a61953f88d9620
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Fri Apr 21 16:43:28 2017 -0700

    Update travis config to match current npm

commit 56afb7ebd7ce989dd652f8b6fbb9266d53a0b597
Author: Thomas Guillet <guillet.thomas@gmail.com>
Date:   Tue Feb 21 09:33:47 2017 +0100

    Remove one typo in README

commit 0d9f6d83e4faf1fd8649d0135b10b6aab46a8119
Author: Forrest L Norvell <forrest@npmjs.com>
Date:   Wed Aug 10 17:16:33 2016 -0700

    ci: guess support for Node 5 is already gone?

commit d1ec4dfb4c3941b1f508a2ff748eacae64fc7e62
Author: Forrest L Norvell <forrest@npmjs.com>
Date:   Wed Aug 10 16:54:59 2016 -0700

    ci: square up versions
    
    Also replace no-op "before_script" with current "before_install".

commit 98d21fa6fd904eafa5637dd5ae75510f5fe34a2f
Author: Daijiro Wachi <daijiro.wachi@gmail.com>
Date:   Tue Jan 5 19:39:02 2016 +0100

    gitignore node_modules

commit 5fcf957b01d3ce5ad3ffde51a5fd6d8178e23354
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jun 23 16:43:42 2016 -0700

    5.1.5

commit a1624bccec1ec9cfdbbcb4b2d2fd56273664442e
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jun 23 16:29:31 2016 -0700

    Minimize distribution

commit c27be355706efd492bb469f99fc386aa3d9ebf29
Author: Daijiro Wachi <daijiro.wachi@gmail.com>
Date:   Tue Jan 5 00:47:38 2016 +0100

    Make symlink errors non-fatal when reading a package tree

commit eb24d2508da745233af93769596ff1d963f801be
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 19 11:31:31 2016 -0700

    5.1.4

commit 64b6de4afd485a7d50a34382b602123e9d1ea71f
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 19 11:30:37 2016 -0700

    Fix bug in unwaterfalling that dropped parents
    
    Previously as children were added their parent's were set and during the
    refactor to remove the waterfall of callbacks this was dropped by mistake.

commit d9fc4f3f4c8220e00a9a729272f6008185c4da5b
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Mon May 16 18:04:14 2016 -0700

    5.1.3

commit 4d3a46c1af921aaeb577c4196168a57d1ac05b48
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 12 02:32:11 2016 -0700

    Don't mark a module as linked if ONLY its node_modules is linked

commit cb31e32429152a49fd4bfc37cefadd149e0ce7c5
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 12 02:29:27 2016 -0700

    Unwaterfall the chains of callbacks

commit daac9fbd4dd927e3d2109b2befdacb719f571c2c
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 12 01:56:47 2016 -0700

    Switch resolve to join where resolve is unneeded

commit 2ed40c4654804f2a5ddb7b0b2c509080731eea6b
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Sep 24 22:43:16 2015 +0000

    5.1.2

commit 8aa335e252b0af61e90330d3424a59e385800ad9
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Sep 24 22:42:34 2015 +0000

    Fix use of the now not always there name attribute

commit 11f5ecd539a6c3068b379a8cf392d46942b720ad
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Sep 24 00:14:09 2015 +0000

    5.1.1

commit 8460bbc607d7d9bb98c56dadd64fc037ebc3f520
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Sep 23 21:52:06 2015 +0000

    Stop intuiting package names
    
    This originally came in as a part of 99cc6a7 as rpt was being
    refactored to have fewer fatal conditions and to produce more
    normal output. It turns out that it's VERY useful to npm to be
    able to distinguish between "no package.json" and "package.json
    with only name=dirname".

commit fae66436b710772765968fedf9c918676b29f720
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Sep 23 21:50:47 2015 +0000

    Make selflink test regexp based
    
    Because race conditions in read-package-tree can produce different but valid
    results depending on the order directories are read in.

commit 8c61a3bbeac6bfab524f44e0d33e590c77c426b5
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Sep 23 21:50:09 2015 +0000

    Allow regexp based tests

commit 9c8baac5c966f4976cfc4de6caafe58299d7a51e
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Fri Jul 17 03:15:08 2015 +0000

    5.1.0

commit b51e5056ff72f04e11e9d6ab7ecba94e60c049f8
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jul 16 13:49:55 2015 +0000

    Support filtering what gets included in the tree

commit 5952414124ac36722988b097e8e79166fcb2a15b
Merge: 8a0dd455 57ab023d
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jul 16 16:05:22 2015 +0000

    Merge tag 'v5.0.0'
    
    5.0.0

commit 57ab023d0a50214b5ea73887adb874723a4b0232
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Tue Jun 30 20:43:20 2015 -0400

    5.0.0

commit f10e6f61c00e256b14f0efad61bd288b1bcba0d2
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Jun 30 20:42:37 2015 -0400

    Bring docs up to date

commit 99cc6a7c8f748192bd0ffd677af188151c34cfb9
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Jun 30 19:17:55 2015 -0400

    Make errors reading & parsing package.json files non-fatal
    
    Instead record them and continue– npm needs this to be less
    crashy around bad data.

commit 8a0dd4555b02d1c7fe95c07eec2478466618160e
Author: isaacs <i@izs.me>
Date:   Sun May 31 20:12:53 2015 -0700

    tap@1.2.0 and travis-ci

commit 14162fb39841acac16ecaad5e9b79e65b430a1fb
Author: Rebecca Turner <me@re-becca.org>
Date:   Sat Apr 25 13:25:38 2015 -0400

    4.1.0

commit 38207e7ae24b08efa3ec920634a88af4c6456e9e
Author: Rebecca Turner <me@re-becca.org>
Date:   Fri Apr 24 07:23:44 2015 -0400

    Paths in linked directories need to maintain the path name passed in originally
    
    So we track the logical path name– the one that was passed into to start with,
    this is what goes in the .path attribute, and the physical path name, which
    is the version that starts with the realpath of the starting root. This is
    what goes into the realpath attribute of Node objects. Link objects are
    unchanged.

commit 48609748bbf277147e09ded9340ba7d86f4f87f1
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Apr 22 20:24:51 2015 -0400

    4.0.2

commit e3d3721dcc74afe3f11119d650c27e0bfb80f079
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Apr 22 20:22:07 2015 -0400

    Fix bug with overzealous link marking
    
    Specificaly, if the root of the tree or ANY parent of the root of the tree
    were a symlink then every node in the tree would be flagged as being in a
    symlink.

commit 798ed8b2508261ad2efe3a147da0cc45b83a3e20
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Apr 7 15:10:39 2015 -0400

    4.0.1

commit 73ad938e9c4e6fddc7dbfe9a9c8475f948ac8f5e
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Apr 7 15:00:21 2015 -0400

    read-package-json@2.0.0
    
    Because I probably shouldn't commit things late at night. =(
    This modules doesn't use normalize-package-data, so adding
    it did nothing. What I actually wanted to do was update
    read-package-json, which I do here.

commit defe8eda3be00788b1f9c504db07495040bb0e73
Author: Rebecca Turner <me@re-becca.org>
Date:   Mon Apr 6 23:59:32 2015 -0400

    4.0.0
    
    Major version bumping this due to the new version of normalize-package-data
    that in turn changes how dependency URLs are normalized.  In particular,
    github shortcuts are left as shortcuts now, instead of being expanded into
    URLs.

commit 17a81cac19f7374915de84bd7a289a5abad84c74
Author: Rebecca Turner <me@re-becca.org>
Date:   Mon Apr 6 23:58:09 2015 -0400

    normalize-package-data@2.0.0

commit 5e91322b0c25f1412823b831f6f7f98ad98e740e
Author: Forrest L Norvell <forrest@npmjs.com>
Date:   Mon Mar 9 23:15:01 2015 -0700

    src: reformat according to `standard`
    
    Also, 'package' is a no-no identifier in ES3, ES6, and ES5 strict mode,
    so changed it to the more nonconfrontational 'pkg'.

commit 20da8f80bd6cab9e4311492ac44900cba2438587
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Feb 18 04:49:04 2015 -0500

    3.0.0

commit d25d5aecc39fce01de0fcef5f97a336fa82ccf12
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Feb 18 04:32:05 2015 -0500

    Return error objects if we run into an error reading a package.json

commit e8806e9035ddb079f10d705b77d29d285bbfc0b4
Author: Rebecca Turner <turner@mikomi.org>
Date:   Wed Feb 4 05:02:58 2015 -0500

    2.2.0

commit 76e80d9bf23b457709784a09742f9eae7f2a77f3
Author: Rebecca Turner <turner@mikomi.org>
Date:   Wed Feb 4 05:02:42 2015 -0500

    Skip any dot-dirs in node_modules, not just .bin

commit b4531e0b5a4618c4cf6b1829bcbaca005ebd3341
Author: Rebecca Turner <turner@mikomi.org>
Date:   Sun Feb 1 17:55:49 2015 -0500

    2.1.0

commit 9877fba3a9768059e66cd2e9b945545ae6358137
Author: Rebecca Turner <turner@mikomi.org>
Date:   Sun Feb 1 17:48:21 2015 -0500

    Store parent to allow bidirectional tree traversal

commit 94838dbb5bd7667c75bb187e9f15f44447d3ba9e
Author: isaacs <i@izs.me>
Date:   Tue Sep 2 17:06:47 2014 -0700

    v2.0.0

commit e542d8fe2e4db9f44850cf21554c72d8429ec30e
Author: isaacs <i@izs.me>
Date:   Tue Sep 2 17:06:22 2014 -0700

    Tests for Node/Link objects

commit db7048297e5b64a1e86d35f5e7f5253337668410
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 17:56:48 2014 -0700

    Handle Node and Link objects properly

commit 10d6f6d0cdb5c274d6df2a3f8dc4f70473a90385
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 16:00:49 2014 -0700

    v1.0.0

commit 437be4d0cd50e5ff58e4b150c76e76cbba3fe6b4
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 16:00:44 2014 -0700

    add symlink type for windows' benefit

commit d8b7143da61f1012a157a60fd18a277dafb5ce71
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:59:37 2014 -0700

    the code

commit 09507f9eec15ae5cfee8a6878bc2db1a4a49ba44
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:55 2014 -0700

    tests

commit 125d5439c0ee03ef6c75c209bedbe3db01761232
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:26 2014 -0700

    isc

commit 72718d666dde2ca57adff74683dc476890a1b8b3
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:21 2014 -0700

    package.json

commit 07afa9a7843dc67428e9b08ae7d39639328f4757
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:15 2014 -0700

    readme
======================: FILES :======================
======================: BRANCHES :======================
======================: LOGINFO :======================
commit a0725a5b6d4210d96229f3e5e4e21d939e80b780
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 23 15:21:23 2022 -0400

    new ver

commit 44e942ccaf6eb32ff0d2c43e6d86233d2395d248
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 23 15:19:29 2022 -0400

    added env vars for z3 path and cve advisory url

commit 91d5cf22bda585f519dfe635b48fedf0c933641f
Author: cassanof <federico.cassano@federico.codes>
Date:   Mon Aug 8 15:37:15 2022 -0400

    built with older glibc

commit 8ab1fb871fe9471045c8b3f3fd2668cb15c8d7cc
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 15:19:49 2022 -0400

    undo LD_LIBRARY_PATH

commit 6c51e7f8309b4176c1a72d9a4a70147d9bcdfc38
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 15:10:28 2022 -0400

    run with LD_LIBRARY_PATH

commit 132c686e7b7fd392fc75fae2207cbae131cf8f4a
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 14:58:04 2022 -0400

    bump ver

commit bc33b00991cbe16d76f7396545ad55da45869b0c
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 14:57:43 2022 -0400

    doing some crazy dynamic linking hack

commit cec8eb8a6095239cec2b0756d03735b31dade427
Author: elleven11 <federico.cassano@federico.codes>
Date:   Mon Aug 8 14:51:16 2022 -0400

    out gitignore

commit 9f34fd1e84bd10e8e11b39593ad8893f05ee7e2e
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Aug 4 23:08:09 2022 -0400

    added files to publish

commit 78f2c975ff78923b34e0043ecdb2277412360804
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Aug 4 22:59:59 2022 -0400

    changed bin name

commit ed4e1516f8fea162ad60a39f5512526410aa8b0c
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Aug 4 22:52:10 2022 -0400

    arborist package

commit 6411f84034c94883e4ed35bb339e68f3ddb78cc1
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 2 17:46:21 2022 -0400

    publish 2

commit 6405a06bb6803fec66defcaca5e4a653f03dc682
Author: elleven11 <federico.cassano@federico.codes>
Date:   Tue Aug 2 17:44:53 2022 -0400

    publishing

commit 07f0115806d9eef220496c531f075e593602d438
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 27 18:30:17 2022 -0400

    Add dep, remove debug print

commit 79e807423cfd39d0cf7fbfc23585e779bfe5f02b
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Jul 26 10:37:21 2022 -0400

    print url failure too

commit 3bad92e2746f2b562f3fad795baa14f8817f8947
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 25 18:22:03 2022 -0400

    Fix proxy stuff

commit 3de9d22724993b33d75a38c81b87cc71842a5701
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 25 14:35:56 2022 -0400

    use cached server

commit 866b45fd23b6352b189f6f1191c1cfcdf7e3d2e9
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 25 10:19:54 2022 -0400

    Only fetch vulnerabilties if we need them

commit 02bdd77be06e5649caf41bf0b33e442fa349663d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Jul 21 15:36:38 2022 -0400

    include prereleases in CVEs

commit 1fa7a00f96e01863e181927791e11b26e3a2132e
Merge: 63b89b31 0e98d6cb
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Jul 21 14:17:36 2022 -0400

    Merge pull request #1 from cassanof/main
    
    Minimize CVEs

commit 0e98d6cb91db051c4bc27e31cee1eee6d5531791
Author: elleven11 <federico.cassano@federico.codes>
Date:   Thu Jul 21 13:20:20 2022 -0400

    changed advisory url to npm ecosystem

commit 1c32a089db5bd6156cb712ca234556725a601f86
Author: elleven11 <federico.cassano@federico.codes>
Date:   Wed Jul 20 23:42:11 2022 -0400

    added cve badness

commit 63b89b31edef3a6554095ec74ec995814f7b7833
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Apr 10 12:44:34 2022 -0400

    Add disallow cycle args

commit acfbf74826ee71083ec9fbce9ac8d1c4df76ba76
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Mar 2 15:06:59 2022 -0500

    re-solve

commit 5e7e4c92b2ce795247dc523c8dc560b0878e6128
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Nov 23 14:00:45 2021 -0500

    bug fix for oldness cost

commit 4b3f7b8ed6238fd273c8437d3e826a2aef1f7946
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Nov 18 10:01:15 2021 -0500

    Flexible options in arborist

commit bdbe7db676dec8f485474c465d963bb4adf54e5d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Nov 14 22:41:16 2021 -0500

    Send minimization objective to PacSolve

commit 8af7d1ce32b13010baaf827251b850c62c2c1e71
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Nov 7 17:35:37 2021 -0500

    cleanup commented dead code

commit 7e1acebf4a16f955800d23e8d9f6ab3d8c2bffcc
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Oct 18 16:41:23 2021 -0400

    disable solving dev deps, for now

commit 7a5d8b2df73d661b0665ae9103ef4c03b1696f0b
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Oct 12 09:33:33 2021 -0400

    Add explore only option

commit 5a21ec31b8161c5ba3220708cd6eacf55ad1a87f
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Tue Sep 7 13:26:44 2021 -0400

    Update JSON format

commit edae915879ecebbf3f3815fd0d529ee87b464ed8
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Aug 27 17:55:55 2021 -0400

    Post-install dev dependencies via hack

commit ed4d16ec6b7a9b9e9eed658a4d66ba985c63f345
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Aug 8 14:04:15 2021 -0400

    Stable, working solver

commit c0f7c7ef3da98de65593db03303c7e055262e3ba
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sun Aug 8 00:05:36 2021 -0400

    Fixed some bugs, hit a bug in Z3

commit d4c7e1a8167b3624be831a5c9cf22064fce03092
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Aug 6 11:46:59 2021 -0400

    prepare code to test tighter reachability

commit c1f6636a15ae9510bc4d4c43544fa6b005cb0385
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Aug 5 23:39:43 2021 -0400

    Finish randomized property testing, used it to find bugs and fixed them

commit af71f5a06eb973fdaef0871ba4fdcbf637378031
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Aug 5 22:27:56 2021 -0400

    Get interpreter to work, testing framework, and fix definitions

commit f91c0669d0b335129b2cea4171a11fccb689943f
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Aug 5 14:12:54 2021 -0400

    tmp

commit 864f78256436301bc80a224ea18403c28f50116c
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Aug 4 14:46:47 2021 -0400

    prepare to rewrite constraint interpretation

commit 492dee6065d28906eab4d5d50440e04f6a73cce0
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Aug 2 21:33:56 2021 -0400

    Work out in comments the logic for NPM -> Rosette translation

commit bbcf563d9807ff1713782a97cbfd97b8fdfffd92
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Aug 2 16:14:10 2021 -0400

    Seem to be producing reasonable-ish JSON. Now need to make smaller

commit e4791d9a932b571bd51db8a687b2766173f9dfba
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sat Jul 31 22:40:00 2021 -0400

    Commit before hacking

commit 27f4e1ea6b3cd91bbe0f07684b42e9454f0b5619
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Jul 30 20:59:09 2021 -0400

    Fix 1 bug, now need to prevent SO

commit e3d43a6e72817dd55b6df752859564696615b24a
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 19:49:30 2021 -0400

    Re-enable cleanup code

commit f2f6e3c734ce3f74666d8d6f71b3be0345bded16
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 19:14:53 2021 -0400

    hacking

commit be31b992911dd1b6d21f866105906a35547f6417
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 18:53:54 2021 -0400

    hacking

commit b7cc54ac649dd2dce602868a611f6a468fca2518
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 13:49:38 2021 -0400

    did undo

commit 5ac4a73f7cc6a4f49e1778dd53a7ffee7d3faefc
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 12:06:15 2021 -0400

    UNDO ME

commit 704ed641bd6fd514e7ed8f9ba52e7ee77cc4173d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 11:33:42 2021 -0400

    Added parsing and eval of DSL, not yet tied in

commit d1771250e697c68aba00113c24bdddfb9933c385
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 11:01:43 2021 -0400

    Hack more on dsl

commit 8d32cf9431321fdbeef72f788b81bee97367c939
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 28 10:59:07 2021 -0400

    Hack more on dsl

commit ba959b79198fb8e98494a4d6a3a7979eabc26423
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Mon Jul 26 17:12:41 2021 -0400

    Hackon expr dsl

commit 9d88c3f7657f9c5debaf38ea6790bfdf3caee04d
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sat Jul 24 23:14:38 2021 -0400

    Add nicer error when a package can not be found

commit f598d5fe282cc57879f02c604613b7528464ffd1
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Sat Jul 24 19:30:44 2021 -0400

    Rename rosette option, check for NaN when parsing version numbers

commit 2107d5a1392d9e6ab092ef7a1e0c3b2d5d5e2c45
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Fri Jul 23 17:51:11 2021 -0400

    Properly decode Rosette results into (precise!) arborist trees

commit 57fd80291994388f4895ab0756b332913d13a4b0
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Thu Jul 15 10:12:04 2021 -0400

    First working solve!

commit d2bde40fe27455389b7fdfefa0ed921378076f17
Author: Donald Pinckney <donald_pinckney@icloud.com>
Date:   Wed Jul 14 22:47:59 2021 -0400

    Work on solving with rosette

commit b3cc0d7bc4c9e87ff1a31e52c4c10aa47a0ab489
Author: isaacs <i@izs.me>
Date:   Tue Jun 29 11:24:44 2021 -0700

    2.7.0

commit d0f600e5c8a5cf9f9dcc041d66a588eb88e57d7f
Author: isaacs <i@izs.me>
Date:   Mon Jun 28 10:03:03 2021 -0700

    feat: make node.target return this for non-links
    
    This gets rid of a lot of `tree = node.target || node` everywhere, by
    making `node.target` return `node` when `node` is not a Link.
    
    Caveat is that `if (node.target)` is no longer a thing we can do to test
    for link-ness, but it's more clear in those cases to use `if
    (node.isLink)` if we want to know if the node is a Link.
    
    PR-URL: https://github.com/npm/arborist/pull/298
    Credit: @isaacs
    Close: #298
    Reviewed-by: @isaacs

commit f06445acbfa3b6b04b67ad2b47c9f845bd687cc5
Author: nlf <quitlahok@gmail.com>
Date:   Fri Jun 25 12:28:19 2021 -0700

    fix: pass integrity to pacote.extract
    
    when crackOpen becomes true we were extracting the content through
    pacote without providing an integrity, because of this pacote was
    creating its own internal ssri IntegrityStream that uses the default
    algorithm and piping the response data through that for reasons.
    when the default algorithm differs from the current one, which is
    often the case with older packages that had sha1 digests, we were
    throwing an EINTEGRITY error attempting to compare the old and
    correct sha1 to a new and unknown sha512 (the default). by passing
    the node's current integrity value we ensure that pacote compares
    the sha1 to a sha1 which works as expected.
    
    PR-URL: https://github.com/npm/arborist/pull/297
    Credit: @nlf
    Close: #297
    Reviewed-by: @isaacs

commit 5a4c1062aa7d0ca228fca20c6835a6a26e434f89
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Jun 16 12:42:39 2021 -0400

    fix run unchanged links lifecycle scripts
    
    Users expect workspaces (or regular linked deps) to run their prepare
    lifecycle script on every reify, since it's often used as some form of
    compilation step and should run even though that node hasn't changed.
    
    Fixes: https://github.com/npm/cli/issues/2900
    
    PR-URL: https://github.com/npm/arborist/pull/290
    Credit: @ruyadorno
    Close: #290
    Reviewed-by: @isaacs, @nlf

commit ab0d8f2b9aea436a548b3a418f254af181e8f084
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Jun 25 17:07:41 2021 -0400

    fix: node.isDescendantOf follows fs hierarchy
    
    Previously, the `node.isDescendantOf` method would only check for direct
    parents of that node, this may cause unexpected side effects on build
    ideal tree and reify when working with linked dependencies.
    
    This change modifies it so that `node.isDescendantOf` now looks at
    `node.resolveParent` (making sure `fsParents` are included in the
    lookup) to determine wether that node is a descendant of another.
    
    This also made it possible to refactor the logic that checks for an
    `external` dep in build-ideal-tree to use `node.isDescendantOf` instead
    of a regex check in the realpath of the link.
    
    Relates to: https://github.com/npm/cli/issues/2900

commit 9c49a6f52a9400fea8d6db60ffae8ad7bffa59f6
Author: isaacs <i@izs.me>
Date:   Thu Jun 24 14:04:17 2021 -0700

    2.6.4

commit 5d2624fb31a0cd77b31659f3c5cf1adf92a18a56
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Jun 22 19:46:08 2021 -0400

    chore: @npmcli/package-json refactor
    
    Removes lib/update-root-package-json.js in favor of using
    @npmcli/package-json for reading and modifying package.json during
    reify.
    
    Relates to: https://github.com/npm/statusboard/issues/368
    
    PR-URL: https://github.com/npm/arborist/pull/295
    Credit: @ruyadorno
    Close: #295
    Reviewed-by: @wraithgar, @nlf

commit 42b952e0b25eb4cf31c817a5133379437564e2e2
Author: isaacs <i@izs.me>
Date:   Fri Jun 18 16:37:45 2021 -0700

    fix(diff): walk target children if root is a link
    
    This expands the behavior that was previously only done for global
    roots, but should really be done for _any_ root dir that is not accessed
    via its realpath.
    
    Fixes: https://github.com/npm/cli/issues/3431
    
    PR-URL: https://github.com/npm/arborist/pull/294
    Credit: @isaacs
    Close: #294
    Reviewed-by: @nlf

commit 1c295c0221e71d7762599a4d5a2f7d7f9d4dbeff
Author: nlf <quitlahok@gmail.com>
Date:   Fri Jun 18 10:06:58 2021 -0700

    fix: do not try to inflate a fresh lockfile
    
    when running an updateAll, we use Shrinkwrap.reset() to empty and reset
    the lockfile metadata. however, due to _inflateAncientLockfile having a
    check on meta.originalLockfileVersion, we need that property to be set
    on a freshly reset lock so that _inflateAncientLockfile knows it has no
    work to be done.
    
    PR-URL: https://github.com/npm/arborist/pull/293
    Credit: @nlf
    Close: #293
    Reviewed-by: @ruyadorno, @isaacs

commit 8b161b005ab3d9969db58a4fe84196066837f304
Author: isaacs <i@izs.me>
Date:   Fri Jun 18 14:33:54 2021 -0700

    bin: allow turning off timer display with --timers=false

commit 970c97618e8fe89bdb67b3bd257fa0573d27381b
Author: isaacs <i@izs.me>
Date:   Wed Jun 16 09:35:29 2021 -0700

    2.6.3

commit 271dd5ff561a9122efca4ffc2954808a5c7453c8
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Jun 10 17:27:58 2021 -0400

    fix extraneous deps on load-actual
    
    When loading an actual tree sometimes extraneous deps were not being
    properly marked as so, since they were not really marked as extraneous
    at the moment of reify, so in order to be strictly correct we need to
    recalculate deps at load-actual in order to make sure extraneous deps
    are properly marked as such.
    
    Related to: https://github.com/npm/cli/issues/2554
    
    PR-URL: https://github.com/npm/arborist/pull/289
    Credit: @ruyadorno
    Close: #289
    Reviewed-by: @isaacs

commit 590fa1813c0201c75b1fa2af0364b4450fbb818e
Author: isaacs <i@izs.me>
Date:   Tue Jun 15 12:26:19 2021 -0700

    ensure node.fsParent is not set to node itself

commit ff35994c7a2ac9cb88e6c27f0e9a45743a611c35
Author: Daniel Park <gimli01@github.com>
Date:   Thu Jun 3 17:15:11 2021 -0700

    fix: removes [_complete] check to apply correct metadata
    
    Closes #2606
    
    PR-URL: https://github.com/npm/arborist/pull/287
    Credit: @gimli01
    Close: #287
    Reviewed-by: @nlf

commit 31e73c97126d3d2f43a2b1fdef0865e56e7f3249
Author: isaacs <i@izs.me>
Date:   Thu Jun 3 11:17:32 2021 -0700

    fix(inventory) handle old and british forms of 'license'
    
    Once upon a time we allowed 'licenses' to provide an array of licenses,
    and some packages out in the wild use the British spelling 'licence'.
    
    Also, added a test for the otherwise uncovered behavior of being able to
    query for inherited properties, which is important for the packageName
    queryable field.

commit 3558012a4699bdf22c57f56d0fd23d6752a8c48b
Author: isaacs <i@izs.me>
Date:   Wed Jun 2 17:28:52 2021 -0700

    use published proc-log module

commit 09def088190f9e2ab35c3ae439ecdbc0d135cbf0
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jun 2 10:30:46 2021 -0700

    2.6.2

commit c9880ef28a4637190d9641bb1024e4e57957438a
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jun 2 10:27:20 2021 -0700

    chore(package-lock): rebuild package-lock

commit d53fd8161735db93cf25a610ebb3f3e140b45c62
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jun 2 10:21:01 2021 -0700

    npm-registry-fetch@11.0.0

commit 31fd1c90b4c9216fcdd963b942d86ace7f34676b
Author: isaacs <i@izs.me>
Date:   Fri May 28 11:39:20 2021 -0700

    2.6.1

commit 05d3a1418e9a2ce2525aefa734f8382049d36f01
Author: isaacs <i@izs.me>
Date:   Mon May 24 13:44:18 2021 -0700

    Properly diff shrinkwrapped nodes without metadata
    
    If a node was included in a shrinkwrap, _but_ that shrinkwrap lacked
    resolved and integrity fields, then updating the shrinkwrapping node
    would not properly diff the children, treating any updates to them as a
    `null` action, even if the version changed.
    
    With this update,
    
    - Any version change is treated as a `CHANGE` action
    - Any lacking integrity is treated as a `CHANGE`, unless:
      - neither actual nor ideal have integrity, and
      - resolved is _also_ lacking, and
      - versions match.
    
    That second case (matching versions, no resolved, no integrity) is
    important to propery support git dependencies and link targets.
    
    Fix: npm/cli#3196
    
    PR-URL: https://github.com/npm/arborist/pull/286
    Credit: @isaacs
    Close: #286
    Reviewed-by: @wraithgar

commit 2ead1e8588cc0cb424e577de9fc561f47d3eb8ab
Author: isaacs <i@izs.me>
Date:   Mon May 24 13:18:49 2021 -0700

    Do not add metadata to node if versions mismatch
    
    When a Node is added to a tree, and lacks resolved and integrity values,
    but its path exists in the metadata source (shrinkwrap or lockfile), we
    apply the metadata that we know to the Node object.  However, we should
    _not_ do this when the version doesn't match, because that means it's a
    different thing.  In those cases, we should just go ahead and let it
    lack the metadata, so that we know to update it later.
    
    This was resulting in very strange cases where the version gets updated,
    and the lockfile and hidden lockfile reflect the change, but the actual
    package contents in node_modules were not updated, because reify thought
    it was the same bits.
    
    Fix: npm/cli#3297
    Fix: npm/cli#3196

commit 66b4db3f9d36997e1f0a5ecb58a160d87eb0be0b
Author: isaacs <i@izs.me>
Date:   Mon May 24 11:16:20 2021 -0700

    fix registryServer usage in benchmark script

commit 523aa569289073d692de833f5434bc2f9ab93c00
Author: isaacs <i@izs.me>
Date:   Wed May 19 14:01:53 2021 -0700

    2.6.0

commit 114b09d4b8bb182281406af4183b10913534393e
Author: isaacs <i@izs.me>
Date:   Wed May 19 13:17:32 2021 -0700

    rebuild: limit to specific workspace list
    
    PR-URL: https://github.com/npm/arborist/pull/284
    Credit: @isaacs
    Close: #284
    Reviewed-by: @ruyadorno, @nlf

commit 8c7a9b25064fcd8bc684b5f38625899edaf7a649
Author: isaacs <i@izs.me>
Date:   Wed May 19 12:51:53 2021 -0700

    diff: include extraneous children in filterSet
    
    This is important so that we can prune extraneous nodes when limiting to
    a specific set of workspaces.  Any extraneous children of nodes in the
    filterSet will be included in the filter set (but *their* dependencies
    will not be walked).

commit ecde0e38104e98451e4f02f5f23cdd63699ced4c
Author: isaacs <i@izs.me>
Date:   Wed May 19 12:17:00 2021 -0700

    include extraneous deps in workspaceDependencySet

commit df10bef7599e3b639f1561e8ea233fdabdedb3be
Author: isaacs <i@izs.me>
Date:   Wed May 19 12:09:09 2021 -0700

    add prune to bin

commit 39a55c1078b39db4730e6b12ae2865d6cb7f6ef3
Author: isaacs <i@izs.me>
Date:   Tue May 18 08:51:01 2021 -0700

    limit reify auto-audit to the set of workspaces provided
    
    Re: https://github.com/npm/arborist/pull/284#issuecomment-843230026

commit 26c05d50404789efcc0b69031669da931d40841c
Author: isaacs <i@izs.me>
Date:   Mon May 17 13:11:25 2021 -0700

    Make audit and audit-fix workspace-aware

commit 7e00f3e3a72656050f42ce6a559a26f194e51350
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:47:01 2021 -0700

    AuditReport: add filterSet option to limit what is audited
    
    This is required to do workspace-limited auditing and fixing.

commit 88d7b55ce44e9723e6aca1c3f5978c7a56796582
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:35:57 2021 -0700

    reify: Add/remove to/from workspaces, and save properly

commit ba761a6eaf1cf33e9ed34c88658a38dfb367fa5d
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:24:31 2021 -0700

    idealTree: Properly update deps in workspace targets

commit b094c41a0b1a7299d08d070b1a49eacd7387c15b
Author: isaacs <i@izs.me>
Date:   Mon May 17 12:20:54 2021 -0700

    Node.canDedupe() should be smart about fsParent deps

commit 86aa402cbee54e53e5d5e105784319cf972082cc
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed May 19 12:01:47 2021 -0400

    add extra info to node.explain
    
    Added to the result object of node.explain():
    - isWorkspace, boolean value, true when a node is a workspace
    - linksIn, array containing all links to a target
    
    PR-URL: https://github.com/npm/arborist/pull/285
    Credit: @ruyadorno
    Close: #285
    Reviewed-by: @isaacs

commit d5d1f353717ee9ab2c6c870a3005d0d6873e7a01
Author: Jordan Harband <ljharb@gmail.com>
Date:   Sun May 16 12:42:30 2021 -0700

    [meta] add missing "engines" field

commit 780adbd4423f7e5ea9ad8fa1cdc8989f40230553
Author: isaacs <i@izs.me>
Date:   Thu May 13 08:57:31 2021 -0700

    2.5.0

commit 71e962f7a10fd7c56e762efcafbe71629a2c53ed
Author: isaacs <i@izs.me>
Date:   Thu May 13 08:45:10 2021 -0700

    Arborist.workspaceNodes and .workspaceDependencySet methods
    
    This adds a simple way for an Arborist instance to turn a list of
    workspace names into a list of nodes, or a set of all deps (direct and
    transitive) that are relied upon by those workspace nodes.
    
    Note that this returns the *target* of the workspace, not the link in
    the root node_modules folder.
    
    PR-URL: https://github.com/npm/arborist/pull/281
    Credit: @isaacs
    Close: #281
    Reviewed-by: @ruyadorno

commit c7cabcfe94faf8d0daf394d056ca985bec9152d3
Author: isaacs <i@izs.me>
Date:   Mon May 10 10:02:52 2021 -0700

    2.4.4

commit a24a4a580c1bef53b14b6d607d9f307db5dd8b99
Author: Gar <gar+gh@danger.computer>
Date:   Thu May 6 13:54:40 2021 -0700

    fix(reify): properly save spec if prerelease
    
    Currently if you add a package w/ spec `*` (or with no spec, which
    defaults to `*`) arborist tries to do a semver.subset to see if it can
    use the spec that actually got installed. This fails if the new spec has
    a prerelease tag in it.
    
    This change fixes it so that if the spec was `*` it just goes ahead and
    uses the new spec no matter what, since no valid semver doesn't match
    `*` in this case

commit fe57602bc0b51298d5bc01ec10f7917d27b8fd06
Author: Gar <gar+gh@danger.computer>
Date:   Mon May 10 09:33:14 2021 -0700

    2.4.3

commit 571e9e4c9e910faf0b993fb0e6734f37e153bd87
Author: isaacs <i@izs.me>
Date:   Thu May 6 14:12:43 2021 -0700

    guard against locale-specific sorting
    
    Node will use the current environment's locale sorting for
    String.localeCompare.  Thankfully, String.localeCompare can take a
    second argument to specify the locale.  Up until Node 13, any valid
    argument provided to the function _may_ be respected if Node was
    compiled with Intl support, or would always be treated as `'en'`
    otherwise.
    
    The solution is to always set the locale to `'en'`.  An alternative
    solution would be to compare strings based on byte order, but this does
    not provide ideal ergonomis.
    
    To verify this, the locale is set in the test environment to `'sk'`,
    which has a significantly different alphabet, including sorting words
    starting with `'ch'` _after_ words starting with `'d'`.
    
    Re: npm/cli#2829
    Fix: #276

commit 736b90256871282e116d54d0e2b655d546171f05
Author: isaacs <i@izs.me>
Date:   Mon May 10 09:13:16 2021 -0700

    remove mutate-fs dep (no longer used)

commit c70b763d6f1ad57c44c8e19f59a52f5f5ce6ec08
Author: isaacs <i@izs.me>
Date:   Mon May 10 09:11:32 2021 -0700

    tcompare@5.0.6

commit 40b5d3013fabd81edf865796bb63195aa509d4c1
Author: isaacs <i@izs.me>
Date:   Mon May 10 09:02:57 2021 -0700

    json-stringify-nice@1.1.4

commit 12eb9b82f7bdd134e57ae089bd18dab2240d6618
Author: Gar <gar+gh@danger.computer>
Date:   Mon May 10 08:55:33 2021 -0700

    tap@15.0.9

commit 972a8d139b59926b97fcdf7d52847461c54e5fb8
Author: nlf <quitlahok@gmail.com>
Date:   Thu May 6 10:08:45 2021 -0700

    2.4.2

commit fd8b156efe18ec6dc02d2b43149cae3d2bebd4be
Author: isaacs <i@izs.me>
Date:   Wed May 5 17:18:27 2021 -0700

    audit: support alias specs and root package names
    
    When the root package has a name like `@magic/semver`, in a folder named
    something like `/path/to/magic/semver`, the audit logic would look at
    node.name, and see it as `semver`, and then report it as a
    vulnerability.
    
    Additionally, a dependency like `npm:mkdirp@0.5.1` would not be detected
    as a vulnerability, because the alias spec would never match against the
    semver range (assuming that the dependency name even was found as a
    vulnerability in the first place).
    
    The fix here is:
    
    1. Add Node.packageName getter, which returns the `name` field from the
      node's package object.
    2. Add this field as a queryable field in the inventory.
    3. Base audits off of the packageName field, rather than the name field.
    
    Fix: https://github.com/npm/cli/issues/3166
    
    PR-URL: https://github.com/npm/arborist/pull/278
    Credit: @isaacs
    Close: #278
    Reviewed-by: @nlf

commit e000b7b5dbc98d73d9ec84e25b026a6dca1c2f26
Author: Gar <gar+gh@danger.computer>
Date:   Wed May 5 14:26:45 2021 -0700

    fix(reify): do not clean up nodes with no parent
    
    Co-authored by @nlf
    
    When reify goes to add omits to the trash list, sometimes it adds things
    it shouldn't, such as top level nodes that are actually links, but
    they're only links elsewhere in the tree where they are properly placed
    (i.e. with the root as the parent).
    
    This PR prevents things like "npm install --production" deleting the
    contents of a linked dev dependency
    
    PR-URL: https://github.com/npm/arborist/pull/277
    Credit: @wraithgar
    Close: #277
    Reviewed-by: @nlf

commit cbcccc9adde002eea53fe2d792935ab0a406ebb2
Author: Gar <gar+gh@danger.computer>
Date:   Wed Apr 28 13:29:20 2021 -0700

    fix(add): save packages in the right place
    
    Right now where we end up saving a dep is not very well coupled to where
    the user requested it.  We are inferring more than we are checking for
    intention.  This moves us to more heavily lean on the `saveType` if
    given when adding a package into the dependencies.
    
    We also were not consistently inferring the saveType.  There was code in
    two places trying to do this, and either place used slightly different
    logic. This moves the logic into one place.
    
    Finally, we are more consistently making certain dependency types
    mutually exclusive, for instance dependencies and devDependencies.
    
    PR-URL: https://github.com/npm/arborist/pull/273
    Credit: @wraithgar
    Close: #273
    Reviewed-by: @nlf

commit 363db3a4d474272a7193e6ced4501c45c9861248
Author: nlf <quitlahok@gmail.com>
Date:   Thu Apr 29 12:33:19 2021 -0700

    2.4.1

commit e4a5fd298c0f1742d12d83d173e619aaaa1b6875
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 15:11:36 2021 -0700

    support resolvable partial intersecting peerSets
    
    In cases where a peerSet _partially_ overlaps another, we were
    previously treating that as a conflict, because not everything in the
    peerSet was being replaced.
    
    So for example,
    
    ```
    root -> (a)
    a -> PEER(w@1, x@1, y@1)
    b -> PEER(x@1.0, y@1.0, z@1.0)
    ```
    
    First we install, and get `w@1.1.0`, `x@1.1.0` and `z@1.1.0`.
    
    Then, we try to install `b`, and need to install the `1.0.0` versions of
    `x` and `y`.  We could replace `x` and `y`, but then `z` had no
    replacement, and was treated as an ERESOLVE mistakenly.
    
    Some work was required to make it still note when a not-replaced member
    of the peer set _is_ indicative of a conflict, because it depends on a
    version of a dep within the peer set that is not satisfied by the one
    being replaced.
    
    Fix: npm/cli#3152
    
    PR-URL: https://github.com/npm/arborist/pull/272
    Credit: @isaacs
    Close: #272
    Reviewed-by: @nlf

commit 1e8bb2cbf349622a9bc30fbd29062aa172572b72
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 09:22:56 2021 -0700

    Prevent and eliminate unnecessary duplicates
    
    When the root package tree bundles its dependencies, previously Arborist
    would treat that as a normal bundled dependency (rather than a
    transitive dependency bundled _by_ a dependency) and refuse to touch it.
    
    This resulted in a strange situation where npm would stubbornly refuse
    to modify the copy of npm-registry-fetch nested underneath its pacote
    dependency, even when pacote or nrf were updated explicitly, requiring
    the deletion of the node_modules tree in order to resolve properly.
    
    A `canDedupe()` method is added to the Node class, and this is used in
    multiple previously (slightly) duplicative code paths where we test to
    see if we can dedupe out a nested Node in the tree, thus both preventing
    and correcting the unnecessary duplicates that would otherwise have
    occurred.
    
    This does introduce the bug/feature/change where now installing a new
    package at the top level will cause npm to remove anything nested within
    the tree that could be deduped against it, as long as that nested
    transitive dependency is not contained in a dep bundle or shrinkwrap.
    
    PR-URL: https://github.com/npm/arborist/pull/271
    Credit: @isaacs
    Close: #271
    Reviewed-by: @nlf

commit 7926369ba1dce86bb0dbc86b327f64dc84d5ec33
Author: isaacs <i@izs.me>
Date:   Wed Apr 28 07:57:31 2021 -0700

    give reify/idealTree tests a longer fetch timeout
    
    Hopefully this makes the macos CI failures less frequent.

commit 85ae30b594d1c7d31a40ea8d4ccace8531628b72
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 15:52:24 2021 -0700

    update and dedupe all deps

commit 4dc4db52d8d2797efee0db194fe7f5d46554c8f7
Author: isaacs <i@izs.me>
Date:   Tue Apr 27 11:29:24 2021 -0700

    Show bundle/shrinkwrap info in printable Node output
    
    This was very helpful in debugging the issue with top-level
    bundleDependencies causing duplication.

commit 85774b1eae19ce3738a65cb9aa550977f73c51eb
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:42:12 2021 -0700

    2.4.0

commit ff8230a59382ef2c51e2740a64ffa87c931c30a1
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:10:12 2021 -0700

    chore(ci): increase test timeout

commit 2a671404bbca4f955d000b2d584e9567cb54caa4
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:01:49 2021 -0700

    chore(dependencies): rebuild package lock

commit 972d931007346c5512c7025f7519acd12c4aef7f
Author: Gar <gar+gh@danger.computer>
Date:   Thu Apr 22 11:01:02 2021 -0700

    npm-registry-fetch@10.0.0

commit 82a132ddd4a269896556f5b9f847c91a2b235ff1
Author: isaacs <i@izs.me>
Date:   Thu Apr 22 10:37:53 2021 -0700

    fix(load-virtual): Prevent excessive bundle deps listing in lockfile

commit e8e9691d7b591b252973141c7898db1cc482be25
Author: Wes Todd <wtodd@netflix.com>
Date:   Mon Apr 12 09:31:30 2021 -0500

    feat: add packumentCache option
    
    PR-URL: https://github.com/npm/arborist/pull/263
    Credit: @wesleytodd
    Close: #263
    Reviewed-by: @isaacs
    
    EDIT(@isaacs): Added test

commit 73a7b001b3dfa682e18fd8e5dfeecfd05f8db20a
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 16:43:30 2021 -0700

    Properly handle file:. dep when bundle deps present
    
    If a package had a dependency on `file:.` (ie, to create a symbolic link
    to the root project within `node_modules`), as well as a
    `bundleDependencies` list, the reifier got into a very strange state and
    would fail to resolve its promise, causing npm to exit with a `cb()
    never called` error.
    
    The solution is:
    
    - Do not do the extract-and-loadActual pass on dependencies that are
      links.
    - Do not create sparse tree folders for dependencies that are links.
      (This wasn't a part of the issue, just a weird inefficiency
      encountered along the way.  We created a dir, only to delete it and
      replace with a symlink later.)
    - Later on in the process, when we check to see whether a node has
      already been reified by virtue of having bundleDependencies, instead
      of merely looking at the package.json data, actually keep a list of
      nodes reified ahead of time in this way.
    - Lastly, do not run `preinstall`, `install`, and `postinstall` scripts
      for links before linking their bins.  We have to run `prepare` on link
      deps prior to linking their bins, but we should still be linking the
      bins ahead of running the other build scripts, like we do for non-link
      deps.
    
    PR-URL: https://github.com/npm/arborist/pull/268
    Credit: @isaacs
    Close: #268
    Reviewed-by: @nlf

commit 7ef8ec59eafda5cdba54155a7bde2769bbb88efe
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 11:01:42 2021 -0700

    color arborist bin logs

commit 6d3641ac27137e16f086e71d2d0c9dd88cbecc67
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 10:49:05 2021 -0700

    put some color in debug logs to make them easier to pick out

commit 6ecce7da828ba7e042327728a3876224f1c2a9b1
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 10:41:33 2021 -0700

    dim timers printed by arborist bin

commit 402bcf42b326e6d1e02afff69ccf2a896e4232dd
Author: nlf <quitlahok@gmail.com>
Date:   Tue Apr 20 10:02:11 2021 -0700

    fix: correctly handle diffing shrinkwrapped dependencies
    
    PR-URL: https://github.com/npm/arborist/pull/267
    Credit: @nlf
    Close: #267
    Reviewed-by: @isaacs

commit 02fb0b7f8dd7031ba17910c37b0afa3aaca4b087
Author: isaacs <i@izs.me>
Date:   Tue Apr 20 11:25:07 2021 -0700

    test on node 16
    
    PR-URL: https://github.com/npm/arborist/pull/265
    Credit: @isaacs
    Close: #265
    Reviewed-by: @nlf

commit f857b5d50a00bdd8081611ce91c42431b3b464b2
Author: isaacs <i@izs.me>
Date:   Tue Apr 20 11:24:52 2021 -0700

    update tap to work on node 16

commit f38517ddf6e1fc8194ea53f2fc5093c739d8c27d
Author: isaacs <i@izs.me>
Date:   Mon Apr 19 17:01:45 2021 -0700

    Correct shell quoting for windows cmd.exe

commit 380e85bc586cdc5bcbc63e2b9188c114dd827bff
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 15:03:18 2021 -0700

    use cannonical tap assertion names

commit a67124e3d3a8236fd16f11ae51def264a43a0eb1
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 14:58:25 2021 -0700

    Reduce out some mocks in reify test

commit 1f35051a140a92a9684c3fe9582a4117acac2da1
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 14:49:51 2021 -0700

    Replace require-inject with t.mock

commit 6d28730d2260b216a914521b39917489409200d8
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 10:40:57 2021 -0700

    use t.start() to spin up registry mock server

commit dc9c18edf0c8a4358f0d3185550b6943353f403e
Author: isaacs <i@izs.me>
Date:   Wed Apr 14 10:15:07 2021 -0700

    tap@15, update all deps, regen snapshots

commit 44cd2aee9fe157b2aebc978278d7acf88f23e9ce
Author: nlf <quitlahok@gmail.com>
Date:   Wed Apr 14 11:46:58 2021 -0700

    fix: correctly handle peer conflicts between peers
    
    PR-URL: https://github.com/npm/arborist/pull/266
    Credit: @nlf
    Close: #266
    Reviewed-by: @isaacs

commit 5a185fbea691a86668e873ed47fb8897192312ff
Author: isaacs <i@izs.me>
Date:   Thu Apr 1 11:26:08 2021 -0700

    2.3.0

commit 3e907ba27d847742693cbc4d38221f4b9fe135f5
Author: isaacs <i@izs.me>
Date:   Wed Mar 31 18:21:44 2021 -0700

    Provide currentEdge in ERESOLVE if known
    
    This provides another fail-safe for the CLI to report _something_ useful
    to the user when an ERESOLVE happens, if by some brokenness in our tree
    handling we don't have the node in the tree somehow to provide a current
    or peerConflict.
    
    PR-URL: https://github.com/npm/arborist/pull/259
    Credit: @isaacs
    Close: #259
    Reviewed-by: @nlf

commit ee504e023e0583fa8c6089ad44c057b7564f2257
Author: isaacs <i@izs.me>
Date:   Wed Mar 31 17:59:10 2021 -0700

    tree-check: add check for nodes with same path as root

commit e10dd8749b195949409b72e95f63f3e6b13e2d7e
Author: isaacs <i@izs.me>
Date:   Wed Mar 31 17:58:40 2021 -0700

    Link nodes to the root should have the root as a target

commit 040b6c3af5d755b79b7570643dd104f90b99134c
Author: isaacs <i@izs.me>
Date:   Tue Mar 30 10:39:40 2021 -0700

    idealTree: Add/remove to/from workspaces when set, not root
    
    PR-URL: https://github.com/npm/arborist/pull/258
    Credit: @isaacs
    Close: #258
    Reviewed-by: @nlf

commit ab558c0c2045d4ffa0337686c92296e0fb599133
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 17:32:44 2021 -0700

    idealTree: apply user requests immediately before buildDeps

commit 60988d19d5296cdec5c4edc1b43d6095b850a5cb
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 16:48:09 2021 -0700

    Show terse workspaces in printable output
    
    This is really important for debugging when "have workspaces been loaded
    yet" is a relevant consideration.

commit e3950bf709661c9f1b44a3d3d5aea3f64e918c3c
Author: isaacs <i@izs.me>
Date:   Tue Mar 30 11:19:39 2021 -0700

    loadActual: load workspaces when using hidden lock

commit 26016b9be1b1b7f47b98b4cbdea6f02f746719b9
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 16:40:33 2021 -0700

    loadActual: load workspace targets when links missing

commit 98a8f43a233a8c209ccc9cabd73eeac6f48ae9a3
Author: isaacs <i@izs.me>
Date:   Mon Mar 29 13:19:59 2021 -0700

    Make explicitRequests a set of Edges, rather than strings
    
    This is in preparation for the use case where explicitRequests includes
    edges from nodes other than the project root, so that we can add deps
    to workspaces.

commit 94c4d9c4931a23445b1426517446f2d56fcdd8f1
Author: isaacs <i@izs.me>
Date:   Fri Mar 26 11:50:56 2021 -0700

    json-stringify-nice@1.1.2
    
    Fixes sorting incorrectly when a dependency is set to an empty string
    
    PR-URL: https://github.com/npm/arborist/pull/257
    Credit: @isaacs
    Close: #257
    Reviewed-by: @nlf

commit a8a1e84f27094390d91005b7a67b9023ffad67df
Author: isaacs <i@izs.me>
Date:   Thu Mar 25 12:00:46 2021 -0700

    Correctly update actualTree after filtered reify
    
    This also corrects an issue where manually updating the package.json
    file would sometimes not be reified properly, if a new link target
    matches the one that was formerly reified.

commit c5d1b9fbff10af8fb13eba714c55a90fc9b49c84
Author: isaacs <i@izs.me>
Date:   Thu Mar 25 10:12:41 2021 -0700

    do not take a link's target when removing link from tree
    
    This causes major problems when moving links and targets between trees.
    When we move the link from one tree to another, it pulls its target,
    out, meaning that the target ends up becoming orphaned.
    
    Say there is a matching link and target in two different trees, A and B,
    and we want to replace the link and target in one tree with the link and
    target in another.
    
    If we move the target A to tree B first, then it replaces the target B,
    and link B is updated to point to it.
    
    Then, we move link A to tree B, replacing link B.  To do that, we move
    link B out of tree B, which _takes target B with it_, leaving the ported
    link A without a target in tree B.

commit dc03a68a74fa196acc581c131b00ceb03d0f5524
Author: isaacs <i@izs.me>
Date:   Thu Mar 25 09:54:36 2021 -0700

    printable: do not explode on links lacking a target

commit 5718c118eed4a14f4a7f8941e82957e1f174f8cb
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 17:37:00 2021 -0700

    Add 'workspaces' list for reification filtering

commit c8234d4c3b3dc4f23bcd0dace55d315ea137c755
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 12:46:59 2021 -0700

    bin: take -w/--workspace argument

commit d9e058df296e87e6b02e91f73a425e76e8b2b131
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 12:46:05 2021 -0700

    Add filterNodes option to Diff.calculate

commit d8eb545c1e40c8d4897735929da73acdbf396cc5
Author: isaacs <i@izs.me>
Date:   Wed Mar 24 12:46:37 2021 -0700

    notes about filtered reification

commit 9e324976ea5211dc24430a83928ca41b69e46b33
Author: isaacs <i@izs.me>
Date:   Tue Mar 23 16:58:24 2021 -0700

    Do not chownr the arborist root path
    
    Fix: https://github.com/npm/arborist/issues/252

commit b960b77357e7259abb2899b597d7a4a3dd80cbe4
Author: isaacs <i@izs.me>
Date:   Tue Mar 23 09:09:40 2021 -0700

    2.2.9

commit 22b2d13a0e65e296d46d6059a3dec5f5dc475bbf
Author: isaacs <i@izs.me>
Date:   Fri Mar 19 09:04:22 2021 -0700

    Never bundle when saving as peer/peerOptional
    
    There's a bit of logic in npm/cli that sets the `saveBundle` option to
    false based on the various `--save-xyz` flags.  It is easier and safer
    to just never bundle if we're saving a peer dep, in the one place where
    that decision is made.
    
    PR-URL: https://github.com/npm/arborist/pull/255
    Credit: @isaacs
    Close: #255

commit 5a4b58c1b784c9c646e515e92b4bea87b24cc49a
Author: James Chen-Smith <jameschensmith@gmail.com>
Date:   Wed Mar 17 01:01:06 2021 -0500

    fix: honor explicit prefix
    
    Honors explicit prefix.
    
    Signed-off-by: James Chen-Smith <jameschensmith@gmail.com>
    
    PR-URL: https://github.com/npm/arborist/pull/254
    Credit: @jameschensmith
    Close: #254
    Reviewed-by: @isaacs

commit 9792bb419fa510aa87e57d182330a617b7d92c29
Author: James Chen-Smith <jameschensmith@gmail.com>
Date:   Mon Mar 22 21:56:05 2021 -0500

    semver@7.3.5

commit 252371e3224f0c0584b0890ade86e529e135cd26
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Mar 11 15:10:08 2021 -0500

    2.2.8

commit fa16e093c7beeeafd3fffbe945564d38d3cf2321
Author: isaacs <i@izs.me>
Date:   Mon Mar 8 16:34:46 2021 -0800

    fix: respect link deps when calc peer dep sets
    
    * Show useful debug printing for virtual root nodes
    * Respect hidden lockfiles when symlink deps present. As long as the
    target of the link is in the shrinkwrap, and not newer.
    * Respect link deps when calculating peerDep sets
    
    Previously, we were not including link targets in the virtual trees
    where peer dependency sets are calculated.  Additionally, we were still
    using the path `/virtual-root` for the virtual node, even though this is
    no longer load-bearing.  (And, as of the recent change to the Node
    printable output, no longer necessary or particularly helpful for
    debugging.)
    
    As a result, a link dependency from the root node like `file:../../foo`
    would get resolved against `/virtual-root`, resulting in `/foo`, which
    of course does not match any Node in the virtual tree.  The outcome was
    an ERESOLVE error where the `current` Node is shown as having no name
    or version (because it is an unsatisfied Link).
    
    The solution is two-part.
    
    First, the path of the virtual tree root now matches the path of the
    Node that it is sourced from.
    
    Second, any Link children of the source node have their targets mirrored
    in the virtual tree, resulting in them being matched appropriately.
    
    The result is that a Link dependency can now properly satisfy a
    peerDependency.  Test shows an example of using a Link to a local Node
    as a workaround for a peerSet that otherwise would not be resolveable.
    
    This can of course be abused to get around valid peerDep contracts, but
    if they user takes it on themselves to use a local fork of a dependency,
    we should respect that in buildIdealTree as we do elsewhere.
    
    Fix: npm/cli#2199
    
    PR-URL: https://github.com/npm/arborist/pull/249
    Credit: @isaacs
    Close: #249
    Reviewed-by: @ruyadorno

commit 2657dcb87e299c4fa22ed26ebac9df4537b11213
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Mar 9 13:11:43 2021 -0500

    2.2.7

commit d5f73452c0a1f1aff034276d6762bd73d81ee006
Author: isaacs <i@izs.me>
Date:   Mon Mar 8 15:43:50 2021 -0800

    Do not revert a file: dep to version on bare name re-install
    
    Co-author: @wraithgar
    
    PR-URL: https://github.com/npm/arborist/pull/248
    Credit: @isaacs
    Close: #248
    Reviewed-by: @wraithgar

commit 31516bffec65c7485f20e90e159c8262c6c1fca0
Author: isaacs <i@izs.me>
Date:   Mon Mar 1 15:59:05 2021 -0800

    2.2.6

commit 63ec6dda3c5391a4c7010c11065417a966b605db
Author: kumavis <aaron@kumavis.me>
Date:   Mon Feb 22 15:32:14 2021 +0800

    Add edge.bundled flag, include in explain() output
    
    PR-URL: https://github.com/npm/arborist/pull/241
    Credit: @kumavis
    Close: #241
    Reviewed-by: @isaacs

commit 910f736fd81cf29263ca97beb01c3ea6f1423eaf
Author: Gar <gar+gh@danger.computer>
Date:   Thu Feb 25 09:15:25 2021 -0800

    2.2.5

commit 1ac05e01b5587893b52f4b548e0396e50cdd63fd
Author: isaacs <i@izs.me>
Date:   Thu Feb 25 09:00:42 2021 -0800

    fix: hidden lockfiles were not respected on Node v10.0-10.12
    
    * Polyfill withFileTypes option for fs.readdir
    
    This was causing hidden lockfiles to be silently ignored in
    node versions that did not support fs.readdir with this option.
    
    * @npmcli/installed-package-contents@1.0.7
    * other polyfills to make tests pass on node v10.1
    * tell node not to spam warnings during tests
    * Suppress warnings and fix up snapshots for v10.1
    * more aggressive snapshot cleanup for node pretty printing
    * ci: do not check linting on node versions that don't support it
    * ensure single source of truth for 'test' script

commit 6f99a5e7db8fe21ace364bf7533fe5447149cc25
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 12:25:54 2021 -0800

    2.2.4

commit d51647e17ee3f0947fb30e6adfa0ea16f99a4af9
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 12:18:58 2021 -0800

    Do not rely on underscore fields in package.json
    
    This also uncovered a bug where the yarn registry was being used when
    the npm registry should have been used.  This bug is also fixed in this
    commit, and was hidden by the fact that our package.json files on disk
    for yarn tests were placed there by npm v6, which put the proper
    resolved values in _resolved in the package.json file iteself.

commit c102725b53dfdde96a25dbb5cc1bed23876a9b80
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 12:20:36 2021 -0800

    read-package-json-fast@2.0.2
    
    cc: @kumavis
    Fix: #242

commit ddca494fef78f33134a517cf1d784a01c8629854
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 10:53:38 2021 -0800

    Do not remove global packages when updating by name
    
    Adds update.names to this[_explicitRequests] so that when we update a
    single named package in the global space, it doesn't read the entire
    global actual tree, resulting in a diff which tells reify to remove
    everything else.
    
    Fix: https://github.com/npm/cli/issue/2736
    Credit: @isaacs
    Reviewed-by: @nlf, @ruyadorno

commit 59946e70274af9d593175c3de8d76674f258a11e
Author: isaacs <i@izs.me>
Date:   Mon Feb 22 10:27:16 2021 -0800

    bin: turn --before=DATE into a proper Date object

commit b02a4d954a9a92bc0bd91ae5322d2a43df6ff93d
Author: isaacs <i@izs.me>
Date:   Thu Feb 18 15:08:23 2021 -0800

    2.2.3

commit f25367dbf1948ccf13a0726e26a42ae407011155
Author: isaacs <i@izs.me>
Date:   Wed Feb 17 14:04:34 2021 -0800

    Fix additional peerOptional conflict cases
    
    case D
    
    ```
    root -> (x, z@1)
    x -> PEEROPTIONAL(y)
    y -> PEER(z@2)
    ```
    
    case E
    
    ```
    root -> (x, z@1)
    x -> PEEROPTIONAL(y) PEER(z@1)
    y -> PEER(z@2)
    ```
    
    case F
    
    ```
    root -> (x, z@1)
    x -> PEEROPTIONAL(y) PEER(z@1) PEER(w@1)
    w -> PEER(z@1)
    y -> PEER(z@2)
    ```
    
    Case F properly reproduces the failure seen by installing
    ng-packagr@11.1.3 alongside typescript@4.
    
    Fix: #236
    
    cc: @kyliau
    
    PR-URL: https://github.com/npm/arborist/pull/237
    Credit: @isaacs
    Close: #237
    Reviewed-by: @isaacs

commit b0997c91083f1ebd1c4e8d4e996b7aa5e4c39ad2
Author: isaacs <i@izs.me>
Date:   Wed Feb 17 12:40:57 2021 -0800

    Prefer peer over prod dep, if specified in both
    
    Also, preserve the duplication if we update or modify the package.json
    file.
    
    Fix: https://github.com/npm/rfcs/issues/324
    
    PR-URL: https://github.com/npm/arborist/pull/235
    Credit: @isaacs
    Close: #235
    Reviewed-by: @nlf

commit 7e8b82472b60a047be6603746c82536f36c1d8d6
Author: isaacs <i@izs.me>
Date:   Wed Feb 17 12:21:48 2021 -0800

    Do not write package.json if nothing changed
    
    Need a similar fix for Shrinkwrap class.
    
    Fix: https://github.com/npm/arborist/issues/232
    
    PR-URL: https://github.com/npm/arborist/pull/234
    Credit: @isaacs
    Close: #234
    Reviewed-by: @nlf

commit aa9915301362eacd27bc7fa5a7d3d73a17895bbd
Author: isaacs <i@izs.me>
Date:   Thu Feb 18 14:58:55 2021 -0800

    Unpack shrinkwrapped deps not already unpacked
    
    We loop over the diff.leaves to find all the shrinkwraps that _must_ be
    unpacked ahead of time in order to complete the idealTree.  However, if
    the idealTree already contains the children of the shrinkwrap-containing
    module (because it's been previously installed and saved to a lockfile),
    then we saw the hasShrinkwrap flag, and assumed it had already been
    unpacked.
    
    This tracks a Set of all nodes unpacked for the purposes of reading
    their shrinkwraps, and only skips _those_ modules at unpackNewModules.
    
    Different approach than #233, without adding extra items into the
    diff.leaves, which can have the side effect of calling mkdirp more than
    necessary.
    
    Close: #233
    Fix: https://github.com/npm/cli/issues/2251
    Reviewed-by: @nlf

commit 4a3322d449bce34a3bcddd6eb1d2803c6392ffcd
Author: nlf <quitlahok@gmail.com>
Date:   Tue Feb 16 13:36:14 2021 -0800

    fix: skip optional deps with mismatched platform or engine
    
    PR-URL: https://github.com/npm/arborist/pull/231
    Credit: @nlf
    Close: #231
    Reviewed-by: @isaacs

commit a98d6fd812151d72fad025c1438c1129c707cf32
Author: nlf <quitlahok@gmail.com>
Date:   Tue Feb 16 13:49:17 2021 -0800

    add notes about new optional dependency behavior

commit 894fbef0aef933b6b348021d206ea9f38ecd66fc
Author: nlf <quitlahok@gmail.com>
Date:   Tue Feb 16 13:35:01 2021 -0800

    expand the platform-specifying-test-package fixture so it has a tarball and uses a completely invalid os
    
    also added an actual assertion to a build-ideal-tree test, and removed a test skip that we no longer need

commit a0f590c212a35120764878d2265b65d5ca0c744c
Author: isaacs <i@izs.me>
Date:   Thu Feb 18 14:14:35 2021 -0800

    @npmcli/metavuln-calculator@1.1.0

commit d407da7cdab7f4ad5fed73c47c8df16e7c518224
Author: isaacs <i@izs.me>
Date:   Fri Feb 12 16:57:48 2021 -0800

    default audit severity=high, vulnerable_versions=*
    
    Fix: https://github.com/npm/cli/issues/1875
    Related: https://github.com/npm/metavuln-calculator/pull/4
    
    PR-URL: https://github.com/npm/arborist/pull/230
    Credit: @isaacs
    Close: #230
    Reviewed-by: @ruyadorno

commit 7d5cb3d2474f64a21021f9018c2dc08b4562c929
Author: isaacs <i@izs.me>
Date:   Fri Feb 12 08:57:23 2021 -0800

    2.2.2

commit c2666af96c9b2a8b45fbd7603da20bf16a06d185
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 11 22:11:55 2021 -0500

    fix: deps of linked deps in package-lock
    
    When having optional dependencies of a dependency of
    a top-level link dependency, e.g:
    
        root -> LINK(a)
        a -> (b)
        b -> OPTIONAL(c)
    
        * c marked as extraneous
    
    Any optional dependency (and all its nested nodes) were marked
    as extraneous in package-lock due to `calcDepFlags` missing
    properly following the target of Link nodes.
    
    This changeset fixes it by properly following the result of the
    `treeverse.visit` method that will have already followed any
    link targets at that point.
    
    Fixes: https://github.com/npm/cli/issues/2505
    
    PR-URL: https://github.com/npm/arborist/pull/229
    Credit: @ruyadorno
    Close: #229
    Reviewed-by: @isaacs

commit 1d68907dca731c2b4c63fcf1ad98b61ab60facc6
Author: isaacs <i@izs.me>
Date:   Thu Feb 11 15:36:58 2021 -0800

    Allow --force to override conflicted peerOptional
    
    With a dependency graph like this:
    
    ```
    root -> (a, b@1)
    a -> PEEROPTIONAL(b@2)
    ```
    
    We do not install the peerOptional dependency by default, so even though
    `b@2` is included in the peerSet of `a`, it is not added to the tree.
    
    Then, the `b@1` dependency is added to satisfy root's direct dependency
    on it, causing the `a -> b@2` edge to become invalid.
    
    We then try to resolve the `a -> b@2` edge, and find that we cannot
    place it anywhere, causing an `ERESOLVE` error.
    
    However, because `b@2` is no longer a part of a peerSet sourced on the
    `root` node, we miss the chance to detect that it should be overridden,
    resulting in an `ERESOLVE` failure even when `--force` is used.
    
    This commit adds the check for `this[_force]` prior to crashing with
    ERESOLVE, so that cases that avoid our earlier heuristics still accept
    the invalid resolution when `--force` is in effect.
    
    Fix: #226
    Fix: https://github.com/npm/cli/issues/2504
    
    PR-URL: https://github.com/npm/arborist/pull/228
    Credit: @isaacs
    Close: #228
    Reviewed-by: @ruyadorno

commit 828990cbbe2e8e99f0f4d33f9c4fe88965306fb8
Author: isaacs <i@izs.me>
Date:   Thu Feb 11 14:29:38 2021 -0800

    bin: remove outdated ERESOLVE printing code

commit f3758731d2592394c75b8091553f24a778cc1cd2
Author: isaacs <i@izs.me>
Date:   Wed Feb 10 14:27:45 2021 -0800

    Do not ERESOLVE on peerOptionals not added to tree
    
    For these dependency graphs:
    
        # case a
        root -> (x, y@1)
        x -> PEEROPTIONAL(z)
        z -> PEER(y@2)
    
        # case b
        root -> (x) PEEROPTIONAL(y@1)
        x -> PEEROPTIONAL(y@2)
    
        # case c
        root -> (x) PEEROPTIONAL(y@1)
        x -> PEER(z)
        z -> PEEROPTIONAL(y@2)
    
    The peerOptional dependency is included in the peerSet, which would
    raise an ERESOLVE conflict at the peerSet generation stage, even though
    the peerOptional dependencies will not actually be added to the tree.
    
    To address this, this commit tracks the nodes which are actually
    required in the peerSet generation phase, by virtue of being
    non-optionally depended upon by a required node in the peerSet.
    
    If a conflict occurs on a node which is not in the required set during
    the peerSet generation phase, we ignore it in much the same way that we
    would ignore peerSet errors in metadependencies or when --force is used.
    
    Of course, if the peerOptional dependency is _actually_ required, to
    avoid a conflict with an invalid resolution present in the tree already,
    and there is no suitable placement for it, then ERESOLVE will still be
    raised.
    
    Fix: #223
    Fix: https://github.com/npm/cli/issues/2667
    
    PR-URL: https://github.com/npm/arborist/pull/227
    Credit: @isaacs
    Close: #227
    Reviewed-by: @ruyadorno

commit 30e6d7ec6f88b5d31dfa2189c1bc78a8930c3c00
Author: isaacs <i@izs.me>
Date:   Wed Feb 10 14:22:46 2021 -0800

    Ensure correct flags on shrinkwrapped module deps
    
    When running `Arborist.loadVirtual()` to read the tree from the point of
    a tree that contains a shrinkwrap, we were inappropriately setting all
    dep flags to `false`, as we would when reading the virtual tree in a
    project root.
    
    This patch updates loadVirtual to ensure that it always sets the proper
    flags on nodes within the subtree, if the root supplied is not actually
    the project root.
    
    As a result, changes had to be made to the process that inflates
    old/ancient lockfiles, and reify()'s handling of garbage data needed to
    be updated as well (since the cases being tested previously would now
    typically prune the invalid data out as extraneous before getting to the
    reify step).  If a node DOES make it through to reify() in the
    idealTree, but lacks a version or resolved field, then something is very
    wrong, and so we now print a warning to the user asking them to re-try
    the install or delete their lockfile (which will typically fix the
    problem, since it either is a root dep that's being removed and will be
    re-added properly, or a metadep problem that can only be fixed with a
    full tree rebuild anyway).
    
    PR-URL: https://github.com/npm/arborist/pull/225
    Credit: @isaacs
    Close: #225
    Reviewed-by: @ruyadorno, @nlf

commit 3724d2a9fb5a0f59c82f961023f5a7e8478e04c1
Author: nlf <quitlahok@gmail.com>
Date:   Wed Feb 10 11:41:12 2021 -0800

    use the idealtree target path if it exists
    
    This ensures relpaths are from the correct root
    
    PR-URL: https://github.com/npm/arborist/pull/224
    Credit: @nlf
    Close: #224
    Reviewed-by: @wraithgar, @ruyadorno

commit 4f2c0287346b3b30069a93a243fa048f6c3120c1
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 12:06:04 2021 -0500

    2.2.1

commit dc52834af0f38d3822918571f20d149218a60c66
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 12:03:44 2021 -0500

    fix: read-package-json-fast update
    
    dependencies are now pruned if they appear in optionalDependencies, this
    updates a bunch of snapshot files that were expecting that info.

commit 9d4c87b867d35dcc40980bbb454b9bf41c75db1c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:14:22 2021 -0500

    read-package-json-fast@2.0.1

commit ae53a0a3d8f261d7a1d9b777dc80d68220fbc581
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:13:56 2021 -0500

    pacote@11.2.6

commit 10990813cfe4a574e9136037685dac50771bcbf4
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:13:32 2021 -0500

    @npmcli/run-script@1.8.2

commit 3580826d2483f582d781a564d09e0b7f7f25fbfc
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:13:03 2021 -0500

    @npmcli/map-workspaces@1.0.2

commit 19f182856b953840f037148cb9cc0e636fd6fdeb
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 5 11:12:38 2021 -0500

    @npmcli/installed-package-contents@1.0.6

commit b08c58b41368dbff53c274ab80e7ec234a08a415
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 18:12:32 2021 -0500

    2.2.0

commit 183330484d1089aa303b1ec6bf990fd72437fe74
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 18:02:13 2021 -0500

    update patch versions in package-lock

commit 26702bc4d2608df1185a588dcdb0a573bf6c4b76
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 17:59:15 2021 -0500

    pacote@11.2.5

commit b0efcc52a4c113ff82f02eb5e61cbd165c3f82ed
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Feb 4 17:58:21 2021 -0500

    update package-lock

commit 03d453c4b4bb42c199aa4ae070d4cee3e7273ded
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Feb 2 18:12:10 2021 -0500

    fix: package.json saving optional deps
    
    Reify currently duplicates entries listed as optionalDependencies in the
    users' package.json files. While it's working as expected this is
    unexpected to a number of users and it also contradicts our own docs on
    it:
    
        Entries in optionalDependencies will override entries of the same
        name in dependencies, so it's usually best to only put in one place.
    
    This patches this UX problem by adding an extra check that will avoid
    adding a dependency to the package.json `dependencies` object in case
    that package is already listed under `optionalDependencies`.
    
    Fixes: https://github.com/npm/cli/issues/2203
    Fixes: https://github.com/npm/cli/issues/1886
    Fixes: https://github.com/npm/cli/issues/724
    
    EDIT(isaacs): Moved this into updateRootPackageJson in pairing session
    
    PR-URL: https://github.com/npm/arborist/pull/221
    Credit: @isaacs
    Close: #221
    Reviewed-by: @ruyadorno

commit 4185bd5ada0d3ed1dbb0de86c65cfc6aee551c10
Author: isaacs <i@izs.me>
Date:   Wed Feb 3 18:17:31 2021 -0800

    Turn the example scripts into a bin
    
    Because the world needs another package manager.
    
    PR-URL: https://github.com/npm/arborist/pull/220
    Credit: @isaacs
    Close: #220
    Reviewed-by: @ruyadorno

commit e6a188cc9ad4c983654e857ba57551ab46d34909
Author: isaacs <i@izs.me>
Date:   Wed Feb 3 16:11:13 2021 -0800

    make logging and option parsing consistent in example scripts

commit a43d88f5509fdb11b547adaf6d8b541ca231fe8b
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 11:42:40 2021 -0800

    2.1.1

commit 4caa34a0c22320ed19ac38496e8207b8d2f46c54
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 11:12:06 2021 -0800

    update deps

commit dfb4319d677b46be59474ffcdc4ae84c57572e13
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 11:11:04 2021 -0800

    pacote@11.2.4

commit 2fc15258e6ffdefed8a9fd30816e8a10e61c1638
Author: isaacs <i@izs.me>
Date:   Mon Feb 1 10:20:04 2021 -0800

    Install bins properly when global root is a link
    
    Also fixes up a few other places where we were checking isRoot and
    should have been checking isProjectRoot.
    
    Fix: https://github.com/nodejs/build/issues/2525
    
    PR-URL: https://github.com/npm/arborist/pull/217
    Credit: @isaacs
    Close: #217
    Reviewed-by: @nlf

commit 977c9e16f89abf93e1fde5de40f30c3a793cd643
Author: isaacs <i@izs.me>
Date:   Fri Jan 29 17:32:14 2021 -0800

    scripts: DRY options parsing, tree printing
    
    At this point, all tree printing in Arborist for human consumption
    should be using the built in Node.toJSON printable methods.
    
    PR-URL: https://github.com/npm/arborist/pull/216
    Credit: @isaacs
    Close: #216
    Reviewed-by: @nlf

commit 0cbaacfa1b2be27c7cb9c1c68a034295b7144c5a
Author: isaacs <i@izs.me>
Date:   Fri Jan 29 17:24:40 2021 -0800

    DRY all the tree printing tests, lint tests
    
    This gets rid of all the custom tree-printing and duplicative path
    normalization done in all tests, and adds the tests to the set of files
    to be linted.

commit 15e81dca3b8347c985452374ff65cb059abf7cb2
Author: isaacs <i@izs.me>
Date:   Thu Jan 28 16:39:58 2021 -0800

    Properly track dev edges on virtual root nodes
    
    If the virtualRoot node has a sourceReference, and that sourceReference
    node would get its devDep edges loaded, then the virtualRoot node should
    as well.
    
    This caused a very useless ERESOLVE error, which could not be properly
    forced away, when installing in a project that had conflicting peer deps
    in its dev tree.
    
    Related to: https://github.com/npm/cli/issues/2548
    
    PR-URL: https://github.com/npm/arborist/pull/214
    Credit: @isaacs
    Close: #214
    Reviewed-by: @nlf

commit 3b02f76c691def829e7d26ba0d52989a07e37390
Author: Gar <gar+gh@danger.computer>
Date:   Wed Jan 27 15:40:09 2021 -0800

    fix(install): make sure to reload explicitRequests
    
    when we are placing our deps, if our edge dep was explicitly requested,
    we want to re-place it instead of leaving whatever was there before.
    
    This will mean doing something like `npm install foo` will install the
    latest version of `foo` that your tree currently allows, instead of
    doing nothing if any version already existed
    
    PR-URL: https://github.com/npm/arborist/pull/211
    Credit: @wraithgar
    Close: #211
    Reviewed-by: @isaacs

commit d94f06894f2635830fd4af71029898e888812bc9
Author: nlf <quitlahok@gmail.com>
Date:   Fri Jan 29 10:24:14 2021 -0800

    fix global update all so it actually updates things
    
    PR-URL: https://github.com/npm/arborist/pull/215
    Credit: @nlf
    Close: #215
    Reviewed-by: @isaacs

commit 3bf786ca6248842cb3fba90c485e9b45bb493e96
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Jan 28 16:18:50 2021 -0500

    2.1.0

commit 47670a284c182885fe9a51c8cf8fee4ca9690462
Author: isaacs <i@izs.me>
Date:   Wed Jan 27 14:27:51 2021 -0800

    Prevent ERESOLVEs caused by loose root dep specs
    
    Given the following dep graph:
    
    ```
    root -> a@*, b@2
    b -> PEER(a@1)
    ```
    
    when we load the peerSet for `b@2`, we pull in the parent's
    spec for that dependency, `a@*`.  This may result in adding `a@2` to the
    tree, which conflicts with b's peer dependency.  However, `a@1` would
    have _also_ satisfied the root's dependency and _not_ caused a conflict.
    
    When there is no version that can be found to satisfy both dependencies,
    then we use the parent's dependency and warn/crash as we would have
    previously.  However, with this commit, we are more aggressively
    deduplicating the parent/child dependency collision to avoid ERESOLVEs
    that are unnecessary.
    
    This increased deduplication results in a lot of churn in the test
    snapshot, because it typically means getting an earlier or more
    restrictive version of a shared peer dependency.
    
    PR-URL: https://github.com/npm/arborist/pull/213
    Credit: @isaacs
    Close: #213
    Reviewed-by: @ruyadorno

commit a527ffaf779fc43e0b6921d56d80fd127df5b718
Author: isaacs <i@izs.me>
Date:   Thu Jan 28 10:45:02 2021 -0800

    More 'root is a link' cleanup
    
    There were a few places in buildIdealTree where we do different behavior
    if a node is the root.  However, it should really be if the node is
    either the root, *or* the node that a Link root targets.
    
    Add Node.isProjectRoot to mean 'the root node, or the target of a root
    link node'.
    
    PR-URL: https://github.com/npm/arborist/pull/212
    Credit: @isaacs
    Close: #212
    Reviewed-by: @nlf

commit 8d71ff9ab8a4ecf092a9b6b09991a129945104da
Author: isaacs <i@izs.me>
Date:   Tue Jan 26 13:50:58 2021 -0800

    Detect conflicts among nested peerOptional deps
    
    We do not normally install optional peerDependencies, so we were
    skipping over them when building up the peer set that is evaluated for
    placement within the tree.
    
    However, if an optional peer dep _conflicts_ with something in the tree,
    then it will be seen as an invalid edge, and attempt resolution.
    
    This results in a problem in the following scenario:
    
    ```
    root -> (a, x)
    a -> b
    b -> PEER(k@1)
    x -> y
    y -> PEEROPTIONAL(k@2)
    ```
    
    We place a, b, k@1, and x in the root node_modules without incident.
    
    Then, we evaluate y, and did not add `k@2` to its peerSet, because it
    is a peerOptional.  Since it does not have any apparent peers to
    conflict, it is _also_ placed at the root level.
    
    Then, we look to the invalid edges coming out of `y`, and find `k@2` is
    invalid, because it resolves to `k@1`, and there is no place to put it,
    because `y` is already in the root level, where the conflict exists, and
    we ERESOLVE.
    
    The solution is to include peerOptional edges when creating the peerSet,
    but still omit missing peerOptional deps when looking for invalid edges
    needing further resolution.
    
    Fix: https://github.com/npm/cli/issues/2265
    
    PR-URL: https://github.com/npm/arborist/pull/209
    Credit: @isaacs
    Close: #209
    Reviewed-by: @wraithgar, nlf

commit fb66c0109450b250b51c2f1bf85456e0e4fb4ef5
Author: isaacs <i@izs.me>
Date:   Mon Jan 25 15:22:04 2021 -0800

    Rollback when a fatal signal arrives during reification
    
    This also fixes an issue where the rollback did not properly restore the
    state if installing a _new_ package, since there was no move required
    when creating the sparse tree in that case, resulting in potentially
    half-installed deps being left behind.  Found while combing through
    testing every rollback for signal handling.
    
    Fix: https://github.com/npm/cli/issues/2312
    
    PR-URL: https://github.com/npm/arborist/pull/208
    Credit: @isaacs
    Close: #208
    Reviewed-by: @ruyadorno, @wraithgar

commit 3b8aa5008fb6d9bc542d8a7774fbe79e8eae1af3
Author: isaacs <i@izs.me>
Date:   Mon Jan 25 10:39:54 2021 -0800

    add signal handling logic for rollback support

commit 5dfd0a17021786225772f0812c5373a7c8806961
Author: isaacs <i@izs.me>
Date:   Thu Jan 21 12:27:24 2021 -0800

    properly buildIdealTree when root is a symlink
    
    PR-URL: https://github.com/npm/arborist/pull/210
    Credit: @nlf
    Close: #210
    Reviewed-by: @isaacs

commit 7169e0349ceb2e0e9afc6b154369aa18df57f4d6
Author: nlf <quitlahok@gmail.com>
Date:   Tue Jan 26 13:28:53 2021 -0800

    remove old printable tree in favor of builtin toJSON method

commit f7777624879827a7016f8bcf0453aa7a786f707c
Author: isaacs <i@izs.me>
Date:   Fri Jan 22 11:01:59 2021 -0800

    Make printable Node/Link output a bit more useful
    
    This tightens up the Edge representation to what is most useful,
    displays Links as 'ArboristLink', and makes the code a bit easier to
    work with instead of being one giant inline object.
    
    Edges are now printed as `{ from type name@spec [error]}` for edgesIn,
    and `{type name@spec [to] [error]}` for edgesOut, since we only care
    about the 'from' value when it's an edge in, and only care about 'to'
    when it's an edge out.  Usually, an edge will fit on one line, which is
    super handy when debugging trees with lots of dependencies.
    (Previously, I'd often console.error() them as
    `[from.location,type,spec,to && to.location,error]` for this reason.)
    
    It also separates out the pretty printing stuff into a standalone file, so
    it's not taking up as much space in the Node class definition, and a bit
    easier to maintain going forward.
    
    PR-URL: https://github.com/npm/arborist/pull/206
    Credit: @isaacs
    Close: #206
    Reviewed-by: @ruyadorno

commit b9089074eed77173c0637e792a927e62c550245c
Author: isaacs <i@izs.me>
Date:   Wed Jan 20 17:01:51 2021 -0800

    2.0.6

commit 9989f4f6391b485a637d83920f5c34676b9a47d0
Author: isaacs <i@izs.me>
Date:   Wed Jan 20 15:31:27 2021 -0800

    Preserve git+https auth when provided
    
    This makes Arborist use the git+https: url as the saved value in
    package-lock.json and package.json files for known git hosts when http
    auth is provided.  When auth is not provided, we store the canonical ssh
    url in package-lock.json, and the more human-friendly shortcut in
    package.json, in order to maintain a canonical save value that is never
    git:// for known hosts.
    
    This is the second part of the fix for npm/cli#2054.
    
    PR-URL: https://github.com/npm/arborist/pull/205
    Credit: @isaacs
    Close: #205
    Reviewed-by: @wraithgar

commit b8d1e22cc457d3389858cba242d65e627a486c21
Author: isaacs <i@izs.me>
Date:   Wed Jan 20 15:14:35 2021 -0800

    pacote@11.2.3

commit bd3b51de386face6abf0665d8de48832ced99187
Author: Michael Garvin <gar+gh@danger.computer>
Date:   Thu Jan 14 13:34:55 2021 -0800

    2.0.5

commit ff0c5e802cc1d142b129390b8373449e2e7f14e4
Author: Michael Garvin <gar+gh@danger.computer>
Date:   Thu Jan 14 13:32:14 2021 -0800

    @npmcli/move-file@1.1.0

commit f5dd8b8a596fd7af285f8337fbdee62689e48fcc
Author: isaacs <i@izs.me>
Date:   Thu Jan 14 11:53:04 2021 -0800

    2.0.4

commit 09b2ce6c2a9375ad6eb101d8edc3052d08c1d806
Author: isaacs <i@izs.me>
Date:   Thu Jan 14 10:42:14 2021 -0800

    prioritize npm-shrinkwrap.json over package-lock.json
    
    PR-URL: https://github.com/npm/arborist/pull/204
    Credit: @isaacs
    Close: #204
    Reviewed-by: @nlf

commit d6529ea0629683e0919c44cff99a174253b44ee3
Author: nlf <quitlahok@gmail.com>
Date:   Thu Jan 14 10:46:39 2021 -0800

    make sure globals are not marked as extraneous
    
    PR-URL: https://github.com/npm/arborist/pull/203
    Credit: @nlf
    Close: #203
    Reviewed-by: @isaacs

commit 564dea66a836826648e2df34931a752107580fdd
Author: isaacs <i@izs.me>
Date:   Thu Jan 14 11:40:31 2021 -0800

    pacote@11.2.1
    
    Also, add missing npm-registry-fetch dep that was unlisted

commit b339783fa26d5e0d72c46dee4b9628df2e7a6312
Author: isaacs <i@izs.me>
Date:   Wed Jan 13 16:33:42 2021 -0800

    pacote@11.2.0
    
    Cache packuments to avoid unnecessary requests for the same objects

commit 9efb50f06b20ece8752e2901fc1123e8dc836d1d
Author: isaacs <i@izs.me>
Date:   Wed Jan 13 16:32:25 2021 -0800

    @npmcli/metavuln-calculator@1.0.1
    
    This dramatically improves audit performance

commit 606509e5f276978a105fe46a6571eaf73e38ee0d
Author: nlf <quitlahok@gmail.com>
Date:   Tue Jan 12 11:52:36 2021 -0800

    traverse target children for global root links when generating diffs
    
    PR-URL: https://github.com/npm/arborist/pull/202
    Credit: @nlf
    Close: #202
    Reviewed-by: @isaacs

commit 2dfee3e54efa6628eb9d019060a607c97872ae37
Author: nlf <quitlahok@gmail.com>
Date:   Mon Jan 11 13:48:32 2021 -0800

    remove global guard on validatePath
    
    PR-URL: https://github.com/npm/arborist/pull/201
    Credit: @nlf
    Close: #201
    Reviewed-by: @isaacs

commit b1349ccfc139c5d0cf28862585cc73893e56b41a
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Nov 5 18:58:01 2020 -0500

    feat: add debugability to node and edge
    
    When using `console.log()` to print either `this.idealTree` or a `node`
    or any `Edge` it will provide a much better human-readable output.
    
    PR-URL: https://github.com/npm/arborist/pull/190
    Credit: @ruyadorno
    Close: #190
    Reviewed-by: @isaacs

commit bfd3111fb610653ed0600971c23403d260be402d
Author: Wes Todd <wtodd@netflix.com>
Date:   Fri Jan 8 11:18:52 2021 -0600

    export Edge class
    
    PR-URL: https://github.com/npm/arborist/pull/200
    Credit: @wesleytodd
    Close: #200
    Reviewed-by: @isaacs

commit 3cdebfaf73d7cc7ff8074be29477fde5ea9d183e
Author: isaacs <i@izs.me>
Date:   Thu Jan 7 12:02:22 2021 -0800

    2.0.3

commit 90f0bc654d7d4d93ad51baf550a8a8eb93c236a2
Author: isaacs <i@izs.me>
Date:   Thu Jan 7 11:54:19 2021 -0800

    pacote@11.1.14, tar@6.1.0
    
    This adds support for noChmod-style umask-less unpacking

commit 1264038a7320100db88fa76ee9bd95a8da34d9b2
Author: isaacs <i@izs.me>
Date:   Wed Jan 6 17:08:39 2021 -0800

    Stash run scripts on arb.scriptsRun
    
    This adds a new Set on the Arborist object called 'scriptsRun'.  It
    includes objects defining which scripts have been run by the
    reify/rebuild process, along with their exit status, signal, and
    standard output, so that the CLI can report on it at the end of the
    reify process.
    
    PR-URL: https://github.com/npm/arborist/pull/198
    Credit: @isaacs
    Close: #198
    Reviewed-by: @wesleytodd @ruyadorno

commit 4a5e0ca0a48a586bd3a71248278ab4768ab22624
Author: isaacs <i@izs.me>
Date:   Mon Jan 4 10:46:58 2021 -0800

    Add foregroundScripts option
    
    This enables us to switch on the old npm v6 behavior of running build
    scripts in the foreground, but without the interleaving that occurred in
    old npm versions.
    
    When this is enabled, installs will generally go slower and be noisier,
    because build scripts inherit stdio and are not run in parallel.
    However, for some debugging and logging cases, it is preferable to run
    in this mode, despite the added costs.

commit e9665c308943fdc628b8844407f1b8b99fc30b86
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Jan 5 15:53:54 2021 -0500

    fix: should create prefix path if missing
    
    Fixes: https://github.com/npm/cli/issues/2012
    
    PR-URL: https://github.com/npm/arborist/pull/199
    Credit: @ruyadorno
    Close: #199
    Reviewed-by: @isaacs

commit 5e4a57a75b41887bc2dae701b2902a8e0cd7693a
Author: isaacs <i@izs.me>
Date:   Mon Jan 4 10:31:41 2021 -0800

    update deps

commit c31ea7aa7161ca67807a3fd9ca1f5be78e5daa0c
Author: isaacs <i@izs.me>
Date:   Tue Dec 15 11:11:27 2020 -0800

    2.0.2

commit 5d51d37e26e31761b8aa833b7d3b9ef4ab0656ab
Author: isaacs <i@izs.me>
Date:   Mon Dec 14 16:05:50 2020 -0800

    Reset flags when initializing ideal from actual
    
    Fix: #193
    Fix: npm/cli#2309
    
    PR-URL: https://github.com/npm/arborist/pull/194
    Credit: @isaacs
    Close: #194
    Reviewed-by: @ruyadorno

commit 93826dfc44e5f2c135b56353a642b6068f0fdf02
Author: isaacs <i@izs.me>
Date:   Fri Dec 11 11:46:01 2020 -0800

    2.0.1

commit 8b457c2395d0c01dc93e0765e5ee451bafba57b1
Author: isaacs <i@izs.me>
Date:   Fri Dec 11 10:41:28 2020 -0800

    Do not save with ^ and no version
    
    Fix: https://github.com/npm/cli/issues/2320
    
    PR-URL: https://github.com/npm/arborist/pull/192
    Credit: @isaacs
    Close: #192
    Reviewed-by: @ruyadorno

commit efb5d3ec1bc7605719b1c55af668462c526920ab
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 15:16:13 2020 -0800

    2.0.0

commit b932896b5a5ddb4c8f43e8aed6f32dbc9f0598ed
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 15:14:20 2020 -0800

    add a changelog, since we have a second major release

commit e7dd47ceed3b3653f885539a449f64f01c48210f
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 15:07:40 2020 -0800

    Correctly create shrinkwrap when root is a symlink
    
    This ensures that the nodes in the inventory are properly walked,
    and that the resulting shrinkwrap file is relative to the _target_
    of the symlink root, rather than the symlink path.
    
    PR-URL: https://github.com/npm/arborist/pull/191
    Credit: @isaacs
    Close: #191
    Reviewed-by: @nlf @ruyadorno

commit 5c5e2ad5ce8bd48202656a3d815b896c1d5022c0
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 10:36:25 2020 -0800

    benchmark: use current branch name as default --save option

commit 26879df02d735b340baff27c73652cc0bff21623
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 10:32:59 2020 -0800

    benchmark: print the names along with sha and date

commit 322da989c09ec9355a994d9503352b61b483948d
Author: isaacs <i@izs.me>
Date:   Tue Dec 8 10:21:21 2020 -0800

    benchmark: save with a .json extension

commit b2f3086e7659ccf5d4aa2b95cdb69c340504b559
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:41:19 2020 -0800

    audit-report: refactor for inventory count changes

commit 826cfe6987e7518ebf57f43433ebbc2f95b3c7a6
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 17:10:58 2020 -0800

    put a proper path on the calc-dep-flags test node
    
    This was breaking Windows for some reason.

commit 3fd9464e507ffbc0b8f8491632fa1ad3075d5502
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 12:22:09 2020 -0800

    depValid: use node.version getter shorthand

commit 918ebe5332cfeae9207e4d2ea90bfde3d206e8d9
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 12:22:09 2020 -0800

    depValid: use node.version getter shorthand

commit 2d93cc32cce7717bd07fa6e6ad0b41456b5d58e7
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:25:31 2020 -0800

    reify: refactor for node strictness

commit 04da701bc88a84f8d6f128619c919922ce2fbd9b
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:23:32 2020 -0800

    build-ideal-tree: refactor for node strictness

commit 39a4d8d10d896ad042483b2060ae62e183a6a79a
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 15:22:20 2020 -0800

    load-virtual: refactor for node strictness

commit ba32368933da32bfe66cec7e7ccce2f17f385698
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:55:59 2020 -0800

    load-actual: refactor for node strictness

commit f356dbac8509184f372b551a9d9a172b93501350
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:43:24 2020 -0800

    Refactor base classes for strict tree integrity guarantees
    
    This is a pretty major overhaul of the entire way that nodes are added
    to and removed from trees.
    
    Essentially, the root inventory is used as an authoritative reference of
    everything in the tree, and everything is updated and validated in the
    setter.  So, rather than having a `parent` setter that sets the
    `_parent` internal reference directly, the `parent` setter removes the
    node from its root inventory, changes the path, and then calls the
    `root` setter to figure out all the references.  The same with
    `fsParent`, `target` and `linksIn` references between links and nodes,
    and so on.
    
    This avoids a number of hazards that have been biting us.
    
    - Set a `x` node's parent, but don't properly connect it to nodes that have
      that parent as their `fsParent`, via
      `parent/node_modules/x/node_modules/y`.  Now, `y` will properly be
      detected as a child of `x`, and linked accordingly.
    - Adding two link nodes to the same target resulting in two reachable
      nodes in the tree with the same `realpath`.  Now, it'll see that
      there's already a node with that `realpath`, and assign the link
      targets accordingly.
    
    The list goes on and on.  This is why, for example, setting `.` as a
    workspace caused some really weird data to show up in the
    package-lock.json, and we had a snapshot where two `abbrev` links had a
    target with a name as either `aaaaaa` or `zzzzzz`, depending on which
    ended up getting added to the tree first.
    
    The plus side is: way more consistency, with a much more forgiving API
    as far as the order in which nodes get added to the tree.  The downside:
    the `root` setter is a beast of delicate complexity.
    
    Thankfully, `treeCheck(this)` is called after every call to the `root`
    setter.  In debug mode, this performs an exhaustive check of the tree
    and inventory, ensuring that every reachable node in the tree is present
    in the inventory, that every node in the inventory is reachable, that
    the entire tree has exactly one `root` node, that no nested dependencies
    have `devDependencies` trying to get loaded, that no non-root nodes have
    anything in their inventory objects, and so on.
    
    This checking is of course painfully slow, and turns any error into a
    fatal crash, _but_ we only run it in debug mode, which is something we
    can ask users to do for debugging if they run into weird "impossible"
    issues.
    
    Caveats with this refactor:
    
    - The root node is now included in the inventory
    - The `node.location` (which is the inventory key) is the node's
      relative path based on the root's _realpath_, meaning that a Link node
      root will have a location other than `''`.
    
    These two things together mean that we cannot test `node.location === ''`
    to determine root-ness, which was done in a few places previously.  The
    correct indicator is `node.isRoot`, which should always be the way to
    determine whether a node is root.
    
    This commit causes breakage in the higher level functions, which will be
    fixed in subsequent commits.

commit 6c4b4fe2552374197f1aa7aae0c74f96dea6c8b4
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:38:13 2020 -0800

    inventory: don't allow external nodes, index on node.realpath

commit c0293d1c16a8fbaff9a05ce6b497a4dd2151ac56
Author: isaacs <i@izs.me>
Date:   Thu Dec 3 18:21:40 2020 -0800

    bring workspace reify cases into sync with static files
    
    We really need to figure out a better way to do this, changes to the
    reify case creator means we have to re-generate everything, and when we
    remove unnecessary files from git, it means that we can't generate them
    any more without a lot of extra manual labor.

commit dfd85b7b9aa664967e26b6f10014496fd9474f2c
Author: isaacs <i@izs.me>
Date:   Mon Nov 23 15:22:23 2020 -0800

    Add a function to verify a tree's internal consistency

commit 56a4ba1917eab7603fb5959d65541c8a308a95b0
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:27:13 2020 -0800

    update registry-mocks

commit eacf887fa7ba73873647e072178cd1ce697cccc5
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 12:07:35 2020 -0800

    Add benchmark script

commit 368fe7d238a5b38abd09f2aa64ef5683f2fd7aaf
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 12:07:00 2020 -0800

    ignore folders under scripts/benchmark

commit cb01ac7f70e8730a9ba67d1f3d2c256f03bac2f8
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 12:06:06 2020 -0800

    mock registry content used by benchmark scripts

commit d17445b5e311f9836c3ffc99fb1207e00c63fa2c
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:24:18 2020 -0800

    update deps

commit 057aec54914f0ecca2a0f205dac611acd1c6fb3a
Author: isaacs <i@izs.me>
Date:   Mon Dec 7 14:21:25 2020 -0800

    debug: add debug.log, run by default in dev folder
    
    Also, make it possible to disable entirely by setting ARBORIST_DEBUG=0
    in the environment.

commit 068afb4f18f3eeb6b4347b6729fad6113d12247d
Author: isaacs <i@izs.me>
Date:   Tue Dec 1 14:25:21 2020 -0800

    1.0.14

commit bf04701e381bde868477ad9e21c5e495481d382b
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Nov 26 14:45:08 2020 -0500

    fix: support system root path with no pkg name
    
    Right now if your cwd is / npm exec, npm ls (or any arborist-dependent
    command) will fail with a "could not detect node name from path or
    package" error.
    
    This patches add a manual "system-root" name to allow arborist to build
    a tree from /
    
    PR-URL: https://github.com/npm/arborist/pull/189
    Credit: @ruyadorno
    Close: #189
    Reviewed-by: @isaacs

commit 40352ad2bd7a40c40bff5ac58f8456c0d204bf03
Author: isaacs <i@izs.me>
Date:   Sun Nov 29 13:48:24 2020 -0800

    Correct time output in example scripts

commit e028259d8f2fb127bdff8504c03973bbe7e59cf1
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Nov 27 10:52:31 2020 -0500

    1.0.13

commit bc05c4ff0088932922539c647c3d76f76c86ede4
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Nov 23 23:50:38 2020 -0500

    fix: allow package.json string shorthands
    
    Currently, bin and funding values from the root package.json file are
    being normalized when reifying. This changes it to avoid overriding
    bin/funding shorthands and always use the original values instead of
    their normalized results when writing to the root package.json file.
    
    Fix: https://github.com/npm/cli/issues/1964
    
    PR-URL: https://github.com/npm/arborist/pull/187
    Credit: @ruyadorno
    Close: #187
    Reviewed-by: @darcyclarke

commit 28bbd137b7761b643392662b16b50a8b8ae3e826
Author: nlf <quitlahok@gmail.com>
Date:   Fri Nov 20 10:27:16 2020 -0800

    1.0.12

commit 3fc66ebd7f4f5ab80332396c347d46d19e190b40
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 17 11:59:55 2020 -0800

    @npmcli/run-script@1.8.0
    
    PR-URL: https://github.com/npm/arborist/pull/186
    Credit: @nlf
    Close: #186
    Reviewed-by: @isaacs

commit 9b1290c1a5678e900c8650a314d4baff62b63c9b
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 17 10:52:35 2020 -0800

    normalize path before comparing

commit fa973e5af923735fea54202ea6919376e89b0b67
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 17 08:20:13 2020 -0800

    tap@14.11.0

commit 941a2ec04ab8b98574261f10d9c25893794107d9
Author: nlf <quitlahok@gmail.com>
Date:   Wed Nov 11 12:54:49 2020 -0800

    fix: stop flagging edges INVALID because of differing slashes in fetchSpec

commit 2e82a2ede2bb5db9bf7c7efccf14875b06470404
Author: nlf <quitlahok@gmail.com>
Date:   Wed Nov 11 12:31:20 2020 -0800

    fix: allow windows line endings in yarn.lock

commit ec06de9b4b58bc6f3bdf1818b57e89ea873d39bc
Author: nlf <quitlahok@gmail.com>
Date:   Wed Nov 11 08:52:22 2020 -0800

    use resolved paths in node constructor

commit 51852ec76ba48024a58d14870ff6170126e64e58
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 10 12:07:22 2020 -0800

    chore: add windows-latest to ci

commit fe4f86bf97447b236a025e613eaeb56150f79f4a
Author: nlf <quitlahok@gmail.com>
Date:   Tue Nov 10 08:35:04 2020 -0800

    test: fix test inconsistencies for windows

commit 8870e9314fa95169a3f97efdfa51980cc4ea6ff8
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Nov 16 10:44:33 2020 -0500

    test: add missing reify case

commit e8676cd8de70a3a94c0b2edae4f42ce6ef833407
Author: isaacs <i@izs.me>
Date:   Fri Nov 13 11:03:56 2020 -0800

    1.0.11

commit a49d3fbae943baba7dcf5d2a43187b2b8b924df0
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Nov 12 18:07:59 2020 -0500

    fix: missing bins info in package-lock
    
    When migrating from package-lock v1 -> v2 in a project that currently
    has an actual tree + a package-lock file the reify process fails to
    properly update the package-lock with the bins info.
    
    EDIT(@isaacs):
    Added to use a somewhat questionable approach of changing the "original"
    lockfile version. The questionableness comes just from the fact that the
    (internal) field name says "original", which we use as an indicator as
    to whether or not we can trust that this lockfile we read from disk is
    actually valid or not.
    
    In this case, after being inflated, a lockfile is as trustworthy as it
    can possibly be, so there is no need to re-check and re-add package.json
    files to fill in any missing pieces.
    
    Fixes: https://github.com/npm/cli/issues/1957
    
    PR-URL: https://github.com/npm/arborist/pull/184
    Credit: @ruyadorno
    Close: #184
    Reviewed-by: @isaacs @nlf @darcyclarke

commit 9f90fefc9029931786897b00bd9bcc889545a5c2
Author: isaacs <i@izs.me>
Date:   Thu Nov 12 14:55:30 2020 -0800

    Clean up symlinks on test completion
    
    This also throws if any symlinks are found in the fixture dir after the
    test suite runs, since that causes such havoc on Windows machines.
    
    PR-URL: https://github.com/pull/183
    Credit: @isaacs
    Close: #183
    Reviewed-by: @darcyclarke

commit 925d7e1d798d71f9d909cb2720567474de667eaa
Author: isaacs <i@izs.me>
Date:   Thu Nov 12 12:06:30 2020 -0800

    Replace entire dep sets, so peer loops don't lock
    
    Discovered an interesting issue with the following dependency set:
    
    ```json
    {
      "devDependencies": {
        "webpack-dev-server": "^3.11.0",
        "@pmmmwh/react-refresh-webpack-plugin": "^0.4.3"
      }
    }
    ```
    
    `webpack-dev-server` here has a peerDependency on webpack v4.  But, the
    dependencies of `@pmmmwh/react-refresh-webpack-plugin` have peer
    dependencies on webpack at `4 || 5`.
    
    So, a resolution _should_ be possible.  Since the
    `@pmmmwh/react-refresh-webpack-plugin` package is alphabetically first,
    it loads its deps, and ends up placing webpack@5 to satisfy the dep with
    the latest and greatest.  Then when `webpack-dev-server` gets to its
    eventual peer dep on webpack, it can't replace it, because `webpack@5`
    has a dependency on `terser-webpack-plugin@^5.0.3`, which in turn has a
    peer dependency on `webpack@5.4.0`.
    
    When we check to see if webpack 5 can be replaced, we find it has a
    dependent, and reject the replacement.  But that dependent is only
    present as a dependency of the thing being replaced, so should not be
    considered.
    
    Second, while the source of the `terser-webpack-plugin` is `webpack`, it
    cannot be installed there, because it has peer deps that are also peer
    deps of webpack.  So, we _must_ place it in the root node_modules, but
    were not attempting the "source" location overrides, because the root is
    not the source.  This was a second issue resulting in `ERESOLVE` errors
    even when `--force` was applied, with this dependency set:
    
    ```json
    {
      "devDependencies": {
        "webpack-dev-server": "^3.11.0",
        "webpack": "^5.0.0"
      }
    }
    ```
    
    Fixes: #180
    Fixes: https://github.com/npm/cli/issues/2123
    
    PR-URL: https://github.com/pull/182
    Credit: @isaacs
    Close: #182
    Reviewed-by: @darcyclarke

commit 9134f02bfa9709559ceab9354a0206dad18301c2
Author: isaacs <i@izs.me>
Date:   Thu Nov 12 12:00:24 2020 -0800

    fixture updates for new webpack version causing ERESOLVE errors

commit 22d50955439d353aeb0fbf15f0fd8fe499fdc59d
Author: isaacs <i@izs.me>
Date:   Tue Nov 10 11:12:56 2020 -0800

    1.0.10

commit 706ae511d8aa2e08e280a623095949251a6c2440
Author: James Addison <jay@jp-hosting.net>
Date:   Sun Nov 8 15:57:57 2020 +0000

    prevent self-assignment of parent/fsParent
    
    PR-URL: https://github.com/npm/arborist/pull/178
    Credit: @jayaddison
    Close: #178
    Reviewed-by: @isaacs

commit dda95de0f313208fc192ee988ff73eae7232df9f
Author: isaacs <i@izs.me>
Date:   Mon Nov 9 23:36:51 2020 -0800

    Support update options in global package space
    
    This adjusts the portion of the global actualTree that gets loaded when
    doing an update, and sets up the virtual global package manifest to
    depend on '*' for all the packages being updated at the top global
    level.
    
    Fixes: https://github.com/npm/cli/issues/1962
    
    PR-URL: https://github.com/npm/arborist/pull/179
    Credit: @isaacs
    Close: #179
    Reviewed-by: @ruyadorno

commit 56e3443d48ce5f0bb76d59c3b6eb7dc24dcbd8a2
Author: isaacs <i@izs.me>
Date:   Mon Nov 9 22:11:52 2020 -0800

    clarify comment in reify.js
    
    Make a note of the race condition that would exist if loadActual and
    buildIdealTree happened simultaneously in the global space.

commit 6eae14b451e903fcaaac363cd83f70055a0f9f26
Author: isaacs <i@izs.me>
Date:   Mon Nov 9 16:21:43 2020 -0800

    Set fsParent properly when .. paths are involved
    
    This MAY be related to/fix https://github.com/npm/arborist/issues/171

commit 12a140b0e36c1a5ca5e8e9b6319fb539bf026628
Author: isaacs <i@izs.me>
Date:   Fri Nov 6 10:46:13 2020 -0800

    1.0.9

commit a3ee4785f3b4bde4c1548907790f8c99799e5c0d
Author: nlf <quitlahok@gmail.com>
Date:   Thu Nov 5 08:07:45 2020 -0800

    use @npmcli/move-file instead of fs.rename
    
    PR-URL: https://github.com/npm/arborist/pull/176
    Credit: @nlf
    Close: #176
    Reviewed-by: @isaacs

commit ab5e7e5ed8bc511722ddd4b5530d427bf47dc45a
Author: nlf <quitlahok@gmail.com>
Date:   Thu Nov 5 07:53:47 2020 -0800

    use junctions instead of symlinks
    
    PR-URL: https://github.com/npm/arborist/pull/175
    Credit: @nlf
    Close: #175
    Reviewed-by: @isaacs

commit 02f198df7c545d166dc75114f46222e7d37c9403
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Oct 26 14:01:45 2020 -0400

    fix: process deps for all link nodes
    
    Arborist wasn't checking for any package.json dep changes within its
    Link nodes thus preventing users from adding new deps on workspaces.
    
    This changeset fixes it and adds a reify test repro.
    
    Fixes: https://github.com/npm/cli/issues/1984
    
    PR-URL: https://github.com/npm/arborist/pull/170
    Credit: @ruyadorno
    Close: #170
    Reviewed-by: @isaacs

commit db421d9ccd576193d4bdca476e06897aa8f45351
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 13:34:36 2020 -0800

    1.0.8

commit eceb5d98ac9615d97eec8e56c6c3fc0b68e3de0a
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 13:32:28 2020 -0800

    Guard against setting Node.package to something improper
    
    This can happen when loading from broken lockfiles, as I found while
    updating things and git rebasing in the npm/cli repo, causing `npm ls`
    to fail in annoying ways.

commit ef2737e7d5d0f8e8a35a72bc18cc6f4de14bdfe9
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 11:56:02 2020 -0800

    1.0.7

commit 05189ee64d26afc060277d28db206be86ad9fcff
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 11:15:21 2020 -0800

    Fix 3 related peerDep ideal tree edge cases
    
    1. we should _never_ place a dep in a target where the target
    has a peerDep on that dependency, even if it would be allowed or
    conflicts with a higher level.  However, we _should_ continue walking up
    the tree in this case, so the solution is to detect this in the walk-up,
    and continue to the next spot if there's a peer edge present.
    
    2. It's possible for the virtual root to not contain a peer node, if the
    edge is a peerOptional edge.  In that case, we may still need to detect
    and add the node, if the current dep version present is outside the
    dependency range.  (We do not install peerOptionals by default, but we
    DO ensure that they're valid if present, and install when necessary to
    avoid loading an invalid version, if possible.)
    
    3. In light of 1 and 2 above, it's important to _always_ attempt to
    dedupe peer deps, even if that means downgrading the version in use, or
    we find ourselves in many more ERESOLVE cases than we need to be.
    Solution here is to effectively always place peerDeps in preferDedupe
    mode, regardless of the option that is passed in to Arborist.
    
    PR-URL: https://github.com/npm/arborist/pull/174
    Credit: @isaacs
    Close: #174
    Reviewed-by: @ruyadorno

commit c2e4b09bdda10e1a90f81f6e1fd2227b719d85e9
Author: isaacs <i@izs.me>
Date:   Tue Nov 3 11:06:38 2020 -0800

    mocks for testing more peerDep issues

commit 1cc72517105710bfe570a348af9d01489a1b254a
Author: isaacs <i@izs.me>
Date:   Mon Nov 2 12:31:59 2020 -0800

    lint build-ideal-tree test
    
    Also, add fixtures for the test that was being skipped

commit 2381aeb8eec8f68f0a53a959d76ddbc41a88f795
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 30 13:11:36 2020 -0400

    1.0.6

commit 053679c2afedfca5d002a11d4f559be8cb3caf08
Author: nlf <quitlahok@gmail.com>
Date:   Thu Oct 29 11:09:27 2020 -0700

    flag missing bins as a CHANGE
    
    PR-URL: https://github.com/npm/arborist/pull/173
    Credit: @nlf
    Close: #173
    Reviewed-by: @ruyadorno

commit ac5c4df8b511a0f47490ea14ac50f25d146586e9
Author: isaacs <i@izs.me>
Date:   Tue Oct 27 11:36:00 2020 -0700

    1.0.5

commit 6a02c1e2097dd4ca56323bbdaf163dcac59a92f4
Author: isaacs <i@izs.me>
Date:   Mon Oct 26 11:22:04 2020 -0700

    Forgot to add the debug method, whoops

commit 87a9fa922d6129e3be7f1ab3441eea2bb5d65466
Author: isaacs <i@izs.me>
Date:   Fri Oct 23 15:51:31 2020 -0700

    Do not set fsParent to a link node
    
    This was a weird side effect caused by the last bug, treating '..' as a
    local node in the root's tree.  While that was fixed, it highlighted the
    need for a better debug check on that sort of thing.
    
    This adds a 'debug()' method, which takes a function.  The function is
    ignored in normal operations, so it's perfectly fine to put expensive
    and/or hazardously aggressive assertion crashes in there.  In tests,
    methods passed to debug are always run, so we'll avoid creating new
    scenarios where it could have been caught.

commit 8da1864af2e405e7f21cb82d7868f432c1a35b88
Author: isaacs <i@izs.me>
Date:   Fri Oct 23 11:29:24 2020 -0700

    lint: force blocks to next line

commit 7632ff3bf7e2ce1d13ce61fc5d4acb4a060af331
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 23 13:47:41 2020 -0400

    1.0.4

commit 8aa6a2244c38cf985ec4082f67c16b37ba0af67a
Author: isaacs <i@izs.me>
Date:   Fri Oct 23 10:03:30 2020 -0700

    Do not set wrong fsParent when there is a link to ..
    
    We were testing for the presence of ../ on relative links to see if
    a node target is outside the root, but '..' is also outside the root.
    
    PR-URL: https://github.com/npm/arborist/pull/167
    Credit: @isaacs
    Close: #167
    Reviewed-by: @ruyadorno

commit daa5cf0f85f9c9ea58e270c6a18c232d65513244
Author: isaacs <i@izs.me>
Date:   Wed Oct 21 15:08:55 2020 -0700

    Install peerOptionals if explicitly requested, or dev
    
    Fix npm/cli#2005
    
    PR-URL: https://github.com/npm/arborist/pull/166
    Credit: @isaacs
    Close: #166
    Reviewed-by: @ruyadorno

commit 1d6b0577b2adab7d7a52e62c8576cd9a915eb837
Author: isaacs <i@izs.me>
Date:   Wed Oct 21 14:03:43 2020 -0700

    Do not conflict on meta-peers that will not be replaced
    
    When in a situation where a project has dependencies on several members
    of a peer set, it was encountering a spurious ERESOLVE error if the
    entire set was being replaced, but _one_ of the members did not need to
    be.
    
    For example:
    
    ```
    root -> (a@1, b@1, c@1)
    a@1 -> PEER(b@1, c@1)
    a@2 -> PEER(b@2, c@1)
    b@1 -> PEER(c@1)
    b@2 -> PEER(c@1)
    ```
    
    resulting in the tree:
    
    ```
    root
    +-- a@1
    +-- b@1
    +-- c@1
    ```
    
    If we try to upgrade both `a` and `b` to version 2, however, we would
    check the set of peers for each dependency node being replaced, and find
    that there was a `c` node with a non-peer dependency from the root node,
    and treat it as a conflict, even though there was no need for `c` to be
    modified at all!
    
    Resolve this by skipping the check when not doing `canPlacePeers` (since
    it's either already a conflict, or already set to be overridden by the
    version from the virtualRoot), and ignoring the conflict when a
    non-overridden node exists in the virtualRoot which meets the non-peer
    edge keeping the current dependency node in place.  In those cases,
    either we will replace or keep the current node anyway, so there's no
    need to conflict on it.
    
    Fix: npm/cli#2000
    
    PR-URL: https://github.com/npm/arborist/pull/165
    Credit: @isaacs
    Close: #165
    Reviewed-by: @ruyadorno

commit 89f238871d3cc73c570682d3bae1e4db867b5474
Author: isaacs <i@izs.me>
Date:   Wed Oct 21 13:58:00 2020 -0700

    do not elide edges in explain() output when a root edge exists

commit b2c445f0354f4be2147b76456e61a2ac79b23f8a
Author: isaacs <i@izs.me>
Date:   Tue Oct 20 13:21:46 2020 -0700

    Ensure that root is added when root.meta is set
    
    This was causing the root metadata (name, version, and the package['']
    member) to be missing when we replace the metadata object on the root
    node during the buildIdealTree step (which we do for 'npm update' with
    no package name args).
    
    Implicitly add the node to the metadata whenever node.meta is set.  This
    required a bit of shuffling around and the removal of some cases where
    we _were_ explicitly adding the root node, since it is now no longer a
    thing that can be forgotten.
    
    Fix: npm/cli#1997
    
    PR-URL: https://github.com/npm/arborist/pull/163
    Credit: @isaacs
    Close: #163
    Reviewed-by: @ruyadorno

commit c96e5e915e3e99ef7040992de9eb8fe9f582ab8e
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 16 15:21:50 2020 -0400

    1.0.3

commit fc1f8ea1bc4b467944a14b76fc1c8e93feafdd82
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Oct 15 17:35:12 2020 -0400

    fix: workspaces prepare lifecycle scripts
    
    When installing workspaces arborist will now run the `prepare` scripts
    as part of lifecycle scripts. It also tweaks a bit the build process to
    account for placing bin-links AFTER running lifecycle scripts for a
    workspace.
    
    Fixes: https://github.com/npm/cli/issues/1965
    
    PR-URL: https://github.com/npm/arborist/pull/159
    Credit: @ruyadorno
    Close: #159
    Reviewed-by: @isaacs

commit 6ed30898988cfbb2e7d3bcad760a2c098b61ddbd
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 22:23:15 2020 -0700

    update mock registry data
    
    Basically just delete the content folder and then run test-proxy.
    
    PR-URL: https://github.com/npm/arborist/pull/161
    Credit: @isaacs
    Close: #161
    Reviewed-by: @ruyadorno

commit ce7d7a0c2f3ef5bb7d93970a7a961d3bd09dbcad
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 22:07:09 2020 -0700

    Do not over-check peer deps during buildIdealTree
    
    This caused yargs to fail to install, even when --force was applied!
    
    While building the ideal tree, and checking to see if a node can be
    placed at a given location, we also check to ensure that all of that
    node's peer dependencies can be placed there.  And, since they can have
    peer deps, and those deps can have peer deps, and they may need to be
    overridden based on the source dependency's declared intent, we create a
    sort of "holding area" in a virtual root.
    
    Previously, in order to check if a peerSet could be placed at a given
    location, we just checked all the nodes in this virtual root, and then
    moved them into place.  This was a problem, because of the issue
    addressed in 94516f3, with cases like those described in
    test/fixtures/testing-peer-dep-nesting/README.md in this repository.
    
    In order to address this, the "check all the peers in the set and move
    them over" was replaced with a "check all the peers in the set and COPY
    them over".  Additionally, since we do still need to be able to dedupe
    PART of this peer family up in the tree when possible, the "check all
    virtualroot's children" was replaced with an approach where we keep a
    list of previously visited members of the peer set, to prevent cycles.
    
    Since there can be multiple peer dependencies on a given dep in the
    peer set, some more restrictive than others, so all edges need to be
    checked.  (Previously, it would not check meta-peers of the initial node
    being placed, so these additional constraints weren't being honored.)
    
    However, since we're re-checking peers of peers within the set, there's
    no need to *also* scan through all of the children of the virtualRoot!
    Doing so led to an explosion of peer dependency checking, an absolute
    cacophony of excessive and damaging pedantic strictness!  As a result,
    poor yargs could not install its peer dependencies, even though a
    resolution was quite possible without even resorting to force or
    non-strict overrides.
    
    Rather than spend several days replicating the precise issue that
    caused yargs' dependency graph to trigger a spurious ERESOLVE error,
    yargs is added as a test case.  Hence, there are quite a few new
    additions to the registry mocks packument data, and many snapshots
    changed to reflect the new versions available.  The next commit will
    remove all registry mocks which are no longer in use.

commit c9413055374893cd73abab47dfb668aa5ec331c1
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 15:43:39 2020 -0700

    1.0.2

commit 94516f30235077ca246298af76a7343b04e7e255
Author: isaacs <i@izs.me>
Date:   Thu Oct 15 15:10:58 2020 -0700

    fix cycles/ordering when peer deps require nesting
    
    Previously, there were cases where a peer dependency group might cycle
    back in on itself, in such a way that we added a node and its peers
    _prior_ to another member of the peer set that also peer-depended upon
    the peer dependency.  Since the nodes were being moved rather than
    copied, this meant that the conflicting peer was not around to be
    checked, and so we would trigger peer conflict ERESOLVES when we tried
    to resolve the dependencies of the second peer dependent at a higher
    level.
    
    By copying out of the virtual root peerSet, rather than moving, and
    tracking which edges have already been overridden, we can avoid a lot of
    other checks later on in the process, while ensuring that the
    appropriate set of peer dependencies are being loaded at the optimal
    level each time.
    
    PR-URL: https://github.com/npm/arborist/pull/160
    Credit: @isaacs
    Close: #160
    Reviewed-by: @darcyclarke

commit ac51ae879b9087dc47d598da896f5fe59b17df17
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Oct 14 18:31:38 2020 -0400

    test: add tests for scoped registry fix
    
    PR-URL: https://github.com/npm/arborist/pull/158
    Credit: @nlf
    Close: #158
    Reviewed-by: @isaacs

commit 25beca5df92f8ea37baa18453b763bb75268a134
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Oct 14 18:26:16 2020 -0400

    fix: replace pacote.extract scope for resolved
    
    Instead of manually setting a scope property that gets forwarded to
    pacote.extract, uses a spec that sets the resolved value so that pacote
    uses that instead.
    
    Addresses code review from #158

commit 6f5939aa7e163b4aa77ed7500c4f418559fa7491
Author: nlf <quitlahok@gmail.com>
Date:   Wed Oct 14 09:03:03 2020 -0700

    fix: pass the scope of the package to pacote
    
    this allows npm-registry-fetch to correctly identify
    the registry associated with the request, which resolves
    the issues with incorrect auth being sent

commit d78e134bc9bba48d6aa3dfbe53574e910923c7da
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 22:50:10 2020 -0700

    1.0.1

commit bedb60d85be8dfa5cf9871c9a69a9e51a6719952
Author: Darcy Clarke <darcy@darcyclarke.me>
Date:   Tue Oct 13 01:13:32 2020 -0400

    fix: readme image
    
    Switching default branches from `master` to `main` changed the image ref.
    
    PR-URL: https://github.com/npm/arborist/pull/157
    Credit: @darcyclarke
    Close: #157
    Reviewed-by: @isaacs

commit 13d76e34158c96b039706fdf6df25b4b815042d1
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 17:46:46 2020 -0700

    1.0.0

commit 2e2e1b1dbb3548e85163cdf6fbd694e3e8a65364
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 15:10:11 2020 -0700

    Update peerDep conflict resolution logic
    
    This change makes it so that:
    
    - peerDeps will *always* install when --force is set
    - peerDep conflicts will crash when --strict-peer-deps is set
    - Otherwise, peerDep conflicts will be overridden force-style whenever
      the *cause* of the conflicting peer deps is not the current root
      project or a workspace.
    
    To accomplish this, the "source" of the peerSet is tracked, and the
    ERESOLVE explanation code is changed, because some sorts of conflicts
    can be detected in the peerSet creation phase, before a Node is
    instantiated.
    
    PR-URL: https://github.com/npm/arborist/pull/156
    Credit: @isaacs
    Close: #156
    Reviewed-by: @nlf

commit d774bc3d3a6dbf35c5480f6abcc11bb555e8ab10
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 15:04:43 2020 -0700

    move resetDepFlags into a module

commit c48feff8cb0a320ce0da8f1a84a751e0b4cd4c42
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 14:09:48 2020 -0700

    Add Node.isWorkspace flag, refactor explanation code
    
    This lets us explain an edge directly, since a subsequent commit will be
    explaining peer conflicts starting from an edge in some cases, rather
    than starting from a conflicted node, if the conflict occurs while
    building the peerSet.

commit e76b9f4bf603064561e0c7ca2d7bf948e9bc8e37
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 13:53:06 2020 -0700

    lint: allow labels on loops and breaks

commit ff3fe8e3375528c65da5a51d92435acfa65d441d
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 13:52:53 2020 -0700

    reg mocks: do not cache errors when proxying

commit 0071a21eadf099fd0ae96aa0a78f8f0fbead2869
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 13:51:39 2020 -0700

    mock packuments for more peerDep conflict cases

commit 45144a7d3bd52d2990dc7e847da323a7b3411cd8
Author: isaacs <i@izs.me>
Date:   Mon Oct 12 12:49:58 2020 -0700

    Add packument test fixtures used by ancient lockfile inflation test

commit f54e99c8ad32abd0af3b8fa99e5fd44ce8d9c326
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Oct 9 13:39:01 2020 -0400

    0.0.33

commit d72c667473933851f8d4395647bf2cd8319d4389
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Oct 7 16:13:56 2020 -0400

    fix: do not rewrite malformed package.json
    
    Reify was rewiriting contents of a malformed package.json. This
    changeset fixes the problem by making sure build-ideal-tree properly
    throws when finding EJSONPARSE errors from the root package.json
    
    Fixes: https://github.com/npm/cli/issues/1883
    
    PR-URL: https://github.com/npm/arborist/pull/154
    Credit: @ruyadorno
    Close: #154
    Reviewed-by: @isaacs

commit 99adcf58109be6c48fb4b3ff8f77f968af141d07
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Oct 6 14:41:07 2020 -0400

    0.0.32

commit 2abd9eaafb79ed11d7ccafff501f127b69bcd5bf
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Oct 5 15:33:14 2020 -0400

    fix: workspaces cleaning up nm folders
    
    When installing from a tree that has actual/virtual trees arborist was
    missing info on workspaces during build-ideal-tree leading to a reify
    diff that missed all workspaces and causing all workspaces and their
    dependencies to be removed from the node_modules folder.
    
    This fixes it by making sure we append workspaces info first thing upon
    reading root node in build-ideal-tree
    
    Fixes: https://github.com/npm/cli/issues/1784
    
    PR-URL: https://github.com/npm/arborist/pull/153
    Credit: @ruyadorno
    Close: #153
    Reviewed-by: @isaacs

commit 36449b1fa70ad834d0ed215d175c81b0741b7a08
Author: isaacs <i@izs.me>
Date:   Fri Oct 2 11:18:14 2020 -0700

    0.0.31

commit 967a99ddde969b03598792de0471e04935e46098
Author: isaacs <i@izs.me>
Date:   Fri Oct 2 11:05:01 2020 -0700

    Update bundle dep if bundled by root project only
    
    PR-URL: https://github.com/npm/arborist/pull/152
    Credit: @isaacs
    Close: #152
    Reviewed-by: @nlf

commit 3f305279add359857fd8bd260d9cddc2c5e36d7b
Author: isaacs <i@izs.me>
Date:   Thu Oct 1 10:53:00 2020 -0700

    Respect gypfile:false flag in package.json
    
    This does a couple of things:
    
    1. Explicitly add a flag in _addToBuildSet to indicate that we've
       already checked this node.  This _should_ be unnecessary, but it's
       possible that we have no script and still need to check for a gypfile
       when we have old metadata, so this addresses the edge case there, and
       makes the logic a little clearer.
    2. Use the defaultGypInstallScript from the @npmcli/node-gyp package,
       rather than a hard-coded string.
    3. Handle cases where there are bins and also a default node-gyp script.
    
    PR-URL: https://github.com/npm/arborist/pull/151
    Credit: @isaacs
    Close: #151
    Reviewed-by: @nlf

commit b2df550b5957226b3b23312e82bc984d3b9b637d
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:57:38 2020 -0700

    0.0.30

commit 66d47db67d5599a6ed1df03b90f481ec3e67faff
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:56:17 2020 -0700

    update all deps

commit 0a7514a84d5090b65164c6fa26d07fb4b5333208
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:54:55 2020 -0700

    @npmcli/run-script@1.7.0

commit fbdd920a0a6aac5ed9b52840ed8caa0b35e17e9f
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 16:51:49 2020 -0700

    0.0.29

commit 14969102f1b7b435c82f45c1e167ca74f0a2e77e
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Wed Sep 30 14:42:57 2020 -0700

    Default to building node-gyp dependencies
    
    PR-URL: https://github.com/npm/arborist/pull/150
    Credit: @bonkydog
    Close: #150
    Reviewed-by: @isaacs
    
    EDIT(@isaacs): replaced large fixture with mock, addressed edge case in
    rebuild logic.

commit dbc6b9228888ab7689ef2037861206de7bbf801a
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 10:44:17 2020 -0700

    Do not install or build if there is a global top bin conflict
    
    Fix: https://github.com/github/npm-cli/issues/14
    
    PR-URL: https://github.com/npm/arborist/pull/148
    Credit: @isaacs
    Close: #148
    Reviewed-by: @nlf, @darcyclarke

commit 60a796bc691262d0556ccdddb6f7fabbf17d3aae
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 10:07:14 2020 -0700

    add bin-links@2.2.1
    
    The better to check bins early with

commit 32cff51ccb7ce4779869e5dae63733ed3df42c8c
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 11:27:08 2020 -0700

    Do not drop peer/dev dep while saving if both set
    
    Fix: https://github.com/npm/cli/issues/1849
    
    PR-URL: https://github.com/npm/arborist/pull/149
    Credit: @isaacs
    Close: #149
    Reviewed-by: @nlf, @darcyclarke, @ljharb

commit 731226cba42e9d4cbf5dcf9abfc55d70ae9136ee
Author: isaacs <i@izs.me>
Date:   Wed Sep 30 12:25:40 2020 -0700

    ci: push to coveralls on ubuntu, not macos
    
    The macOS build takes a lot longer, so let's not add an HTTP request on
    top of it.

commit a8f54542e60bef553d1042a3469fb5ab8fd8ea1c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Sep 30 11:48:28 2020 -0400

    @npmcli/map-workspaces@1.0.1
    
    Do not throw when reading workspaces that may have been defined in
    multiple patterns in package.json workspaces config.

commit 42ac0e4b89925f49d3f097ac04f1618ed3c61d2e
Author: isaacs <i@izs.me>
Date:   Tue Sep 29 10:24:50 2020 -0700

    0.0.28

commit bc6317fcd1b99e37deb7566e2fc51de63524584b
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 29 00:12:18 2020 -0400

    fix: workspaces install entering an infinite loop
    
    Turns out that having workspaces (or any linked packages) at the same
    level depending on conflicting versions of a peer dep was not yet
    handled by arborist. This specific combination was setting up the
    install into an infinite loop, unable to properly resolve
    build-ideal-tree._canPlaceDep.
    
    This changeset adds tests for this specific scenario and also provides a
    fix by properly resolving _canPlaceDep to a CONFLICT state if
    trying to resolve conflicting versions of a peerDep within a link node,
    resulting in throwing a proper ERESOLVE error in these cases.
    
    Fixes: https://github.com/npm/cli/issues/1843
    
    PR-URL: https://github.com/npm/arborist/pull/146
    Credit: @ruyadorno
    Close: #146
    Reviewed-by: @isaacs

commit 4b8f6207c6364ef625681ffde11004aab9cdcb2b
Author: isaacs <i@izs.me>
Date:   Mon Sep 28 14:10:37 2020 -0700

    Save provided range if not a subset of savePrefix
    
    If a user installs `foo@1.x <1.2.3`, and we resolve to `1.2.2`, then we
    should not save it as `^1.2.2`, since that would allow versions outside
    of the requested range.
    
    Explicit versions and tags are still saved using the savePrefix, since
    those are not ranges, and users can set `--save-exact` if they wish it
    to be saved exactly.
    
    Fix: https://github.com/npm/arborist/issues/127
    Fix: https://github.com/npm/cli/pull/193
    Fix: https://npm.community/t/7005
    
    PR-URL: https://github.com/npm/arborist/pull/145
    Credit: @isaacs
    Close: #145
    Reviewed-by: @isaacs

commit b1d5e36752984aa78398aab16517810ad3b01fee
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 24 17:46:20 2020 -0400

    chore: remove some unused lines on tests
    
    PR-URL: https://github.com/npm/arborist/pull/142
    Credit: @ruyadorno
    Close: #142
    Reviewed-by: @isaacs

commit c9f5323dbee328770b8d623b12d2629afa56e642
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 24 17:33:39 2020 -0400

    fix: package-lock.json custom indentation
    
    package-lock.json files should follow the same indentation used on
    package.json files.
    
    This commit fixes the issue by forwarding the proper indent selected for
    package.json to Shrinkwarp.save method. Also, added tests asserting
    appropriate tab-indentation for both files.
    
    Fixes: https://github.com/npm/cli/issues/1662
    
    PR-URL: https://github.com/npm/arborist/pull/141
    Credit: @ruyadorno
    Close: #141
    Reviewed-by: @isaacs

commit d38e967680693ab4752021596cd99c0642b8116a
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 24 12:35:16 2020 -0400

    chore: pruner should use _idealTreePrune
    
    PR-URL: https://github.com/npm/arborist/pull/140
    Credit: @ruyadorno
    Close: #140
    Reviewed-by: @isaacs

commit 410bc2ae17ae04f943aee6c22c312b6bb1af2d10
Author: isaacs <i@izs.me>
Date:   Fri Sep 25 13:55:00 2020 -0700

    use a linter
    
    We have more people contributing to this library now, so adding some
    automated consistency is looking more and more important.
    
    Also, this found a few unused variables, which highlighted a bug, albeit
    a harmless one: a timer string was being created, but then no timer
    being attached to Shrinkwrap loading.  (That's why the reify snapshot is
    updated.)  Some other light refactoring was done in a few places to get
    eslint to produce a reasonably readable output, and I think mostly for
    the improvement of readability.
    
    I don't 100% agree with every choice the linter is making here.
    Specifically, I prefer using {} around single-line blocks in some cases,
    especially loops, but they are omitted most of the time, so that's the
    way I set the config.  Consistency is good though, and this will help us
    maintain it.
    
    Linting is set up as a posttest operation, so we can catch things
    without having it stubbornly refuse to even run tests until it's all
    sparkling.
    
    PR-URL: https://github.com/npm/arborist/pull/144
    Credit: @isaacs
    Close: #144
    Reviewed-by: @ljharb

commit da93ff1493004ddc9b51e87f9d52b53723754f67
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Fri Sep 25 10:30:11 2020 -0700

    Don't check engine or platform of optional dependencies
    
    PR-URL: https://github.com/npm/arborist/pull/143
    Credit: @bonkydog
    Close: #143
    Reviewed-by: @isaacs

commit 424cc70ae834c4b41edbee9aebca48ba4f57e94b
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Thu Sep 24 15:37:05 2020 -0700

    Add test packages to registry mocks

commit 89581967a4c2abbbd9c570c53d7187303fdf14cb
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Thu Sep 24 14:44:48 2020 -0700

    Check engine and platform when building ideal tree

commit 3e86ff5f44de62e42fcec14f3f6b6379d6602ee5
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 22 12:15:46 2020 -0400

    0.0.27

commit 8e1291e69322a8e90d13949e9994f6f0b739bd34
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 22 12:09:34 2020 -0400

    fix: custom registry pacote manifest
    
    PR-URL: https://github.com/npm/arborist/pull/139
    Credit: @ruyadorno
    Close: #139
    Reviewed-by: @darcyclarke

commit e13ba3bb66a7f7619c3baaa03cc7bccb5201e1ce
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Fri Sep 18 15:20:22 2020 -0700

    Don't automatically install optional peer dependencies
    
    Fix: https://github.com/npm/rfcs/pull/224
    
    PR-URL: https://github.com/npm/arborist/pull/138
    Credit: @bonkydog
    Close: #138
    Reviewed-by: @isaacs

commit 383ccfcf8f5a9afc6cb13d41bf59d48e7b17d7b9
Author: Brian Jenkins <bonkydog@bonkydog.com>
Date:   Fri Sep 18 21:44:31 2020 +0000

    Clarify problemEdges logic

commit c427fa96ba4535f09cf625db31216c86dafe459c
Author: isaacs <i@izs.me>
Date:   Thu Sep 17 15:17:46 2020 -0700

    0.0.26

commit fe0a5f6945366a62fdbe334a8b2c235b8c622fde
Author: isaacs <i@izs.me>
Date:   Thu Sep 17 11:18:48 2020 -0700

    Add strictPeerDeps, override ERESOLVE if not true
    
    In the overwhelming majority of cases in the wild, a peer dependency
    conflict that results in an ERESOLVE can be fixed by using the
    `--force` flag.
    
    However, this has other side effects (causing `npm audit fix` to install
    semver-major fixes, blowing away file collisions, etc.) which might not
    be desirable.  Also, since it's opt-in, it means that users have to run
    the install twice for something where we're _pretty_ sure what the right
    course of action is.
    
    Let's just make that particular override the default, and reduce most
    ERESOLVE errors from a crash to a warning.
    
    PR-URL: https://github.com/npm/arborist/pull/136
    Credit: @isaacs
    Close: #136
    Reviewed-by: @ruyadorno

commit 0a35a362143d7480c5421f3323bbfa4304044f8f
Author: isaacs <i@izs.me>
Date:   Thu Sep 17 11:18:27 2020 -0700

    Do not stack overflow on vuln.via cycles

commit 3f14dac69eab0051ccc6b211bef457cd418018e4
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 16:53:18 2020 -0700

    sort bin link queue for greater determinism
    
    Fix: #130

commit 65732a7c0bbe69bf6f10038c2dbd3bc214b5207c
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 16:49:14 2020 -0700

    bin-links@2.1.4
    
    Avoid trying to clobber bins currently in the process of linking

commit 0edf2ed0bf7b210d249ed09e6bc8f5bf265c8393
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 15:08:30 2020 -0700

    Log cleanup and engine mismatches more usefully
    
    Via: https://github.com/targos/npm7-cra#issue-2-npm-ci-prints-an-error-without-context

commit 789f9bc8259dbe95486b0a8da2d8c23216276bff
Author: isaacs <i@izs.me>
Date:   Wed Sep 16 14:52:45 2020 -0700

    Do not try to re-resolve failed nodes forever
    
    Via: https://github.com/targos/npm7-cra#issue-4-npm-i-react17-never-ends

commit ace4988d8abd1d8d82bd18964a8357ffea897bed
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Sep 16 10:40:12 2020 -0400

    0.0.25

commit 8dc47ac5a4aa784cc9d594885fe80e7f327301f8
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 18:23:02 2020 -0700

    Use @npmcli/metavuln-calculator for faster audits
    
    This makes the AuditReport calculation around 40% faster in the cold
    cache state, and anywhere from 90% to 99% faster with a warm cache.
    
    It also sets the stage for the capability of doing audits without
    hitting the registry, and potentially avoiding known-vulnerable package
    versions if they've been previously marked and cached as vulnerable.
    (This additional functionality is not implemented in this change, but
    it's something we can do in the future.)
    
    One impact is that the `Vuln` class now has an `advisories` set, as well
    as a `via` set.  `vuln.advisories` is a set of advisories created by the
    metavuln-calculator, which can represent either actual advisories or
    metavulns.  The `via` set is a list of Vuln objects _only_, so that we
    can track fixes and report on them comprehensively.
    
    Fix: https://github.com/npm/arborist/issues/109
    
    PR-URL: https://github.com/npm/arborist/pull/133
    Credit: @isaacs
    Close: #133
    Reviewed-by: @ruyadorno

commit 47b28cc9b72a670a708239a64088fdb52c65f002
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 17:51:44 2020 -0700

    scripts: note dangling/duplicated timers

commit 9c8899b64ac36a6dbec5e9d25a1a2c6b0248541c
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 17:51:10 2020 -0700

    add @npmcli/metavuln-calculator dependency

commit 013dac4e1ecbea717d91c99421c9de192ca399ea
Author: isaacs <i@izs.me>
Date:   Tue Sep 15 17:48:52 2020 -0700

    0.0.24

commit ba2b5dcc7b463e028f429d515e9e761c2b5a1b29
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 15 18:28:16 2020 -0400

    fix: always parse spec from cwd
    
    Always parse specs from added deps using the cwd as reference. Also
    refactored lib/add-rm-pkg-deps.js to only used rawSpec now that
    build-ideal-tree does the heavy lifting of parsing relative paths.
    
    PR-URL: https://github.com/npm/arborist/pull/132
    Credit: @ruyadorno
    Close: #132
    Reviewed-by: @isaacs

commit 1645ab80b3aeea7eee983b00ea986336578d8b13
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Sep 14 18:12:15 2020 -0400

    fix: package.json deps order
    
    Dependencies should appear in alphabetical order in package.json
    
    Fix: https://github.com/npm/cli/issues/1766
    
    PR-URL: https://github.com/npm/arborist/pull/131
    Credit: @ruyadorno
    Close: #131
    Reviewed-by: @isaacs

commit 1374d55184e7b7a13de95b5236e92066ef5d9dfe
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 11 22:54:05 2020 -0400

    fix: follow symlinks on build-ideal-tree add
    
    Symlinks were being tracked as invalid when loading actual trees since
    their realpath wouldn't match, given that build-ideal-tree was just
    preserving the fetchSpec read from npm-package-arg when adding new
    packages to the ideal tree.
    
    This change fixes it by properly parsing and following symlinks
    realpaths at the moment they're added to the ideal tree.
    
    PR-URL: https://github.com/npm/arborist/pull/129
    Credit: @ruyadorno
    Close: #129
    Reviewed-by: @darcyclarke

commit db13425907e40a19c723f4365a0e2c3bfa669090
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 10 17:38:47 2020 -0400

    0.0.23

commit ef36c36b85811f1268e3d8d696d3b17f64c4af75
Author: isaacs <i@izs.me>
Date:   Tue Sep 8 11:51:54 2020 -0700

    Log script executions and exits
    
    There have been a few reports from users who were concerned and
    perplexed that their install scripts didn't seem to be run, looking at
    the logs npm produces.  In fact, the install scripts WERE running, just
    running quietly and successfully.
    
    This logs the commands Arborist runs explicitly, along with exit code
    and signal, so that it's more clear what ran when we look at the logs.
    
    Close: #112
    
    PR-URL: https://github.com/npm/arborist/pull/123
    Credit: @isaacs
    Close: #123
    Reviewed-by: @ruyadorno

commit 887728f81c3000b74350154e5da014a8e64796db
Author: isaacs <i@izs.me>
Date:   Thu Sep 10 13:49:56 2020 -0700

    0.0.22

commit 354f6800b6473fbd055920d97c2093148b4b09b9
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Sep 10 16:01:01 2020 -0400

    fix: path resolution for global linking filepaths
    
    related to: https://github.com/npm/cli/pull/1786
    
    Co-authored-by: isaacs <i@izs.me>
    
    PR-URL: https://github.com/npm/arborist/pull/125
    Credit: @ruyadorno
    Close: #125
    Reviewed-by: @isaacs

commit 5492920be647d8933187fc666a656efdf6684a1e
Author: isaacs <i@izs.me>
Date:   Tue Sep 8 11:24:46 2020 -0700

    rebuild: finish dangling timer event

commit 58547d63697d47fc74e3424ac747e9fcf4f92ea7
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 4 14:31:21 2020 -0400

    0.0.21

commit b1e26631e6b4fd9364c920eb6aa7774a14c3c32c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 4 10:21:56 2020 -0400

    fix: install workspaces on update.all=true
    
    build-ideal-tree is missing info on workspaces when update.all=true
    since the mapping of workspaces got moved to load-actual.
    
    This commit fixes it by reinstating the mapWorkspaces logic to
    build-ideal-tree.
    
    fix: https://github.com/npm/cli/issues/1763
    
    PR-URL: https://github.com/npm/arborist/pull/120
    Credit: @ruyadorno
    Close: #120
    Reviewed-by: @isaacs

commit 85ae25549cf960ab53c1163f531a03a0db4de9f4
Author: isaacs <i@izs.me>
Date:   Fri Sep 4 09:51:19 2020 -0700

    Dont flag workspace edges as suspect unnecessarily
    
    The previous update to flag edges as suspect if the package.json had
    changed did not take into account the 'workspace' edges coming from the
    root node.
    
    As a result, it would _always_ flag edges as suspect if any workspaces
    were in use, resulting in unnecessary work in loadVirtual.
    
    The solution here is to load the actual workspace links when we load the
    package.json for the root node, so that we can compare the actual
    workspaces to the virtual workspaces present in the lockfile.
    
    This has the side effect of requiring that we fill out the fixtures for
    all the virtual workspace loading tests.  This more closely models real
    world projects, however, since workspace contents are typically part of
    the root project repository anyway.
    
    This does not go as far as detecting when the package.json files of
    workspace projects themselves get edited, which will likely have to be
    done in a later commit.
    
    PR-URL: https://github.com/npm/arborist/pull/122
    Credit: @isaacs
    Close: #122
    Reviewed-by: @ruyadorno

commit 7d1a3fdcddea575554e52fa242f3cedf9a36a862
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Sep 4 14:23:38 2020 -0400

    fix: remove bin links on prune

commit 0b179612132473b30189d314399155fd0fcae471
Author: isaacs <i@izs.me>
Date:   Thu Sep 3 16:42:01 2020 -0700

    0.0.20

commit a20ea59639978e23d4ceaa410e62da7b2b2c688a
Author: isaacs <i@izs.me>
Date:   Thu Sep 3 16:40:36 2020 -0700

    update some registry mocks and the audit-report test

commit 368dd4ff04e4a68767ce2a73f5993526fd9ea80e
Author: isaacs <i@izs.me>
Date:   Thu Sep 3 16:26:32 2020 -0700

    Save long files less annoyingly in fixtures

commit e034306be56dbbb7073574ed71c5ea92eb3b2f6c
Author: isaacs <i@izs.me>
Date:   Wed Sep 2 14:27:02 2020 -0700

    Refresh dep flags in virtualTree, prune extraneous from ideal
    
    This fixes a situation where the root node's package.json is manually
    edited, resulting in a package-lock.json which contains extraneous
    dependencies.  If we don't mark those as extraneous, we end up reifying
    them back to disk, even though they should be pruned.
    
    This performs a fresh calcDepFlags step only in the case where the root
    node's package does not match the edges defined in the package-lock.json,
    to handle these cases thoroughly and completely, but only in when it's
    truly necessary to do the full tree-walk.
    
    PR-URL: https://github.com/npm/arborist/pull/119
    Credit: @isaacs
    Close: #119
    Reviewed-by: @isaacs

commit e8711ad3fcebb3c1607e72fbc971531776e30195
Author: isaacs <i@izs.me>
Date:   Wed Sep 2 10:58:51 2020 -0700

    update snapshots
    
    Also, ensure that the audit-report test is not hitting the public
    registry.
    
    PR-URL: https://github.com/npm/arborist/pull/118
    Credit: @isaacs
    Close: #118
    Reviewed-by: @ruyadorno

commit bc63759167b17f7a7b63253384577587e2a0703d
Author: isaacs <i@izs.me>
Date:   Wed Sep 2 10:56:42 2020 -0700

    update json-parse-even-better-errors

commit 7fa48a9c98c4823318aca34f108a95addf583ca0
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:41:39 2020 -0700

    Refactor and explain ERESOLVE conflicts
    
    When a peerDep cannot be resolved, this changes a few things.
    
    First, the Node.explain() method is used to explain what was present
    that conflicted, why it's there, what the conflict (or peer conflict)
    was that we couldn't install, and why THAT node was trying to be added.
    With some prettying up and conversion to human-intelligible language,
    this should provide the user with enough information to make an informed
    decision about what to do.
    
    Second, we override the peer dep with a "best guess" as to what ought to
    go in that location if --force is enabled.  If the target location is
    the first place we're trying to place the peerDep (ie, it is the parent
    of the node that has the peer dependency), and it has a direct
    dependency on the node in question, then we use the parent's dependency
    spec instead.
    
    Lastly, if a _set_ of peer dependencies can be moved deeper into the
    tree in order to avoid a conflict, we now detect that and do that as
    well.
    
    The "fixWithForce" boolean on the explanation object can be used to
    suggest that the user MAY retry the command with --force in order to
    resolve the situation.  Otherwise, --legacy-peer-deps is the other quick
    fix.
    
    With these changes in place, gatsby, reakit, doctokit, and several other
    real-world projects that depend on nested conflicting peerDependencies
    can be installed, albeit requiring the use of the --force flag.

commit 488293866d73e278d19cbe3ce46f375bf2f7e4d5
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:31:00 2020 -0700

    Initial ERESOLVE explanation spike in the example scripts

commit 57dd3dcf7b962fd6ef271cd0f84c4901a7e72941
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:30:11 2020 -0700

    Bump up test time limit for audit-report
    
    Really need to make audits faster by caching more, but for now, this is
    a band-aid on the problem.

commit b33621cd7c42b23bb1db06b27512700295b7fff2
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:23:04 2020 -0700

    add more explanation to infinite dep regress fixture readme

commit f52300767c5f5de697d1ed903d0839b77bd5375f
Author: isaacs <i@izs.me>
Date:   Tue Sep 1 17:22:23 2020 -0700

    Fixture packages to test peer dep conflict cases

commit 86ba8c28cf79feb069204e2559a18d5eb60660a9
Author: isaacs <i@izs.me>
Date:   Mon Aug 31 16:22:51 2020 -0700

    A utility to get all the peers of a given node
    
    This is used when analyzing sets of peer dependencies for conflicts,
    when we need to determine whether the peer set can be nested deeper into
    the tree in order to avoid a conflict.

commit 749d5b10f87e9bb384b136e15167ba8ff1da7816
Author: isaacs <i@izs.me>
Date:   Mon Aug 31 14:54:33 2020 -0700

    Add Node.explain() method
    
    This allows us to easily get a simplified 'explanation' object that
    describes why a node is being placed in the tree.  Ie, the chain of
    dependencies that leads back to the root node in the project, for use
    when we encounter unresolvable conflicts in peerDependencies.

commit 2b892713526a5a90f287f34d5d0e3116b8c16fc3
Author: isaacs <i@izs.me>
Date:   Fri Aug 28 16:24:23 2020 -0700

    lint fix

commit c71f2db4159275aca02b8802cff868f8521b190c
Author: isaacs <i@izs.me>
Date:   Fri Aug 28 16:22:29 2020 -0700

    update all deps

commit 00ecfc7594cbd7b1b82ebf36c88ec15c7983017e
Author: isaacs <i@izs.me>
Date:   Fri Aug 28 15:42:52 2020 -0700

    Remove inaccurate statement re registry-scoped configs

commit c0b45dcc8bf1d5c5fb06049d5009e49723c19e1e
Author: isaacs <i@izs.me>
Date:   Fri Aug 21 15:28:21 2020 -0700

    test fixture with a long looping chain of peer dependencies

commit 5b550501f50d6489d7e5f7598a97a5cf4cc5cc8a
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 1 14:24:40 2020 -0400

    0.0.19

commit d7cb19737d19bc884c4573693522698147870a51
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 1 14:22:46 2020 -0400

    fix: extraneous workspaces

commit 804f2e3d9f6128bed134239a9f43ea172c3c9ef3
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Sep 1 11:14:01 2020 -0400

    0.0.18

commit e9dd439a7059c9bf96dfa451f217712fc72ca5dd
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon Aug 31 17:05:45 2020 -0400

    fix: loadActual workspace support
    
    - moved workspaces mapping from build-ideal-tree into load-actual
    - added tests and proper symlink setup
    
    PR-URL: https://github.com/npm/arborist/pull/117
    Credit: @ruyadorno
    Close: #117
    Reviewed-by: @isaacs

commit 9f08d0b1c5119fddf6321f21eccab276ccb148ed
Author: isaacs <i@izs.me>
Date:   Fri Aug 21 15:25:50 2020 -0700

    add sequential peer dep test fixture
    
    This use case is actually already covered by other tests, and since
    arborist does the right thing, there's no need to add another test for
    it, but I wanted to check my assumption when someone asked about this
    sort of use case.

commit 2e1d3f97af6aff7ed7c7e241cecb1b365b92d3ee
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:34:49 2020 -0700

    0.0.17

commit 1b45ef9d99b50febe61139d5b2301eb1467a44b8
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:23:16 2020 -0700

    test: add better error tracking in loadActual test

commit 987ad6e52b9da071f2a42baa850ebbf17613e41e
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:16:06 2020 -0700

    Load package.json when loading virtual tree
    
    Otherwise we drop all the extra metadata fields when doing
    npm audit fix.

commit 3654cd4cf3e5ee8a2ea22e62acfecb82cf972325
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:15:13 2020 -0700

    preserve both indentation and newline in lockfiles

commit 7eb3eddfbccc279289317a1a8f7268db8e072d70
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:09:07 2020 -0700

    preserve line endings and indentation when saving package.json

commit ef9b0ce7771542c68c06fdb9229f39eb1ab24db5
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:09:39 2020 -0700

    update json handling for formatting preservation

commit bf27f1a95259ca8407de365f925e98c1d9e7a4e5
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:00:59 2020 -0700

    parallelize inflating old shrinkwrap files

commit f8112e1433426600c8a9a9b166fa9ec315506494
Author: isaacs <i@izs.me>
Date:   Thu Aug 20 15:00:33 2020 -0700

    a fixture with an empty package-lock and no package.json

commit f9dd429b6a0155148789f9e46553ec40b0e3b4dd
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 22:44:10 2020 -0700

    add missing test fixture and snapshots

commit f1cacc09f24424cf483e8b16a54f2734268283f3
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 18:23:06 2020 -0700

    refresh manifests when doing a complete idealTree build for old lockfiles

commit 021e24866a7157625bc11d734e99e79b2861d33d
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 18:08:10 2020 -0700

    reify a project with an ancient lockfile, loading all deps

commit f832c2cfe4c3351b0fcca77f06d9e11281d5c42d
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 17:55:05 2020 -0700

    Reinflate ancient lockfiles when building ideal tree

commit 1991bfbd7a6e99902dff7fdb5abc4ba2801afb38
Author: isaacs <i@izs.me>
Date:   Wed Aug 19 17:41:50 2020 -0700

    Add the ancientLockfile flag for v1 lockfiles without requires

commit 916ebb6a5a9a1a8c96aa5c1301bf891ac122e85e
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:34:02 2020 -0700

    0.0.16

commit 2d24fa5b81974aaa32daf114dd8bdb200d91b07f
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:27:39 2020 -0700

    do not remove optional nodes from the tree when trashed
    
    We need them to stick around in the lockfile even if the optional
    installation fails.

commit 2b7194fb4b478ce2e360efd8ed54661181d0eb0d
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:11:18 2020 -0700

    add missing test fixture for lying v5 lockfile audit

commit 589ba9acaf26ae5ca9b2579df38f72435cdebac1
Author: isaacs <i@izs.me>
Date:   Mon Aug 10 14:00:03 2020 -0700

    Respect omit options in Arborist.audit()
    
    This also cleans up some bugs in the data being sent to the legacy quick
    audit endpoint (which were failing, but since we only use it as a
    fallback, and the public registry supports bulk advisories, it went
    unnoticed in npm beta testing).
    
    Any advisories against omitted deps will now be ignored.
    
    Fix: https://github.com/npm/arborist/issues/110

commit fb6019c25f2d12ef3453b5a0e6e871bae4ee2024
Author: isaacs <i@izs.me>
Date:   Sun Aug 9 18:02:37 2020 -0700

    0.0.15

commit 909651d042f3f7912f7a1a9f2b47d3676249de6f
Author: isaacs <i@izs.me>
Date:   Sun Aug 9 17:57:30 2020 -0700

    Do not get confused when root matches a duplicated metadep
    
    Root cause of https://github.com/npm/cli/issues/1641

commit cd2d3f4af6a87d26f8f6e7d9c957343df5700177
Author: isaacs <i@izs.me>
Date:   Wed Aug 5 15:51:53 2020 -0700

    ideal: use async for nicer code, always end idealTree timer

commit 3a475996d44159841aee4b8408a276668e094eb2
Author: isaacs <i@izs.me>
Date:   Wed Aug 5 11:27:20 2020 -0700

    0.0.14

commit 9b9dabae2f2707479d6a5ea2cdadad1f141b289f
Author: isaacs <i@izs.me>
Date:   Wed Aug 5 11:17:34 2020 -0700

    Omit peer deps from legacy lockfile requires lists

commit 1551d1a511415b93d41a88c9ae5277f15033f8a4
Author: isaacs <i@izs.me>
Date:   Tue Aug 4 11:14:48 2020 -0700

    0.0.13

commit 31038b36977659e490bddc91d0c2df9d7a8aeff2
Author: isaacs <i@izs.me>
Date:   Tue Aug 4 11:13:28 2020 -0700

    Avoid invalid auditReport with npm v5 lockfile
    
    npm version 5 created package-lock.json files that did not contain the
    full dependency spec in the 'requires' block.  As a result, a node may
    _appear_ to be a meta-vulnerability, but when we scan for the versions
    that actually _are_ vulnerable, we don't find any.
    
    The AuditReport.delete() method was not removing the vuln from the
    'effects' list of the vulnerabilities causing it, so this led to
    problems when trying to print the report, and being unable to find the
    missing items.
    
    There's still an issue where audit fix won't be able to fix the problem
    without first reifying to get a new lockfile, but since this only
    affects projects migrating from npm v5, the impact is more minor.
    
    cc: @ruyadorno

commit 69e62b7c456cf776615bd865a9073231493d34ec
Author: isaacs <i@izs.me>
Date:   Mon Aug 3 17:58:33 2020 -0700

    0.0.12

commit 73220d065d39304d8bec0a3204c7edade576a590
Author: isaacs <i@izs.me>
Date:   Mon Aug 3 17:54:04 2020 -0700

    Memoize many audit actions for huge speed benefits
    
    Need to go further, though.  If you have a library with a lot of deps,
    which has also published a lot of versions, and several of those deps
    have advisories posted against them, then there's an exponential
    explosion in the time required to figure out which versions of the
    library are vulnerable.
    
    In the case of npm's docs website, the dependency on gatsby was somewhat
    punishing as a result.
    
    We can go further in the future by caching the resulting set of
    metavulns from a given set of advisory endpoint JSON, and load those
    along with the initial set of vulnerabilities, so that we don't have to
    scan every packument's dependencies for transitive vulnerabilities.
    This commit doesn't do that, but it would be good to get that done prior
    to Arborist's 1.0 release.

commit 25799aa3b09cefe2c32a3a6312660ca22ce4b545
Author: isaacs <i@izs.me>
Date:   Sun Aug 2 13:31:45 2020 -0700

    0.0.11

commit c67fc64f822b58cb82628ebd622b193cdd1f00b3
Author: isaacs <i@izs.me>
Date:   Sun Aug 2 13:28:32 2020 -0700

    Do not duplicate bundled metadependencies
    
    Fix: https://github.com/npm/cli/issues/1597
    
    This implements approach 2 described in
    https://github.com/npm/cli/issues/1597#issuecomment-667639545.  It
    turned out not to be as challenging as originally thought, because the
    check happens when we can still just throw nodes in a trash to avoid the
    unpack and clean up the sparse tree.

commit 05dca3caea44988c5490c181e28ea124766c7f03
Author: isaacs <i@izs.me>
Date:   Wed Jul 29 10:44:04 2020 -0700

    0.0.10

commit d97228dbf56e4d124fd9512d38cc4864511de762
Author: isaacs <i@izs.me>
Date:   Wed Jul 29 10:42:00 2020 -0700

    Include ctor options with method options
    
    In practice, it seems weird that calling arb.reify() will drop the
    options passed to new Arborist(opts).  They can still be overridden, but
    since there are no overlaps (by design), it's fine to accept them from
    both places.
    
    It may be worthwhile to move _all_ options to the ctor, and not accept
    options objects in the public methods, but that's a bigger move.

commit 8a949bea7cdff2a6b7e78846111f4395fbe9508a
Author: isaacs <i@izs.me>
Date:   Wed Jul 29 10:33:52 2020 -0700

    Do not remove bundled deps when updating pkg
    
    When calculating the diff between the actual and ideal, the ideal tree
    does not contain bundled dependencies, since they'll be installed
    automatically and thus don't have to be reified.  As a result, the Diff
    shows these nodes as "removed", since they exist in the actual tree, but
    not in the ideal tree.
    
    However, this causes a problem when updating a package!
    
    When reifying, we add all the "removed" nodes to the trash list, and
    remove them at the end of the process.  In this case, it's unnecessary,
    since the contents of the updated package will have already been moved
    aside, including all their bundled deps.  The items on the trashlist are
    thus the _new_ installed bundled deps of the new version of the package.
    
    This led to a particularly perplexing situation self-installing the npm
    cli, where it would appear to install properly, but installing again
    left it without any dependencies at all!
    
    The fix is relatively straightforward, but it does mean that the Diff
    for a normal reify will be somewhat misleading, showing many removals
    that are not actually going to be removed.  The diff from a
    buildIdealTree({complete:true}) tree will be accurate, but at the
    expense of extra unpacks for all nodes with bundleDependencies.

commit 8248118c432e5a72a4ddeb7874ba4406dc8edf35
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 14:03:24 2020 -0700

    0.0.9

commit 6f7b263be1061c1f18691bbd5bfc749a7f701ae2
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 13:59:50 2020 -0700

    Correct usage of bundled:true in legacy shrinkwrap data
    
    Arborist was setting bundled:true for any bundled deps, including those
    bundled by the root project.  However, that's not what npm v6 does. The
    bundled:true flag reflects (in Arborist lingo) the Node.inDepBundle
    flag; ie, that a node is bundled by an installed dependency.
    
    This causes npm v6 to look up and try to install the parent node, which
    causes really bizarre failures with the root node.

commit e9da4c4a1a6e8b9d7fae3bb72b7a7fdc864f850b
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 09:56:30 2020 -0700

    0.0.8

commit e2916c6a2844bf4a06b6c4f4257b82e564ba5404
Author: isaacs <i@izs.me>
Date:   Mon Jul 27 09:55:24 2020 -0700

    loadVirtual should never produce a root node marked extraneous

commit de66814d085d17842ee1dc3430f6b712e56c706f
Author: isaacs <i@izs.me>
Date:   Sat Jul 25 13:04:43 2020 -0700

    0.0.7

commit 6c77194942db6bd530045bcb31cc6491b3cbcce6
Author: isaacs <i@izs.me>
Date:   Sat Jul 25 13:03:36 2020 -0700

    Fetch the specific tag when pkg@latest is added

commit 83272f2ade6ba8ccbf9628dd77bc077af8c2e98f
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 17:53:29 2020 -0700

    0.0.6

commit f09ae6dfaac1aa1b2bb607682657b54ce8829256
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 17:52:30 2020 -0700

    Resolve file: dep paths against cwd when installing globally
    
    Otherwise 'npm i foo.tgz' tries to look for /usr/local/lib/foo.tgz,
    which is clearly not the right thing to do.

commit ad912229691b49b0045be4b5b5c76ab924ae434f
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 12:22:26 2020 -0700

    0.0.5

commit 590cb50da4c28c1a4f2f127bf76fdf5d1e1530a9
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 12:18:56 2020 -0700

    Do not use hidden lockfile if a package is missing
    
    If a hidden lockfile contains a package which is missing from the
    node_modules folder, then it should be considered invalid.
    
    Typically, this would already be caught by the hidden lockfile
    being created prior to the folder being created.  However, in the
    bundle deps bug fixed in the previous patch version, the lockfile
    at node_modules/.package-lock.json would be created afterwards,
    and packages in node_modules would simply not be created in the
    first place (so there's no time update for deleting an entry).

commit 449f9703d03184222f739ee48ed6fdf543344854
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 11:18:40 2020 -0700

    0.0.4

commit 25c45128772ad29d4bcc4243272cb782fe9ff5c9
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 10:19:21 2020 -0700

    reify: unpack deps bundled by root node
    
    This introduces a Node.inDepBundle property, which specifically means
    that a Node is bundled by something _other than_ the root project.
    
    Previously, we were not unpacking nodes that are in a bundle, which is
    usually correct, except when they are bundled by the root project.

commit 1c03bb53f13a0fc08ac5fe0bc8c0db533cd46f0b
Author: isaacs <i@izs.me>
Date:   Fri Jul 24 10:18:53 2020 -0700

    Avoid dangling timers in audit-report when no nodes found

commit 7cdb6cd3d4c831388f235f80d1db96416ead3224
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Jul 17 14:28:44 2020 -0400

    test: fix links-all-over fixture
    
    PR-URL: https://github.com/npm/arborist/pull/107
    Credit: @ruyadorno
    Close: #107
    Reviewed-by: @isaacs

commit 37dc16ce82c81bc4403e1d7f2b26f805612bd1ef
Author: isaacs <i@izs.me>
Date:   Fri Jul 17 11:18:42 2020 -0700

    0.0.3

commit 9902c865d8d172b198563d3091b2a078797714df
Author: isaacs <i@izs.me>
Date:   Fri Jul 17 11:17:24 2020 -0700

    Add defense against Node/Link ctor throwing in loadActual
    
    Added test doesn't add coverage, because line was already covered.
    
    Paired with @ruyadorno

commit e29ee0e22c05bfb73cedd88debd2b0bc5ec74037
Author: isaacs <i@izs.me>
Date:   Thu Jul 16 11:40:58 2020 -0700

    0.0.2

commit e82f6fe4d61545962f3bc2d91f6061409599e8d6
Author: isaacs <i@izs.me>
Date:   Thu Jul 16 11:39:55 2020 -0700

    add Edge.prod convenience getter

commit df90b5f9b13c2de4514696febcdc58d01aa78f4a
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:50:52 2020 -0700

    0.0.1

commit f13174424a9285cfd8226471fbf77ec89c9ae2c0
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:44:26 2020 -0700

    Add Node.version getter field

commit 02bf5ff0f57f15e76a58a66cc98ca895a737e51b
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:40:52 2020 -0700

    Add Node.pkgid field

commit 017e9f5ff03865d982f1eb6bd451f205d9a4f008
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:23:24 2020 -0700

    Add Node.satisfies(request) method

commit 522b446eb044a5f3266949b79333ca3873fadac8
Author: isaacs <i@izs.me>
Date:   Tue Jul 14 15:23:08 2020 -0700

    Add ENOLOCK error code to missing shrinkwrap file error

commit 2702ffea9060c5d9529b95959172c1671d3294ed
Author: isaacs <i@izs.me>
Date:   Fri Jul 10 17:41:49 2020 -0700

    0.0.0

commit 739b8fa56e27560ff207f03ef9dd3ef23782a7a8
Author: isaacs <i@izs.me>
Date:   Fri Jul 10 17:18:25 2020 -0700

    update mkdirp-infer-owner

commit 727492c58c766c89602295ab8292e55b42967dc8
Author: claudiahdz <cghr1990@gmail.com>
Date:   Tue Jul 7 17:46:44 2020 -0500

    test(prune): add test cases to pruner
    
    PR-URL: https://github.com/npm/arborist/pull/104
    Credit: @claudiahdz
    Close: #104
    Reviewed-by: @isaacs

commit d716c8c46d32cc18061a2fef5eeb1a9ab4f1aafb
Author: isaacs <i@izs.me>
Date:   Tue Jul 7 17:59:24 2020 -0700

    update dependencies

commit d21a3802f78584b72231d9d745c90d47db15c39a
Author: isaacs <i@izs.me>
Date:   Fri Jun 5 16:08:44 2020 -0700

    0.0.0-pre.21

commit d0d81c9b7df9d91cd2ed2b9279ee224e17815e4c
Author: isaacs <i@izs.me>
Date:   Thu Jun 4 13:34:32 2020 -0700

    Prevent duplicate/conflicting entries in yarn.lock file
    
    This fixes a few flaky tests, and strips any duplication or conflicts
    out of the yarn.lock file that we generate from Arborist trees.
    
    PR-URL: https://github.com/npm/arborist/pull/102
    Credit: @isaacs
    Close: #102
    Reviewed-by: @ruyadorno

commit dbee531a4336bca7170dc99beb2e1346e8b3237b
Author: isaacs <i@izs.me>
Date:   Wed Jun 3 18:39:18 2020 -0700

    audit: use new bulk advisory endpoint
    
    This isn't available on the public registry yet, but tested against
    live data on the internal npm staging registry.  When it goes live,
    it'll make audits significantly lighter.
    
    When we _do_ fetch data from the quick audit endpoint, because the
    bulk advisory endpoint is not available, strip out all the info that
    we don't use for anything.
    
    Fix #101

commit 185f657bf4d15321b6ed324541a8bb061eec970b
Author: isaacs <i@izs.me>
Date:   Wed Jun 3 16:07:52 2020 -0700

    Do not incorrectly report bundleDependencies as fixable
    
    Rather than attempt to fix bundle dependencies in-place, report the
    dependent module as vulnerable if its dependency range _intersects_ with
    the vulnerable range, since it _may_ contain that version in its bundle.
    
    From there, we can simply report the vulnerability as we normally do,
    with the assurance that fixing it will certainly avoid the vulnerable
    dependency.
    
    Note that we don't actually have to report them as unfixable (as long as
    some non-bundled and/or non-intersecting dependency range is found), or
    track the bundled-ness through to the data passed to
    npm-advisory-report.
    
    This also fixes an error where bundleDependencies in `loadActual` were
    too liberally set.  Only the top-most bundled parent should be
    considered a bundleDependency of its parent, not every child node.  This
    showed up in being overly broad in determining which dependency versions
    are affected by a bundled meta-dep.
    
    Fix #69

commit 0537810b9c2a72113299417c19b8832ed757d094
Author: isaacs <i@izs.me>
Date:   Wed Jun 3 08:57:13 2020 -0700

    fix test: was utimes-ing the wrong hidden lockfile

commit 6c96f372bd97b7f9858600e9763eda24194e843f
Author: isaacs <i@izs.me>
Date:   Tue Jun 2 22:11:27 2020 -0700

    fix timing consistency on hidden lockfile test

commit c1adb545c0c2e209acba3a5aaae789e22bd938a5
Author: isaacs <i@izs.me>
Date:   Tue Jun 2 15:10:28 2020 -0700

    0.0.0-pre.20

commit a8984cd544dc01d82ccb11740388744de8416d46
Author: isaacs <i@izs.me>
Date:   Mon Jun 1 16:09:40 2020 -0700

    Add formatPackageLock boolean config
    
    Fix #99
    
    PR-URL: https://github.com/npm/arborist/pull/100
    Credit: @isaacs
    Close: #100
    Reviewed-by: @ruyadorno

commit 48e075fc9b0ed0150a6874191454201ece6ee74d
Author: isaacs <i@izs.me>
Date:   Fri May 29 23:47:28 2020 -0700

    Resolve infinite dependency nesting with a symlink
    
    Fix #96
    
    In a case like http://npm.im/@isaacs/pathological-dep-nesting-a we have
    a dependency cycle that would nest infinitely:
    
    ```
    a@1 -> b@1
    a@2 -> b@2
    b@1 -> a@2
    b@2 -> a@1
    ```
    
    When trying to reify this, we have to nest another a@2 under b@1,
    because it would otherwise resolve to a@1.  Then that a@2 needs a b@2,
    which has to nest or otherwise resolve to b@1, and the cycle goes on.
    
    The actual (deduped) reified tree looks like:
    
    ```
    root
    +-- a@1
    +-- b@1 (deduped from a@1's dep)
        +-- a@2 (overriding a@1 one level up)
        +-- b@2 (deduped from a@2's dep)
            +-- a@1 (overriding a@2 from one level up)
            +-- b@1 (deduped from a@1's dep)
                +-- a@2 (loop forever...)
    ```
    
    With this commit, the loop is cut by detecting in buildIdealTree that a
    node being added to resolve a problemEdge is satisfying an edge that
    already has an identical node in its ancestor set.
    
    Ie, in this example, when we get to the second a@1, we need to place b@1
    to satisfy its dependency, or else it will resolve to b@2 (its parent).
    Since the edge is a problem, we know that the nearest resolution is
    _not_ a match (or else we wouldn't be bothering to add it).  Thus, any
    node in the ancestry that matches the node we're attempting to add to
    the tree is certainly going to cause an infinite regress, because its
    presence has caused it to need to load another identical copy of itself.
    
    While we could throw in this situation (and it'd certainly be better
    than spinning forever trying to build an infinitely large tree), we can
    do better, by instead creating a symbolic link to the matching node
    further up the tree.  This is almost as efficient as throwing, and
    produces a correct dependency resolution.
    
    Thus, instead of growing infinitely, the resulting tree looks like:
    
    ```
    root
    +-- a@1
    +-- b@1
        +-- a@2
        +-- b@2
            +-- a@1
            +-- b@1 (symlink to root/node_modules/b)
    ```
    
    When using legacyBundling, the tree would look like:
    
    ```
    root
    +-- a@1
        +-- b@1
            +-- a@2
                +-- b@2
                    +-- a@1 (symlink to root/node_modules/a)
    ```
    
    Which, surprisingly, is 1 less package on disk, and perhaps the only
    scenario where legacyBundling produces a _more_ deduplicated tree than
    the default.
    
    We could someday explore a way to detect all matching nodes in the tree
    and replace them with symlinks, as a sort of "deduplicate more", but
    since that's considerably more work and may have some unforeseen
    consequences, it's left as an area for future exploration.
    
    PR-URL: https://github.com/npm/arborist/pull/97
    Credit: @isaacs
    Close: #97
    Reviewed-by: @ruyadorno

commit 393079998ee508befd2312ce1a5b6b71d603eb74
Author: isaacs <i@izs.me>
Date:   Fri May 29 23:37:46 2020 -0700

    add node.matches(otherNode) method
    
    This can be used to detect pathological dependency nesting, by
    being able to check whether a matching node already exists in the
    ancestors of a possible placement

commit 573c40411c98453bafc6f9ccb37a85e8260bb606
Author: isaacs <i@izs.me>
Date:   Fri May 29 17:18:28 2020 -0700

    node: reload edgesIn to nodes matching name in reloadNamedEdges
    
    Wow, that's a dense commit heading.  Tried hard to get it under 50
    chars, and still failed.
    
    When we add a node into a parent node, we call reloadNamedEdges on the
    parent, to walk the tree reloading any edges that have the name of the
    child node being added.  This takes care of the case where a node is
    being added, and will end up changing the dependency resolution of nodes
    within that portion of the tree.
    
    We were previously skipping over any nodes by that same name, and their
    children, with the reasoning that they would block the new higher-level
    addition from being reached by their children anyway.
    
    However, this turns out to not be sufficient, because those nodes may
    still have edgesIn that have to be re-validated, and would not otherwise
    be reached by the walker, if there is one version of a given named node
    nested inside a _different_ node with the same name.
    
    This becomes relevant for detecting infinite regressions in the nesting
    algorithm, because we need those invalid links to show that there's
    still more work to do, or else we never hit the infinite regress, and
    cannot warn the user that their tree is impossible to resolve.

commit d8dcbb3076f061d922f8561299b1039402215e6d
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:58:52 2020 -0700

    ensure hidden lockfile is fresh in shrinkwrap test
    
    PR-URL: https://github.com/npm/arborist/pull/94
    Credit: @isaacs
    Close: #94
    Reviewed-by: @ruyadorno

commit 250d81f1153323de0672b9f3066de68d54d3c0a7
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:54:36 2020 -0700

    remove unused printDedupe function in test

commit 61acbddf1c0a9646c4e26d55fa54b65e7a2539ee
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:54:11 2020 -0700

    remove unnecessary second initialization of actualTreeLoaded set

commit 1c60777686c462f474295b45180a3a75e7321af1
Author: isaacs <i@izs.me>
Date:   Fri May 29 11:53:31 2020 -0700

    Do not treat dummy node as valid cached dep in findMissingEdges

commit 740e84584962fdcd5a2ced276239358c91c692d1
Author: isaacs <i@izs.me>
Date:   Fri May 29 10:44:28 2020 -0700

    test: ensure hidden lockfiles in fixture are newer than contents
    
    There's a race in the fixture generation we use which can _sometimes_
    end up creating a hidden lockfile isn't newer than the contents of the
    node_modules folder, and ends up being ignored out of an abundance of
    safety.
    
    Ensure that doesn't happen in our tests by bumping the mtime after
    fixture creation.
    
    Also: add some missing fixture folders that were present in the
    reify-cases snapshots, but not in the actual directories.

commit b43b065c875b503036403537e7716961a615d48a
Author: isaacs <i@izs.me>
Date:   Thu May 28 01:19:34 2020 -0700

    Add dryRun config to not touch the file system

commit bab746aa3efbf7dd59eb1119be9051266eab73ac
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri May 29 11:58:33 2020 -0400

    feat: prune
    
    - Add `Pruner` mixin that exposes a `prune` method
    - Added tests
    
    PR-URL: https://github.com/npm/arborist/pull/95
    Credit: @ruyadorno
    Close: #95
    Reviewed-by: @isaacs

commit 9077c4bed1db67469af4e327c388c49411a3aa97
Author: isaacs <i@izs.me>
Date:   Thu May 28 00:55:14 2020 -0700

    Add support for packageLock option
    
    Re #46
    
    PR-URL: https://github.com/npm/arborist/pull/93
    Credit: @isaacs
    Close: #93
    Reviewed-by: @ruyadorno

commit a11d5da50c822c0e6d6d903c9f8d43b24bc0ba25
Author: isaacs <i@izs.me>
Date:   Thu May 28 00:36:05 2020 -0700

    add missing package.json in test fixture
    
    This was causing a weird as hell race condition due to the prior commit
    that checks if the hidden lockfile is up to date.
    
    If the test fixture was created with a >10ms gap between the hidden
    lockfile being created and the package contents being created, then the
    hidden lockfile wouldn't be respected, and it'd have to load the
    package.json from disk.
    
    However, since the package.json was missing, this meant that the semver
    node always had a node.package of {}.
    
    That timing issue would only hit if the test fixture generation took
    more than 10ms, AND the delay landed in just the right spot in the test.
    Reproduced by adding a ton of loging, and then running the test in a
    tight loop along with 6 other tests going at the same time, and even
    then, it only usually triggered after 5-10 minutes.
    
    It wasn't a problem before, because a hidden lockfile contains
    everything necessary to load the tree.  So, when there was no safety
    check to ensure that the hidden lock is newer than the packages it
    describes, the lack of a package.json file was never a problem.
    
    PR-URL: https://github.com/npm/arborist/pull/92
    Credit: @isaacs
    Close: #92
    Reviewed-by: @ruyadorno

commit 34cbd1a6c579300f192b6d39d34e48e073d743bb
Author: isaacs <i@izs.me>
Date:   Wed May 27 18:15:46 2020 -0700

    Only use hidden lockfile if up to date
    
    Compare the mtime of the hidden lockfile at
    node_modules/.package-lock.json against all package folders in
    node_modules, and ensure that all packages in node_modules exist in the
    lockfile data.
    
    This of course still can be thwarted by editing a single file within a
    package folder, but not adding or deleting any files or folders, or
    modifying files in nested subfolders in a package in any way whatsoever.
    
    However, it prevents the overwhelming majority case where this would
    bite us, which is someone installing something with yarn or previous
    versions of npm.
    
    In those cases, we ignore the hidden lockfile, meaning that any
    loadActual call will read the files on disk as normal.
    
    Fix #91

commit b6ad06b126d153402b1970019db8125cf03f72d0
Author: isaacs <i@izs.me>
Date:   Wed May 27 16:26:29 2020 -0700

    Base idealTree on actualTree if no lock present
    
    Fix #79
    
    If there is no package-lock.json or npm-shrinkwrap.json file present,
    then base the idealTree on the actualTree if available.
    
    This minimizes surprising meta-dep updates (and in some cases, extremely
    slow install times!) when not using a package-lock.json file.
    
    A caveat here is that it _may_ result in a lockfile being saved for the
    first time with `resolved: null` for some deps, if they were present in
    the `node_modules` folder to start with.
    
    PR-URL: https://github.com/npm/arborist/pull/90
    Credit: @isaacs
    Close: #90
    Reviewed-by: @ruyadorno

commit 153b538b6e980c7fa2dd578b29aafdcb82b643a4
Author: isaacs <i@izs.me>
Date:   Wed May 27 14:48:30 2020 -0700

    more extensive tests for deduper
    
    Added while debugging why making buildIdealTree respect the existing
    actualTree was not working as expected.

commit a115eeef789da5a67076c24c05895e4f1fd263ee
Author: isaacs <i@izs.me>
Date:   Tue May 26 22:20:41 2020 -0700

    make Arborist.loadActual() parallel-safe
    
    Do not load the actual tree multiple times if loadActual() is called
    multiple times on the same Arborist object.

commit c5c983c9b40a7f36f3a39e241614e8920e467685
Author: isaacs <i@izs.me>
Date:   Tue May 26 10:52:17 2020 -0700

    Refactor shrinkwrap for correctness and elegance
    
    Since the Shrinkwrap class was developed prior to figuring out exactly
    how it would be used in the various Arborist methods, some things ended
    up growing in a somewhat inelegant direction.
    
    - Nodes were fetching their resolved and integrity values in multiple
      places.
    - The Shrinkwrap internal data tried to keep up both the new and old
      data up to date as the tree changed, but this was not always possible.
    - Dependencies of link targets were not properly reflected in the legacy
      shrinkwrap metadata.
    - The Node class and buildIdealTree methods both had to dive deep into
      the internals of the YarnLock class, which should be an implementation
      detail of the Shrinkwrap class.
    
    Now, the Shrinkwrap object keeps a reference to the root tree node found at
    its own path.  Rather than try to keep the legacy metadata in sync at
    all times, we _only_ build up the legacy shrinkwrap data when calling
    `this.commit()`, by walking the `node.children` and
    `node.target.children` maps appropriately.
    
    Also, `this.yarnLock` is updated on commit(), and a `checkYarnLock()`
    method is added to return the spec that should be fetched, and update
    the provided options object with resolved and integrity metadata.
    
    All of the logic for setting node metadata from the Shrinkwrap is now
    done in `Shrinkwrap.add(node)`, making it much simpler and harder to get
    wrong.
    
    This means that:
    
    - `yarn.lock` files are respected more fully (including their resolved
      and integrity expectations)
    - We don't have cases where both `extraneous` and `dev`/`optional` are
      set in the lockfile (which is always an error -- extraneous nodes
      cannot be either dev or optional!)
    - Link target dependencies are accurately reflected in the legacy
      shrinkwrap data, rather than creating invalid `../` entries.
    
    Fix: #82
    Fix: #84
    
    PR-URL: https://github.com/npm/arborist/pull/88
    Credit: @isaacs
    Close: #88
    Reviewed-by: @ruyadorno

commit c5de416e7170a1e05db80a5b456e32dc11bcd5bb
Author: isaacs <i@izs.me>
Date:   Mon May 25 10:35:07 2020 -0700

    Rework approach for finding link target deps
    
    This change updates a few things, resulting in a much more resilient and
    reasonable approach to finding the dependencies of link targets, which
    is relevant for workspaces and for interpreting pnpm trees, and reduces
    the "load my whole dev folder" antipattern.
    
    Prior to this change, in loadActual, if a link target was found in a
    node_modules folder, then the parent of that node_modules folder would
    be loaded, along with its children.  While this is seems like a
    reasonable way to handle pnpm trees, it has the following problems:
    
    1. If you are developing a bunch of projects right in a `node_modules`
    folder, then it would sometimes result in loading ALL of your JS
    projects in the actualTree!  This is rarely what you want, and had some
    surprising behavior when I encountered it myself.  (I develop quite a lot
    of projects in a node_modules folder for convenience.)
    
    2. If you have a situation where a package is _not_ in a node_modules
    folder, but it does have some missing dependencies which are in fact
    resolved by deps already in the tree, it would show up as missing.
    
    With this change, the loadActual process will walk up the parent
    directories of any top nodes, searching for any missing edges.  If a
    folder is found at `${dir}/node_modules/${name}`, then a "dummy" node is
    created for the parent, such that the parent/fsParent resolution
    algorithm will find a hit and resolve to the named dep.
    
    It will not load any _other_ dependencies in the dummy node, however,
    and will not walk up higher than the nearest common ancestor of the
    project root and the link target.
    
    Furthermore, this uncovered a bug where setting the parent of a node to
    a new parent with the same `root` was causing it to unlist itself and
    all children from the root.meta and root.inventory, but only _relist_
    itself, and not its children.  This bug was previously not hit in test
    because the node demonstrating it was within a node_modules folder, and
    so was fully loaded along with all of its siblings.
    
    Lastly, because dummy nodes are never "extraneous" (they're just there
    as placeholders, they're not "real" anyway), had to update a few
    shrinkwrap files in fixtures to not get weird results.  An upcoming
    refactor of the Shrinkwrap class will make this incorrect metadata less
    of a hazard moving forward.
    
    PR-URL: https://github.com/npm/arborist/pull/86
    Credit: @isaacs
    Close: #86
    Reviewed-by: @ruyadorno

commit cdfe16420119cde9f3edb4ce72bd79ae1b324c0c
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed May 27 13:57:26 2020 -0400

    chore: deduper refactor
    
    PR-URL: https://github.com/npm/arborist/pull/89
    Credit: @ruyadorno
    Close: #89
    Reviewed-by: @isaacs

commit 9d01b6deea9c08ced54d15c65e376a40936cddb0
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue May 26 11:40:55 2020 -0400

    chore: dedupe cleanup
    
    - added fixtures for dedupe reify-cases
    - tweaks and cleanup in lib trimmer/build-ideal-tree
    
    Fix: #66
    PR-URL: https://github.com/npm/arborist/pull/87
    Credit: @ruyadorno, @claudiahdz
    Close: #87
    Reviewed-by: @isaacs, @ruyadorno

commit cfede2e78b14512aae9f18bfed64e30f1b541bd7
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Mon May 25 14:51:45 2020 -0400

    test: dedupe test cases

commit bb4f1a82436a997b69be8d5879cf2334e81b5896
Author: claudiahdz <cghr1990@gmail.com>
Date:   Wed May 6 14:45:19 2020 -0500

    feat: arborist dedupe()

commit 2d94b28402a2f8868e934b812257ea99eaad643b
Author: isaacs <i@izs.me>
Date:   Wed May 20 22:47:58 2020 -0700

    add Arborist.rebuild()
    
    This refactors reify() to move bin linking and script running
    into the rebuild() method, and exposes it for use in 'npm rebuild'
    
    PR-URL: https://github.com/npm/arborist/pull/83
    Credit: @isaacs
    Close: #83
    Reviewed-by: @ruyadorno

commit 9efb437e542adfa78a9e58dff79746d9e20ba615
Author: isaacs <i@izs.me>
Date:   Mon May 18 21:53:12 2020 -0700

    fix: Handle tarball dependencies properly
    
    For 'file:' deps (whether directory or tarball type), Node.resolved is
    always absolute.  It was initially set up to be relative to the node
    path, because it had to be stashed back to package.json.  But, then we
    got rid of that approach in favor of a more comprehensive lockfile, and
    so the added complexity of constantly re-evaluating the resolved value
    as the node moves around serves no purpose.
    
    This relative linking also _wasn't_ being handled properly in tarball
    dependencies, resulting in attempting to fetch a tarball from the wrong
    location, relative to the dependent's directory in node_modules, rather
    than where it should be found.  Since we never store Node.resolved
    anywhere, there's no need for it to be portable, and the portability had
    a bug anyway.
    
    *Shrinkwrap* files *do* have to be portable, so the paths get
    relativized (and resolved) going into and out of lockfiles.  But that's
    much simpler.
    
    Tarball dependencies are more consistently handled, and now that the
    Node.resolved value is absolute and predictable, it's easier to get that
    right.
    
    Tarball dependencies are properly regarded as a valid dependency
    resolution, provided that they come from the same target file.  It's
    still a bit of a crapshoot when we get legacy install trees, but at
    least now we're not throwing out package._resolved when we load the
    manifest from pacote directly.
    
    The added test case installs a tarball dependency which depends on two
    other tarballs: 1 in its own containing folder, and another outside of
    its folder.  (This exact situation was a thorn in npm's side for most of
    6.x, and might still be in some cases.)
    
    PR-URL: https://github.com/npm/arborist/pull/81
    Credit: @isaacs
    Close: #81
    Reviewed-by: @ruyadorno

commit 7e92f6cea0e9ea8cd90aa71dffe2a17d86486a17
Author: isaacs <i@izs.me>
Date:   Mon May 18 12:31:32 2020 -0700

    Refactor the Arborist class mixin stack
    
    There's no reason why these mixins have to stack on one another in the
    definition or extend one another.  We only ever use the Arborist class
    as a fully-assembled thing, so it's fine to just throw them all in a
    list and call it a day.

commit d4ab8b3c273f29e555bfc2a0ac5fb59d8aaa2ef5
Author: isaacs <i@izs.me>
Date:   Mon May 18 11:54:33 2020 -0700

    Support rebuildBundle: false
    
    Re: https://github.com/npm/arborist/issues/46
    
    PR-URL: https://github.com/npm/arborist/pull/80
    Credit: @isaacs
    Close: #80
    Reviewed-by: @ruyadorno

commit 6ea73de40aaa362cc32cc6911e58e459ea27c8bf
Author: isaacs <i@izs.me>
Date:   Mon May 18 11:20:02 2020 -0700

    test: add proper caching where it was missing

commit ce51fc962efdcae90c8deda5f1248e041abefd32
Author: isaacs <i@izs.me>
Date:   Thu May 14 22:57:26 2020 -0700

    Add support for the packageLockOnly config
    
    This tells reify() to just generate the ideal tree and write
    package-lock.json and package.json, but do nothing else.
    
    Re #46
    
    PR-URL: https://github.com/npm/arborist/pull/78
    Credit: @isaacs
    Close: #78
    Reviewed-by: @ruyadorno

commit ffe57201350c79eedd57fbec4f4a09670f72ddf1
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:16:30 2020 -0700

    remove unused load-bundle-deps module
    
    PR-URL: https://github.com/npm/arborist/pull/77
    Credit: @isaacs
    Close: #77
    Reviewed-by: @ruyadorno

commit 5fac0af5a7d1f821c07c610e5a81aa4d67afc9b2
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:16:06 2020 -0700

    buildIdeal: replace load-bundle-deps module with loadActual({root})

commit 32747a258f46fbf1835fa16b381b5f2b31c4f263
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:13:43 2020 -0700

    reify: replace load-bundle-deps module with loadActual({root})
    
    This makes it so that we get proper dep flags in bundled deps! Win!

commit 5ee0d16502d0e9bd35985d0d2b075f6158d1ca28
Author: isaacs <i@izs.me>
Date:   Thu May 14 19:08:43 2020 -0700

    loadActual: add transplantFilter method to filter what gets transplanted

commit 9b979840479216c874a3967659f692823eb38b49
Author: isaacs <i@izs.me>
Date:   Thu May 14 18:27:44 2020 -0700

    calcDepFlags: add 'resetRoot' flag to tell it to not do that
    
    When we call loadActual to load bundle deps, we do NOT want to reset all
    the dev/optional/etc flags.

commit 89fb80fa9427b6ac112e09e41dafc106c8dc4408
Author: isaacs <i@izs.me>
Date:   Thu May 14 17:19:04 2020 -0700

    loadActual: cleanup code using async/await

commit 92176417f6f22b1998833e306c5104310a293bcc
Author: isaacs <i@izs.me>
Date:   Thu May 14 17:11:29 2020 -0700

    Add loadActual({ root: Node }) to compose trees
    
    Implementation for #72

commit 4f8c6c9541bb4266365a67f4f213e853a88d23de
Author: isaacs <i@izs.me>
Date:   Thu May 14 16:54:05 2020 -0700

    Fully update metadata/location when moving roots
    
    There were some cases, especially when moving fsChildren from one root
    to another, where the node.location would not be updated in the correct
    sequence, resulting in the metadata being incorrect or missing, and
    node.location being out of sync with node.path and node.root.path.
    
    Discovered while adding functionality for #72

commit 983e7517bc427ccac9d55c912fe12444936ed830
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu May 14 18:09:58 2020 -0400

    fix: avoid throwing type errors on inventory.add
    
    Trying to load mock malformed testing data from the cli resulted in an
    unexpected TypeError. The issue can be reproduced by having a falsy
    funding property in a package.json, as seen here:
    https://github.com/npm/cli/blob/abdf52879fcf0e0f534ad977931f6935f5d1dce3/test/tap/fund.js#L81
    
    This commit fixes the problem by avoiding trying to retrieve the `type`
    and `url` properties when having a `null` object reference.
    
    PR-URL: https://github.com/npm/arborist/pull/76
    Credit: @ruyadorno
    Close: #76
    Reviewed-by: @isaacs

commit b28a43f002b44292860111004fef6c6bc3a68f0e
Author: isaacs <i@izs.me>
Date:   Fri May 8 18:32:58 2020 -0700

    Add {complete:true} buildIdealTree option to load sw/bundles
    
    Needed for implementing 'npm install --package-lock-only'
    
    PR-URL: https://github.com/npm/arborist/pull/73
    Credit: @isaacs
    Close: #73
    Reviewed-by: @ruyadorno

commit c6d9e46fc2e0e18b49e8a637c2863adf38b3da18
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:16:05 2020 -0700

    Omit name from shrinkwrap when not needed
    
    Now that we load the name when creating Node objects in loadVirtual,
    there's no need to include it in the shrinkwrap metadata entry.
    
    PR-URL: https://github.com/npm/arborist/pull/74
    Credit: @isaacs
    Close: #74
    Reviewed-by: @ruyadorno

commit 3f94af2b789c3ac91a70a0bdceb32f100eb8512f
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:13:41 2020 -0700

    Include name in loadVirtual node.package
    
    Fix #70
    
    Reify change is to maintain coverage, since we never have a package
    version without a name, so there's no need for the fallback to
    node.name.

commit 9078b7dd7e526c5ae81e2952b156d03457ebd793
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:22:04 2020 -0700

    test reify for #70
    
    Demonstrates the issue by showing `"wrappy": "npm:undefined@^1.0.2"` is
    saved to the package.json incorrectly.

commit bcd7e35eaef95490178ce57e181004dd29554796
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:02:07 2020 -0700

    include pkg name/version in loadVirtual test snapshots
    
    Demonstrates root cause problem of #70.  The Shrinkwrap class only adds the
    'name' field for new lockfiles, but loadVirtual expects it to be there
    
    Really, it probably shouldn't be there for v2 lockfiles either, since it's
    almost always extraneous, except for alias dep types, but regardless,
    loadVirtual should work out the package name from the folder if it's not
    present.

commit 43254142a21b76d00a3bf5c2293895f1138ded92
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:16:41 2020 -0700

    test fixture with a v1 shrinkwrap

commit 6f30725b60d157d4ca42457897dc94389a50ba3c
Author: isaacs <i@izs.me>
Date:   Fri May 8 22:52:01 2020 -0700

    ideal: minor refactoring for clarity in add method

commit ed5f476e2fd497eb313f6deede6a64c6117a8bcd
Author: Matt <mtoothman@users.noreply.github.com>
Date:   Tue May 12 10:23:41 2020 -0400

    Trivial spelling correction in README
    
    PR-URL: https://github.com/npm/arborist/pull/75
    Credit: @mtoothman
    Close: #75
    Reviewed-by: @ruyadorno

commit 1570bea52039b71d152758fac9356b5e793a4650
Author: isaacs <i@izs.me>
Date:   Tue May 12 18:35:04 2020 -0700

    update pacote to pull in fixed minipass/nrf/mfh

commit 36f3da4cc198dd3dc9d0a3a306a95f3c18011c30
Author: isaacs <i@izs.me>
Date:   Fri May 8 23:42:40 2020 -0700

    edge: add convenience getters for edge types/errors

commit f5394a79a99819c189b9e07f5c2fff07d27b9ddc
Author: isaacs <i@izs.me>
Date:   Fri May 8 18:28:21 2020 -0700

    prefer package-lock.json over yarn.lock

commit 8c6ef38fc159dacfeb74a6a6f6b05a35690310d4
Author: isaacs <i@izs.me>
Date:   Mon May 4 23:36:47 2020 -0700

    0.0.0-pre.19

commit 26463fd5318e815552e3920a6efe8d72ef92a441
Author: isaacs <i@izs.me>
Date:   Mon May 4 23:35:22 2020 -0700

    Respect yarn.lock file when generating tree
    
    We were already using it as a source of information.  However, if a
    package-lock.json file is not present, then we should *also* use it as a
    lock file, at least insofar as it can pretend to be one.

commit 0b09179a7d168b3cb1f645ee60baf2f60a12f82c
Author: isaacs <i@izs.me>
Date:   Mon May 4 22:18:30 2020 -0700

    tracker: be more lenient
    
    There are cases when doing an 'audit fix' with a lot of outdated deps,
    where a node might be scheduled for processing, but then be removed
    prior to getting to it in the queue, without putting another node in
    that node.location.  As a result, in normal operations, the
    node.location is not as permanent or deterministic as we might hope,
    resulting in a lot of spurious throws for unfinished trackers and
    nonexistent subtrackers.
    
    We really need to re-evaluate how this is being done.  It's not the best
    user experience, since the ideal tree building process is not
    predictable or linear enough to lend itself to a progressbar display.
    In the meantime, at least we can stop it from throwing.

commit 4c438e07a41f3947d5aa8c73ef8038343a62bffa
Author: isaacs <i@izs.me>
Date:   Mon May 4 21:24:02 2020 -0700

    Do not use --before option when looking for audit fixes
    
    Otherwise, we end up getting ETARGET errors, because the version
    depended on likely does not exist with the time specified.
    
    Also, whatever errors we DO get from pickManifest when looking for
    vulnerability fixes, we should just treat as a reason to avoid that
    version, since it may well not be installable anyway.

commit f0c9f9f04e4e1559df1c37418e191d80cb5b1593
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:35:32 2020 -0700

    0.0.0-pre.18

commit 09614f6789c38a8f2dbb9ba6ef27d98b248f8674
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:33:48 2020 -0700

    update pacote/npm-registry-fetch deps

commit a3886306ffb80828e595b3b54906823eb5d72c04
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:29:19 2020 -0700

    remove spurious return statement

commit 2f412ca7724f2d2ca6b131c331d4688227701ef1
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:29:06 2020 -0700

    do not attempt to audit-fix bundleDependencies

commit b8f4b9c906338285886d9fd31d06ea28f6127ff2
Author: isaacs <i@izs.me>
Date:   Mon May 4 15:27:31 2020 -0700

    update yarn.lock when reifying

commit 1b7d9b9f56e2ac2e9aabaa4d6e9ee4bf301dc49c
Author: isaacs <i@izs.me>
Date:   Mon May 4 11:32:46 2020 -0700

    Correct root tracker name in buildIdealTree

commit 3821b5e1274b3d9084f0dc809fe8fa1635e17681
Author: isaacs <i@izs.me>
Date:   Mon May 4 00:22:19 2020 -0700

    node: give the getBundler() method param a default value

commit 596f4b9f03b9c46375f406c935b0aa1a9c7b0d1e
Author: isaacs <i@izs.me>
Date:   Fri May 1 16:14:44 2020 -0700

    0.0.0-pre.17

commit c8d208fa1677620c84ba5467204873b0d7c83983
Author: isaacs <i@izs.me>
Date:   Fri May 1 16:13:41 2020 -0700

    update deps

commit 09cc51558a93c15bc885e3084d6941dca05ca41b
Author: isaacs <i@izs.me>
Date:   Fri May 1 16:12:18 2020 -0700

    0.0.0-pre.16

commit 6965aeaaddda7941c1f88a4f838f3295c8f407b4
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri May 1 11:00:03 2020 -0400

    chore: cleaning up
    
    Leftover from the initial implementation of workspaces.

commit d9d99cd33a12a669e06dc2abacdca2814fbb0662
Author: isaacs <i@izs.me>
Date:   Fri May 1 00:19:38 2020 -0700

    Fix case where dep vuln also has an advisory
    
    This preserves the information that was previously being thrown aside,
    where a node that is vulnerable by virtue of having a dependency on a
    vulnerable module *also* has an advisory posted against it.
    
    Prior to this commit, the dep vuln would be lost.
    
    Also, more importantly, the calculation for upgrading severity was
    completely backwards, which could result in vulnerabilities being
    reported at a lower level then they should have been in these cases.

commit f024962f7076a9c592631b62ec9eadb264f974a0
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Feb 21 22:58:21 2020 -0500

    feat: npm workspaces
    
    Introduces support to workspaces; adding ability to build an ideal tree
    that links defined workspaces, storing and reading lockfiles that
    contains workspaces info and also reifying installation trees properly
    symlinking nested workspaces into place.
    
    Handling of the config definitions is done via @npmcli/map-workspaces
    module added.
    
    refs:
    
    - https://github.com/npm/rfcs/blob/ea2d3024e6e149cd8c6366ed18373c9a566b1124/accepted/0026-workspaces.md
    - https://www.npmjs.com/package/@npmcli/map-workspaces
    - https://github.com/npm/rfcs/pull/103
    
    PR-URL: https://github.com/npm/arborist/pull/50
    Credit: @ruyadorno
    Close: #50
    Reviewed-by: @isaacs

commit d367a702ac1dd0396945362f785d6620dbbb78ac
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Wed Apr 29 13:38:34 2020 -0400

    test: build-ideal-tree registry refs
    
    Some build-ideal-tree tests were pointing to actual registry due to
    missing setting the registry option pointing to the local fixtures.
    
    PR-URL: https://github.com/npm/arborist/pull/65
    Credit: @ruyadorno
    Close: #65
    Reviewed-by: @isaacs

commit 1537f4bea4723601de82282decd94ccc59064a43
Author: isaacs <i@izs.me>
Date:   Wed Apr 29 11:14:44 2020 -0700

    more auditing tests

commit 123314396fa08a7367f72190f5528b25ab3bec0c
Author: isaacs <i@izs.me>
Date:   Tue Apr 28 17:31:29 2020 -0700

    audit: include count of vulnerabilities
    
    Otherwise I have to tally it up in a bunch of places in npm-audit-report v2

commit 2b0acbeb038d0e7c74273c125a773664bed299e1
Author: isaacs <i@izs.me>
Date:   Tue Apr 28 17:29:37 2020 -0700

    audit: include auditReportVersion:2 in serialized object

commit 8d7d3f88439d0f01e86e189e75fbadadb7b2bf15
Author: isaacs <i@izs.me>
Date:   Mon Apr 27 17:36:53 2020 -0700

    0.0.0-pre.15

commit e81deb0e4c3e3b5bfcb8db818afb5f07c1772e8c
Author: isaacs <i@izs.me>
Date:   Mon Apr 27 17:35:59 2020 -0700

    update pacote dep

commit 29ded541c4b5d0a9daea5d5926e90a6d09d06e77
Author: isaacs <i@izs.me>
Date:   Fri Apr 24 16:50:41 2020 -0700

    Produce JSON-friendly format for AdvisoryReport
    
    This adds a toJSON method on the AdvisoryReport class, so that it can be
    passed to npm-audit-report, without that module having to know about
    Arborist's internals.
    
    This also moves the 'fixAvailable' calculation into the AdvisoryReport
    class rather than buildIdealTree, since it's relevant to the report that
    we output for the user, and thus needs to be in the pojo result.
    
    Also, remove some tap snapshot files for tests that were removed (in
    some cases, quite a while ago!)
    
    PR-URL: https://github.com/npm/arborist/pull/59
    Credit: @isaacs
    Close: #59
    Fix: #54
    Reviewed-by: @ruyadorno

commit aef496fa363cc92286dd5933d253b1e802f20ec4
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:34:28 2020 -0700

    no need to run tests twice on macOS node 14.x

commit d283c12140ab7f339a0120198d1c42e7ba5dcfec
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:29:45 2020 -0700

    remove test timeout in CI

commit 22e368c59f108729d97ca18c0d5c696a1487eb64
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:28:31 2020 -0700

    force pretty tap output in CI output

commit 14a8567a122229100d6c3c6b90c2501d9356fd87
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 11:23:07 2020 -0700

    s/travis/github actions/

commit d68051c2162fc88e5beebb1afb8792e92f0d7342
Author: isaacs <i@izs.me>
Date:   Thu Apr 23 10:55:09 2020 -0700

    test: increase artificial load timout
    
    The loadActual test fails its coverage limit pretty frequently on CI
    because 10ms is still not enough for the actual node to take longer than
    the link node.

commit c591e1278d2b75ad33a6dcf30726eeec9663b2b7
Author: isaacs <i@izs.me>
Date:   Wed Apr 22 19:03:20 2020 -0700

    Tests for buildIdealTree's audit behavior
    
    This also adds the functionality of having loadVirtual attempt to read
    the package.json file for link targets found in legacy shrinkwraps,
    because otherwise their dependencies were never being loaded.  This
    means that the recheckEngineAndPlatform in Arborist.reify() is no longer
    necessary for link targets, but we still have to do that for
    non-link-target nodes, since it also does not set bin/engines/os/cpu
    fields.

commit 139f4931a1d1fa75a3d3d72d6cf12facd7d249c5
Author: isaacs <i@izs.me>
Date:   Tue Apr 21 23:23:57 2020 -0700

    Arborist.audit() with fix support
    
    Still lacking proper unit tests for buildIdealTree.  That is only
    exercised at the moment by Arborist.audit({fix: true}), through the
    reify call.
    
    It would be good to stash the ranges to be avoided somewhere, either in
    the lockfile or in a separate file, so that we can support the case
    where someone runs `npm audit` followed immediately by `npm install`,
    without giving them things that we ought to know are no good.

commit 5ce2454b629c8f22001f28eef354e1bb406b707b
Author: isaacs <i@izs.me>
Date:   Tue Apr 21 22:36:13 2020 -0700

    loadVirtual: do not throw if shrinkwrap is empty

commit 4c973cfebcc31794f5ab6863197f22bbedb524f2
Author: isaacs <i@izs.me>
Date:   Tue Apr 21 22:32:21 2020 -0700

    Add AuditReport class, tests, fixtures

commit e409cf3500fdfeb091530f4d5bf5ea471744b9e6
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 21:50:25 2020 -0700

    Vuln class initial implementation

commit 815a37b07a52f0e5ae6496b62d6e4c676d33a0b3
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 21:19:26 2020 -0700

    only ignore random .js files in root, not everywhere

commit 35b412da6645caa3553b0850f3bd0aa4a231903d
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 21:18:33 2020 -0700

    log audit endpoint errors

commit 6424563b164545288c87dd5c9a19a394fc4cac72
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:45:16 2020 -0700

    add npm-pick-manifest, update deps

commit 4bfe480f27a11e135401117ac822688fcae292d8
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 23:49:03 2020 -0700

    reify: do quick audits
    
    If `audit:false` in the options, or if the submission fails for any
    reason, then `arb.audit` will be set to false.  Otherwise, `arb.audit`
    will be set to the quick audit response object that comes back from the
    server.

commit 0bfc66175229cb9c064ecf1108960ed92086abf6
Author: isaacs <i@izs.me>
Date:   Wed Apr 22 00:46:57 2020 -0700

    get fsChildren/bins properly from legacy lockfiles
    
    Fix #63

commit fa2c2b333613f4fdbe612210b8e49bc40597c3b2
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Tue Apr 21 22:32:28 2020 -0400

    test: asymmetrical bin across versions repro
    
    Added a test that reproduces a problem when installing transitive deps
    that contains multiple versions in which its `bin` package.json
    declaration is not symmetrical across deduped versions.
    
    When a lockfile v1 is available the installation will fail to produce
    `node_modules/.bin` symlinks. A similar install setup but with an absent
    lockfile will yield a functioning bin folder.
    
    PR-URL: https://github.com/npm/arborist/pull/63
    Credit: @ruyadorno
    Close: #63
    Reviewed-by: @isaacs

commit 626d54743c4435bfd77bf17139a76bd34dd8a0bc
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Fri Apr 17 21:14:36 2020 -0400

    test: fix corgi metadata update

commit 9877247dabaa62f1a9569b2f9361b22e1301bc31
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:46:59 2020 -0700

    remove noisy extraneous output from fixtures/index.js

commit ca8c657e2783aef8466fa6de609445af348b447d
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Apr 16 17:27:15 2020 -0400

    feat: add legacyPeerDeps option
    
    Adds an option to allow install trees that ignore peer dependencies.
    Similar to the way we handled them in npm@6.
    
    PR-URL: https://github.com/npm/arborist/pull/62
    Credit: @ruyadorno
    Close: #62
    Reviewed-by: @isaacs

commit 50d9b377b91175347c596fc52cdab0b171839454
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:28:05 2020 -0700

    fixture doc: add note about not creating symlinks manually

commit 4259f96292e87f6a31b05f724148ca074efcfbd0
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:24:02 2020 -0700

    update deps to make npm audit happy

commit b852072bfb00c73ac22b14cd21019d26f42cfb83
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:21:58 2020 -0700

    Add documentation to the test fixtures

commit db683d5a2ac962c7057ee5cc8b021d7f961b99b9
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:21:21 2020 -0700

    save corgis when fetching lock contents to mock registry

commit bca05017426b3be790d65ed0e804ac36fd093f0e
Author: isaacs <i@izs.me>
Date:   Thu Apr 16 17:21:03 2020 -0700

    automatically update .gitignore with test fixture symlinks

commit 01275261cf40a4605907d90d4f5d4068e16c2f30
Author: Ruy Adorno <ruyadorno@hotmail.com>
Date:   Thu Apr 16 18:44:52 2020 -0400

    test: fix tests
    
    - Fixed broken deprecated warning test
    - Added missing refs to local registry in tests
    - Added package contents required by these local tests
    
    PR-URL: https://github.com/npm/arborist/pull/61
    Credit: @ruyadorno
    Close: #61
    Reviewed-by: @isaacs

commit 696c2f2b8eca76a0d75bee96a824a8ef13876342
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 16:34:44 2020 -0700

    track timing via process time/timeEnd events
    
    Emit a 'time' event for various things, and then a timeEnd event when that
    thing is completed.  This is picked up by the CLI in its logger when the
    loglevel is set to 'timing', but can also be consumed by any module using
    arborist in a generic way.
    
    Close #55

commit ac5c9f462fbc3b71ecd252ed7b322f4ba4a0c61e
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 23:51:30 2020 -0700

    Do not push bundled deps into list unnecessarily
    
    If the parent already contains a bundled dep, then don't push it into
    the list again.  Otherwise this leads to a case where the bundled dep
    gets absurdly long if we load from a v2 lockfile where this is tracked
    explicitly.

commit 4595f2c3c42617cc1c00f1369952ee6364ac8ca9
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 23:34:29 2020 -0700

    Correct logic to leave bundled deps untouched
    
    This was a really interesting bug to track down.
    
    Basically the bug comes down to a way that arborist tracks bundled deps.
    The getter `Node.isBundled` calls `Node.getBundler()`, which tries to
    figure out which node is bundling this one, if any.  This uses the
    following algorithm:
    
    - if there's no parent node, it's definitely not bundled
    - if the parent node is bundled, then the bundler is the parent's
      bundler.  (if you bundle `a`, you also bundle `a/node_modules/b`)
    - if the parent package has a `bundleDependencies` list, and the node's
      name is on the list, then it's bundled, and the parent is the bundler
    - if any of the edgesIn referencing this node are bundled, and _their_
      bundler is the node's parent, then that is the bundler of this node as
      well.
    
    The downside of this algorithm is that the 4th step of checking the
    edges can potentially be slow (like, _O(n!)_ slow) but since it can only
    ever end up traversing the edges within a given set of deps at a single
    level of the tree, n is always very small.  even absurd bundled dep
    lists still only have a few dozen to a hundred or so bundled deps, and
    it'd only get pathological if you had one bundled dep with a long chain
    of dependencies hanging off of it, all of which also depended on one
    another (but were not explicitly bundled).
    
    The benefit is that if we remove the thing that is triggering the
    bundling, everything else that it was pulling in automatically stops
    being marked as a bundled dep, without having to re-evaluate _bundling_
    every time we mutate the tree (at the cost of having to evaluate the
    bundling triggered by edges every time we check if one of these
    meta-deps is bundled, but as established, this is not very expensive).
    
    That's all fine and good, _until_...
    
    There's a shortcut in the diff calculation that basically says, if a
    node is unchanged, and it has bundled children, then we want to mark all
    the children as unchanging as well.  A Diff object has `actual` and
    `ideal` node references, but the `ideal` wont' know about the unlisted
    metadeps in the bundle until it actually unpacks.  So, the hacky kludge
    is, let's just move all the bundled `actual` nodes over to be
    re-parented on the ideal node.  This would modify the `actual` tree, of
    course, but since we don't bother to actually unpack anything that's a
    bundled child of an unchanging node, it doesn't matter.
    
    However, I was doing it like this:
    
    ```js
    for (const [name, node] of actual.children.entries()) {
      if (node.inBundle)
        node.parent = ideal
    }
    ```
    
    Which means, if a metadep is bundled, but comes _after_ the primarily
    bundled dep in the `children.entries()` list, then first we'll move over
    the direct dep, _and then_ hit the metadep.  At which point, it says
    "nope, not in the bundle".
    
    Since the ideal tree doesn't contain that metadep (since it didn't
    resolve the bundled deps), and will never resolve that metadep (since it
    doesn't traverse bundled children, as their deps should already be in
    the bundle), the resulting diff will show that there is a node in the
    actual tree that _isn't_ found in the ideal tree, _and delete the
    metadep!_
    
    Solved by making the hack loop work like this:
    
    ```js
    const bundledChildren = []
    for (const [name, node] of actual.children.entries()) {
      if (node.inBundle)
        node.parent = ideal
    }
    for (const node of bundledChildren) {
      node.parent = ideal
    }
    ```
    
    Turns out I already had a test for this, and once I realized wtf was
    going on, lo and behold, the `tap-snapshots/test-diff.js-TAP.test.js`
    file shows that it's dutifully deleting the
    `bundler/node_modules/metabundled` node.  Now that it's fixed, it'll
    show up as a snapshot error if we break it again.

commit d677dac9b4add821fb958404793cbfacc17a6c97
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 11:57:52 2020 -0700

    0.0.0-pre.14

commit cd010a06700f040aed5afc46111475410de6754c
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 11:06:53 2020 -0700

    Clean up log usage in reify

commit e13a70a71586a6c61bcb77535e45e980bbb95fe9
Author: isaacs <i@izs.me>
Date:   Mon Mar 30 10:55:15 2020 -0700

    Warn when reifying deprecated dependencies

commit 7107070c93bff8101ebfe6f35617b857f55e3c43
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 17:13:50 2020 -0700

    Add Shrinkwrap.reset() method for loading fresh
    
    This avoids the inefficient kludge in buildIdealTree where it loads the shrinkwrap
    but then throws it away when doing update:{all: true}

commit 22c05c399de16d776e3dd17d29062928d80ba4e2
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 16:34:23 2020 -0700

    abstract name-from-folder to standalone module

commit 90ae8493340f32020d20e480fbeb1a5db687a564
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 16:22:02 2020 -0700

    defensive code for strangely broken lockfile issue
    
    Honestly still not exactly sure how this happened.  I was switching back
    and forth between installing and removing a variety of things with npm
    v6 and v7, and somehow ended up in a case where it was trying to fetch a
    dep that somehow did not have a resolved value.
    
    My best guess is that it has something to do with the fact that mkdirp
    and minimist are bundled in tap 14, but not in tap 12, and npm v6 isn't
    as aggressive about re-optimizing the tree for nested deps, but arborist
    did pluck off the  when setting back to tap 12.
    
    Anyway, saved as a test case so we can verify that the defensive
    handling of this brokenness works as intended.
    
    Arborist will now do its best to resolve based on the version, if
    available, and if not, then it will just remove the node from the tree
    entirely, so at least we're not leaving busted litter lying around.

commit ff1612d2420c468a6c7fb9a4013116e0dc607a8b
Author: isaacs <i@izs.me>
Date:   Sun Mar 29 16:05:14 2020 -0700

    Update scripts for new add argument shape

commit 21a2a533f5af7b225c0721c1e1739816506cc670
Author: isaacs <i@izs.me>
Date:   Thu Mar 19 20:58:06 2020 -0700

    0.0.0-pre.13

commit 2ddaf8aa3d7dd16d13850f9eb94cbdb8fd17226e
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 19 01:12:13 2020 -0400

    fix: do not crash writing to hidden lockfile
    
    If there are no dependencies, then the node_modules folder may be
    missing, meaning that the hidden lockfile will fail to write.
    
    Also, a hidden lockfile is a best-effort performance boost anyway, so we
    should just ignore failures to write it.
    
    PR-URL: https://github.com/npm/arborist/pull/53
    Credit: @mikemimik
    Close: #53
    Reviewed-by: @isaacs
    
    EDIT(@isaacs): Updated to ignore errors and remove the file, rather than
    creating the node_modules folder on any ENOENT from the write.

commit 926165cdf14e488b4dbee7abf08e3726a97535b3
Author: Michael Perrotte <mike@npmjs.com>
Date:   Tue Mar 17 21:18:29 2020 -0400

    0.0.0-pre.12

commit ef12880eba66eed2a025f15e2620ed1d9c039639
Author: Michael Perrotte <mike@npmjs.com>
Date:   Mon Mar 16 14:55:41 2020 -0400

    fix: address pull-request feedback
    
    - removed addition of explicit 'save' option value default
    - added type equality check to exposed to property

commit b2262b1b204b65f7f6fcca87fbe3ab2a8aeca006
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 12 23:29:27 2020 -0400

    fix: exposed explicitRequests set

commit 2f59324fa2c3b080586429cfcd59cd48ee447de3
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 12 14:58:15 2020 -0400

    fix: added explicit default to options.save property

commit c1631e6f5477ac1d529c0efb9d587a77ad5f9b57
Author: Michael Perrotte <mike@npmjs.com>
Date:   Thu Mar 12 13:42:22 2020 -0400

    feat: expose diff property on arborist instance

commit 332c64eaffaeb35eb42310004471c6843f8807b7
Author: isaacs <i@izs.me>
Date:   Sun Mar 8 14:44:41 2020 -0700

    push to git before publishing to npm

commit 4e103f4ab85a513c1f201ad9fb843382e089166d
Author: isaacs <i@izs.me>
Date:   Tue Mar 3 13:22:09 2020 -0800

    license: update owner, clarify provenance of registry mock fixtures

commit b6984de44cd4a9d3043da63a6e96e55088a39ad3
Author: isaacs <i@izs.me>
Date:   Tue Feb 25 21:17:34 2020 -0800

    0.0.0-pre.11

commit b3a311eae221802e6c55ee485abd9a0eff3fbb47
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 21:00:33 2020 -0800

    pacote@11.1.0
    
    No longer sending 'Referer: undefined' on registry requests.

commit af5315e296b29efe4091aabb3e1deb3b553f7299
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 17:49:16 2020 -0800

    perf: don't reload edges for non-dep node.package updates
    
    Considering that maybe that Node.package setter is more of a footgun
    than it's worth.  It's nice to know that the deps will always be kept
    up to date, but throwing away and reloading edges just because you
    pulled in something tangential feels like it's bad-clever.

commit 640527939d734c0550aa9f648d4254b27dc591f4
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 17:34:30 2020 -0800

    further simplify adding new deps to the root
    
    The previous revision of the buildIdealTree/reify `add` option converted
    the package.json-esque data structure into instead passing a list of
    specs for each location in the package, since the name couldn't be known
    100% of the time up front.
    
    However, that still puts too much of the burden of placing deps onto the
    caller.
    
    When you run `npm install foo`, if `foo` is already a devDependency,
    then the updated save spec gets added there, unless specified otherwise.
    Since we aren't guaranteed to know the _name_ of the dep until we've
    resolved it, how is the caller (ie, the npm CLI) supposed to know where
    to put it in the objecet?
    
    At the expense of a slight amount of flexibility, this changes things
    further so that the `add` option mirrors exactly the positional
    arguments passed to the `npm install` command: it's just a list of
    specs, that's it.
    
    Two more options were added:
    
    - saveType
    - saveBundle
    
    If the saveType is not set, then added deps are added wherever they
    already exist, or to `dependencies` if they're not already present.
    Otherwise, it should be set to one of the edge type values:
    
    - 'prod'
    - 'dev'
    - 'optional'
    - 'peer'
    - 'peerOptional'
    
    If `saveBundle` is true, then newly added deps are added to the
    `bundleDependencies` list as well.

commit 3457ac0cf2627515ca5e9bcaf9fbb96f7ddf3340
Author: isaacs <i@izs.me>
Date:   Sun Feb 23 17:18:46 2020 -0800

    add a utility for updating a dep spec in a manifest

commit 67df4e7d9cc3e0ebd99a02401f40502972187a0f
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 20:53:52 2020 -0800

    Respect binLinks:false option to reify()

commit 64cdfcd867e832d6c87a06e98eb3174bcb9979c8
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:21:47 2020 -0800

    Remove unused legacy-location-to-relpath module

commit 157a4ee176d5e01e8ba1e2bb1d289683ff733fb6
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:20:49 2020 -0800

    0.0.0-pre.10

commit e8a03c07a02d42b54e89b6170a936374e1c15496
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:19:51 2020 -0800

    Add global reification support
    
    Note that it only allows add/rm in the global space -- there's no way to
    reify from a shrinkwrap or update all the deps, etc., because there is
    not typically any 'dependencies' in the global space, so it does a
    filtered loadActual to create the diff.

commit fb7d67a7f043f4c60d3ae8786f509eea8666d8b0
Author: isaacs <i@izs.me>
Date:   Sat Feb 22 15:12:09 2020 -0800

    test fixture for global installs

commit fed587e86c4e7a5e832f5c00a05e6d3aa55c7c46
Author: isaacs <i@izs.me>
Date:   Thu Feb 20 21:20:59 2020 -0800

    update reify and ideal scripts for new add/rm API surface

commit 23dad7290e21eb4ba426d5f0b424d35b77029b6d
Author: isaacs <i@izs.me>
Date:   Wed Feb 19 16:43:15 2020 -0800

    0.0.0-pre.9

commit 485c6827902f04f9eaca9167171bb8c23708ef15
Author: isaacs <i@izs.me>
Date:   Wed Feb 19 16:10:14 2020 -0800

    update bin-links to published v2

commit bc8d799d5ac3faa1fdb323dbda2f731ff6fc5d11
Author: Michael Perrotte <mike@npmjs.com>
Date:   Tue Feb 18 19:11:25 2020 -0500

    0.0.0-pre.8

commit a248e4e89cc026065ba3c7522f9da3903dab742f
Author: Michael Perrotte <mike@npmjs.com>
Date:   Tue Feb 18 19:06:24 2020 -0500

    feat: updated build-ideal-tree; add support for unnamed specs

commit 34d6bb9d64e2b3954f5170e00c711c2dbc7af90a
Author: isaacs <i@izs.me>
Date:   Mon Feb 17 20:30:36 2020 -0800

    doc: use js instead of javascript for syntax hiliting

commit 19c56c51c6130aed44bfd6b8c74dc804046a5d52
Author: isaacs <i@izs.me>
Date:   Mon Feb 17 18:22:22 2020 -0800

    0.0.0-pre.7

commit ffb9f2695a4ade54f67f4683f16c26a9b368995a
Author: isaacs <i@izs.me>
Date:   Mon Feb 17 18:21:24 2020 -0800

    Update pacote, no longer any trace of figgy-pudding

commit 8f2d7a03dd79ac93a38a7bec44f4bb4ea8b4c388
Author: isaacs <i@izs.me>
Date:   Mon Feb 10 15:49:02 2020 -0800

    0.0.0-pre.6

commit bce9602199c40786da240c825949b7f48baae8dd
Author: isaacs <i@izs.me>
Date:   Mon Feb 10 14:23:58 2020 -0800

    Include fsChildren in diff so link targets can be reified
    
    Fixes bug found in workspace exploration discussion with @ruyadorno.

commit 4883b2eff514646360eda3c77208818305004115
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 17:43:21 2020 -0800

    stop including vim swap files in published package

commit 7825375722791dcc921eecbb6f2f345d554d6aa4
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 17:42:44 2020 -0800

    0.0.0-pre.5

commit 8acb411811a708903000c4968f12ea96a17ff121
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 17:41:23 2020 -0800

    Add flags for omitting peer/dev/optional in reify()

commit 9040fdfb97321b2d4181d96cc0d5b3f7671290b5
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 15:56:54 2020 -0800

    Add a 'peer' flag to Node object and shrinkwrap
    
    This will be relevant when we add an option to omit peer deps in
    Arborist.reify().

commit 698edda3348f722b8471e06a081336fd2445f07d
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 14:44:42 2020 -0800

    remove duplicative and extraneous readmes and license text from fixtures

commit dc1c7055e93e5325f1b46f8a8d3795d61a4d4bf5
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 14:44:16 2020 -0800

    lightly refactor this.options.follow to this[_follow]

commit 705578db834a48be171bb974e5a0128aa7133398
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 21:50:33 2020 -0800

    Support acceptDependencies object in package.json
    
    This treats any dep ranges in the acceptDependencies field as an
    acceptable alternative for any dependency range specified elsewhere in
    the package manifest.
    
    Implementation of https://github.com/npm/rfcs/pull/72

commit 54656939171d448978d3a4d6350acecffcff1ebe
Author: isaacs <i@izs.me>
Date:   Fri Feb 7 12:00:18 2020 -0800

    Add follow:true flag for reifying deps in external link targets

commit b305e523145819b468ac4fa6ead49170bf7c721c
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:55:36 2020 -0800

    0.0.0-pre.4

commit 758b5cf2f89d003d670e374661ea49264f46651c
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:54:42 2020 -0800

    test for non-string edge.spec error

commit a814ec52a2b3730e769296f4c55519bed8f5264f
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:52:29 2020 -0800

    update optional dep notes

commit 0cad0f037db4e84b62af7c5b8aa65759addb9220
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:51:24 2020 -0800

    update semver and npm-install-checks deps

commit af45b2544931068d472937e7474930778aab1fbe
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:50:02 2020 -0800

    Support arbitrary config flags to reify.js script

commit 747217c57dc621879ee9dc27e1f54df585eb1573
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:49:46 2020 -0800

    Add --save-hidden option to actual.js script

commit b6b6bd1340a7473cb63b2d74d1b0963e0a626db3
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:47:37 2020 -0800

    perf: pre-fetch and inflight pacote.manifest calls
    
    It's not uncommon for an ideal tree to contain many identical requests
    to load a common dependency, like `react@^16.12.0`.
    
    By caching, pre-fetching, and inflighting these, it cuts the ideal tree
    build time roughly in half for a medium sized react-based web project
    (of 2200 deps or so).

commit 373d71fd189a604984f0a4f81cc98a9b67ecc764
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:46:05 2020 -0800

    Call mkdirp when necessary to move a file during reification

commit f4a4e22918fce86f7a06a2eb78132ccc4e253e37
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 19:45:45 2020 -0800

    Write hidden lockfile after reification

commit 4b5a22de1aab920ab82cc884eaf38d00402fdb4b
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 18:41:32 2020 -0800

    edge: assert that spec is a string

commit ab55e0feb788b39fd9c43f63c9e901f07cecee4a
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 18:41:07 2020 -0800

    loadActual from a hidden lockfile if present

commit 6aad989496f0d47e785f64e156ddfc44b362d1c9
Author: isaacs <i@izs.me>
Date:   Thu Feb 6 17:05:41 2020 -0800

    shrinkwrap: add support for a hidden lockfile
    
    The hidden lockfile is a .package-lock.json file living inside
    the node_modules folder.  It does not include a dependencies field,
    because it's only used by Arborist, not npm v6.

commit eb03ee94c0ef9c230594277d4b575df0876ff6bb
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 18:55:52 2020 -0800

    Filter fsevents out of snapshots so Travis doesn't fail
    
    The reify() method now returns the *actual* actualTree, so even though
    engine-mismatching optional deps remain in the package-lock, they're not
    being passed in the resolved tree.
    
    Filter the offending darwin-only module out of the snapshots so that Travis
    (which is Linux) doesn't fail tests.  In that case, just manually verify that
    fsevents is actually in the package-lock, even though it isn't in the snapshot.

commit 3072abf838a5e1f0d9dd762d55849947d00ea739
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 18:32:04 2020 -0800

    Set resolved property properly on Link nodes
    
    Should be the relative path from the link's containing folder, not from
    the link path itself.  Ie, it should be the actual argument passed to
    fs.symlink() if one were to try to reify the Link node.
    
    This changes a lot of snapshots, but the only one that's really relevant
    is the handling in the YarnLock class, since all the other instances of
    using consistentResolve to re-relativize a path were handling Link nodes
    specially anyway (eg, in reify, shrinkwrap, etc.)

commit ec3884b175178783e5f4e7ab8e5b1bf74150d99c
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 18:12:14 2020 -0800

    Handle link deps properly in ideal/virtual/reify
    
    Fix: #43
    
    This fixes the bug identified by https://github.com/npm/cli/issues/750
    
    Link deps that point to a location underneath the root package are fully
    resolved and reified.  Links external to the root path are left alone,
    because they exist in a different project and presumably have their own
    dep resolution being done separately.

commit fc1382d13c2eac6e1c3c2158fc3ffdfd1101a9a5
Author: isaacs <i@izs.me>
Date:   Tue Feb 4 17:58:25 2020 -0800

    Tests for link metadeps, external links, internal links

commit dcd582ba9b57736b8d712f7a7f1709f47d7b02de
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 16:28:46 2020 -0800

    prune trashed optional deps from reified actual tree before returning, but after saving

commit 7a650ee207578de1376711b480a303434d3a8772
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 15:53:55 2020 -0800

    0.0.0-pre.3

commit 78f95d13cc315431e348d63f5d72709bce206984
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 15:35:33 2020 -0800

    Use the specified ideal/virtual/actual tree if provided
    
    Close #34

commit a9d380bb5b7fe0b0a1773b4a029c8e86da9a9970
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 14:57:00 2020 -0800

    Properly restrict/warn based on engines, os, cpu fields

commit 1eb6f3e6f7f6976d4ac22ab959d5e7e898e47898
Author: isaacs <i@izs.me>
Date:   Mon Feb 3 14:49:10 2020 -0800

    test: add to registry mocks by running in proxy mode
    
    This enables the mock registry server to save new fixtures when running
    in prox mode, where it fetches from the real registry, and saves the
    tarball, json, and minified json, as appropriate.

commit d0d2bccbc63ce6c898b5f5a23a8f3dcbd553cbf6
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 16:00:10 2020 -0800

    update all deps

commit 2d6aafbd32ac9522bda618abff3af344806cade3
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 15:56:32 2020 -0800

    track hasInstallScript in lockfile

commit 1e5ac3047845e27a9f421c8b05e33080053cf4e4
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 15:54:30 2020 -0800

    node: add getter for hasInstallScript

commit 11a4a13854280a3e71783702c7628ac6fb8757c7
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 09:54:25 2020 -0800

    Include engines, os, and cpu in lockfile metadata

commit 0015c68af58e24af3f7d72018cccb597c32124f3
Author: isaacs <i@izs.me>
Date:   Wed Jan 29 17:29:50 2020 -0800

    run scripts and check engines
    
    Handle failures from these if the node doing the running or checking is
    an optional dep.

commit f19b47a4d4ab1a8fb674a2adf1dbe97566cbe309
Author: isaacs <i@izs.me>
Date:   Tue Jan 28 15:51:16 2020 -0800

    fixtures for testing reifying with lifecycle scripts and optional deps

commit 6befe89b6aada54124caec0e1a7aeef43088a204
Author: isaacs <i@izs.me>
Date:   Tue Jan 28 15:50:01 2020 -0800

    dep updates for running scripts and linking bins

commit 7aa071b8845d4a7720ec817c249dd27a8c0dc70d
Author: isaacs <i@izs.me>
Date:   Mon Jan 27 15:22:15 2020 -0800

    Update to bin-links v2 and mkdirp-infer-owner

commit 8912a2d9dd34bf0e9c041583c05c50c4fe11e073
Author: isaacs <i@izs.me>
Date:   Mon Jan 20 23:15:03 2020 -0800

    Retire and clean-up bins along with package paths
    
    Fix #36

commit b7ce867333bb75a1c34341a3bceaa566c0cc3be8
Author: isaacs <i@izs.me>
Date:   Mon Jan 20 22:30:09 2020 -0800

    node: add getter for package bin paths

commit 7f00d72fb2387288834c0f6d855d46ea0c52c433
Author: isaacs <i@izs.me>
Date:   Mon Jan 20 22:02:56 2020 -0800

    reify: handle optional dep failures
    
    Fix #29

commit a73d2d3f4cafec3b8ec681b734b7ab199afbf74e
Author: isaacs <i@izs.me>
Date:   Sun Jan 19 21:55:53 2020 -0800

    diff: bubble up all removed paths to save a walk later
    
    First part of fix for #29

commit 57d3f9242d004e0cbef642bfcdedce5c45071bf6
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 14:11:05 2020 -0800

    handle optional dep failures in buildIdealTree

commit d976c1ab5a1b82d021387b372a1e9aac88bea09c
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 14:09:20 2020 -0800

    fixtures to test various optional dep/metadep failure cases

commit c3d0bf124baf956a826bb4b1fd43ae0baef7c478
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 12:58:45 2020 -0800

    notes on handling optional dep failures

commit d1f510efaaaa2e9c58613203879279765c363efc
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 10:11:05 2020 -0800

    Include optionalDeps in ideal tree

commit 3f805395d28d90b54220c4062fd911e0214a89a7
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 10:10:03 2020 -0800

    refactor buildIdealTree to use gatherDepSet

commit c9bfbf9d01b52136b75d27995060dca3d39fa5d4
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 09:57:34 2020 -0800

    function to gather all deps making up an optional section of the tree

commit 96f481ccf6893737b1935752ff014a8186194b87
Author: isaacs <i@izs.me>
Date:   Fri Jan 17 09:31:40 2020 -0800

    A function to gather a set of dependencies making up a branch of the tree

commit c8d267248b60fb1f9a6e97e7269bb7d052b1f76d
Author: isaacs <i@izs.me>
Date:   Thu Jan 30 15:08:28 2020 -0800

    Update binLinks, clean up reify test and procLog

commit 1259a0b95cb3958dd7dedb11da9974f37027b3a5
Author: claudiahdz <cghr1990@gmail.com>
Date:   Sat Jan 25 01:39:21 2020 -0600

    feat: add tests for tracker class

commit 9dc0758894a2eea84cd5ec0e17acf92718f3b07e
Author: claudiahdz <cghr1990@gmail.com>
Date:   Thu Jan 23 17:30:28 2020 -0600

    feat: add tracker blocks for dependency queue on Arborist.reify

commit cd6f2499826cefc1eeffad5eef3486dab7c45e6b
Author: claudiahdz <cghr1990@gmail.com>
Date:   Wed Jan 15 21:18:33 2020 -0600

    feat: add tracker blocks for dependency queue on Arborist.buildIdealTree

commit ce98077586a9601223565ea281e3d88f308e2385
Author: claudiahdz <cghr1990@gmail.com>
Date:   Wed Jan 15 21:16:37 2020 -0600

    feat: add tracker class

commit 1a5f74495c50a98b903009126b75ec2e62f64c19
Author: claudiahdz <cghr1990@gmail.com>
Date:   Tue Jan 7 16:17:52 2020 -0600

    feat: add logger fallback

commit 6bc6c76b4ff156979509bc26a3c50020f69c8c0f
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:48:13 2020 -0800

    reify script: use cache folder

commit 5f263ef3dcfa131f622e3c31ef7d2c1b76059b82
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:47:28 2020 -0800

    link bins when reifying nodes
    
    Fix: https://github.com/npm/arborist/issues/27

commit 353c7eea108f984fbfed5fc914ead781a9555c64
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:46:36 2020 -0800

    reify: rimraf targets when moving if fail with EEXIST

commit e68a9cc8b578c4426cb59f0f45fe74c87e22b98b
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:44:46 2020 -0800

    add bin-links dep
    
    Note: floating a dependency on a git fork until
    https://github.com/npm/bin-links/pull/14 lands.

commit 84d56e70dd5c3c8f1234d626b518d55c7a29a679
Author: isaacs <i@izs.me>
Date:   Sun Jan 5 22:43:56 2020 -0800

    load actual: ignore . dirs in scoped folders as well

commit 9e4075935c1a958956003fee3942b5e4efa8dadb
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 21:42:01 2020 -0800

    document how auth is provided

commit 802b0bc8ad5e9629b835b3557f111096ffec3d1b
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 15:25:31 2020 -0800

    reload requested additions even if they're valid

commit 0873cd20f123af2f8186505208a96e5219418bdd
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 09:07:36 2020 -0800

    reify: respect savePrefix, save=false options

commit 71f6ded4a658138a861c8ce759713fa353a1b023
Author: isaacs <i@izs.me>
Date:   Sat Jan 4 09:03:37 2020 -0800

    refactor out an unnecessary internal prop in buildIdealTree

commit 71f3ccfefba85d2048484569dba8c1829f6f41d7
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 17:17:40 2020 -0800

    refactor to use addRm module

commit f71571b4994ed7a9621ea21aa8edc3ea1219f943
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 17:11:25 2020 -0800

    module for adding/removing to/from package manifest

commit 7e10a9a68209279746019ba20547bc6a9784c2df
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 10:30:24 2020 -0800

    update ideal tree notes

commit 67a99984e81c8901d71061933b6412c9f62c4f85
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 10:29:09 2020 -0800

    Ensure that moving a child node refreshes all edges
    
    Previously, it was only refreshing *invalid* edges, meaning that any
    previously-valid edges would be referencing nodes outside the tree when
    the parent and root were changed.  This led to some weird duplication in
    the reified actualTree, where nodes were left with edgesIn coming from
    the temporary actualTree of bundleDependencies nodes.

commit 65b839e3ab3661d9a918cd27cf0c70914c34d2f6
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 00:32:42 2020 -0800

    clean up tree snapshot on reify test

commit 491c5b0005abd27c7a02f239b6fa0a9f6b4d0587
Author: isaacs <i@izs.me>
Date:   Thu Jan 2 00:01:04 2020 -0800

    0.0.0-pre.2

commit 37740984c4e3d1d9499f9e03fd05d72c4261f827
Author: isaacs <i@izs.me>
Date:   Wed Jan 1 23:59:54 2020 -0800

    Add link to notes folder from readme
    
    Still need to refactor the documentation and make it better overall though.

commit 16959355f45fd9e69645fc9b6ed54868d7741ac0
Author: isaacs <i@izs.me>
Date:   Wed Jan 1 16:48:16 2020 -0800

    Split Arborist class into 4 mixins
    
    This change is mostly for esthetic code management, but also it makes
    the following substantive changes visible in the API:
    
    - Internal methods and properties moved to hidden Symbol properties.
      (Some are shared symbols for testing or sharing between mixin
      classes.)  This prevents accidental clobbering, and makes it much
      clearer what is intended for external consumption.
    - legacyBundling and preferDedupe were moved to buildIdealTree/reify
      options instead of constructor options.
    
    The test coverage map was simplified, so that now the various Arborist
    method tests only test the parts that they're intended to.  (There were
    some buildIdealTree and loadVirtual code paths that were only getting
    hit by the reify test, but now it's all properly covered by what it's
    intended to be covered by.)
    
    Tests were also added for the cases where rimraf fails.  Even though
    this is unusual, it's not impossible.

commit 03e95b1b02a3dcf1f2b6fd08b9eeb4eb2e1e6a4b
Author: isaacs <i@izs.me>
Date:   Wed Jan 1 16:44:45 2020 -0800

    a script that reifies

commit 20d5b9e785b53710f59f93bd5132fc9d863e721e
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:28:13 2019 -0800

    0.0.0-pre.1

commit 651bb48d90919d793444cad9ec4bc2d45d48729d
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:27:46 2019 -0800

    hard code the logo to full url

commit 0233dbbc66e01343470bb66aeea61f625d034215
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:24:46 2019 -0800

    0.0.0-pre.0

commit 38d5b57ad776f2c998af3b38f55c78fcd0e93fe6
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 18:19:37 2019 -0800

    tests and bug-fixing for reify error rollbacks

commit c42b8911ab22d34ae7fab6de6a91b16827644300
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 15:44:58 2019 -0800

    Remove race in reify test
    
    npm v6 only inconsistently saves the resolved url for deps that
    are bundled.
    
    That's fine, since we don't have to fetch them anyway, but it does
    mean that the test had a race, where it would get a different
    snapshot based on whether it had loaded that node (and thus updated
    the shrinkwrap) or not.

commit 6df51547b8eb16001d48b16b359abf4d9fda09f6
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 14:18:54 2019 -0800

    remove some slow reify tests that weren't adding coverage

commit 505e32d455500a1ca2876f2951be65fb286af37b
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 13:17:59 2019 -0800

    update reify test cases, improve comment in generated fixture

commit 0b304d50f5d0eceaeb18d4ec239e36df21e35bfc
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:57:22 2019 -0800

    Initial Arborist.reify() implementation
    
    Lots of XXX istanbul ignore comments.
    
    Next step is to write tests for all the rollback behaviors.

commit 1e57ea2af68656bdf8f5e5fc43510dfe50b0d231
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:48:59 2019 -0800

    loadActual snapshot update for removing fsChildren from legacy shrinkwraps

commit 411a2647492cde5f66c2f27afbbf11a9fe3562ec
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:47:11 2019 -0800

    clean up extraneous:true from loadVirtual snapshot

commit db0a2068afe232ce6b4a685393191c7822cb75d5
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:46:08 2019 -0800

    buildIdealTree changes shaken out of reify work

commit c5b4edbd602d8539311e64a73580a958fc2911ca
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:39:23 2019 -0800

    link: clean up path/realpath handling in ctor

commit 0b1e4d3cc8315d7656fb3a2ad5edc265d748f65a
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:28:56 2019 -0800

    shrinkwrap: don't track fsChildren in legacy shrinkwrap data

commit 83d535881737d410a71f19a4da09ffe834edf923
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:27:27 2019 -0800

    diff: do not clobber fsChildren
    
    TODO: provide a deep:true argument to tell it to diff the children of
    fsChildren nodes.
    
    There's no sense in diffing these, however.  Either they're included in
    a package's contents (in which case, they'll be handled when/if the node
    is replaced or otherwise modified), or they're a separate project and
    shouldn't be modified.

commit e14ffdb0c9052f34ab0d3702a765583696e6521d
Author: isaacs <i@izs.me>
Date:   Tue Dec 31 12:23:55 2019 -0800

    fixtures for Arborist.reify testing

commit f3adda2781fe86b53fa4ee88b9387e45fa4d5070
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 22:47:14 2019 -0800

    test case for updating node with unchanging children

commit cac3c7804a46fc64cbd6dba4c42fcde85a8cf38d
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 20:08:11 2019 -0800

    diff: Copy bundled deps from actual to ideal tree

commit 3e400b0d92d32a2e500af09be8e7b8c76d3fc4b0
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 10:54:14 2019 -0800

    remove a few large unused fixture files

commit 30585319329fa3257fc061ee6c87841106194b4e
Author: isaacs <i@izs.me>
Date:   Sun Dec 29 08:33:23 2019 -0800

    correct markdown indentation for gfm

commit 01633787394a6f1fa4043560e4037c605fa957c1
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 22:29:54 2019 -0800

    notes on workspace layout options

commit a4cb41dbbe463827bddb8230f49b32b8654e7c1e
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 22:24:41 2019 -0800

    diff: walk fsChildren as well as children

commit fef8adb95cda0bff30088b859f8d3f33238d2b53
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 22:23:31 2019 -0800

    rename 'staging' to 'retired'
    
    These aren't actually 'staged', as in, nodes that we are installing, but
    rather 'retired', as in, nodes that are moving out of the way to let new
    instances come into place.
    
    Other synonyms considered: acquiesce, move-aside, ceded

commit 8a8abb98037c686fe7c81d2e3007fb888f40966b
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 21:50:30 2019 -0800

    notes: parent, top, root, edge, fsParent concepts

commit 8ea94990b65809b4d90b3cbd18bceae9f9c99bf5
Author: isaacs <i@izs.me>
Date:   Sat Dec 28 21:36:40 2019 -0800

    build ideal tree algorithm notes

commit 99811cb49b4163f86e27209423799b96c10e0bb1
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 17:56:21 2019 -0800

    tree type notes

commit b0b86a964f8f0230d4dc7a87e3e4e610650cae20
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 17:56:04 2019 -0800

    diff notes

commit 56a6ba8b4a98cfd8ff2fb266f63102e9ad50711f
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 17:43:42 2019 -0800

    reify notes

commit c881482cfe04613b49152b29ea2a6328e87ded97
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:57:30 2019 -0800

    Add late rejection and package-installed-contents deps

commit 7b36b35587a4047cebb49e0918e240c632844576
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:56:53 2019 -0800

    Track bundled/inBundle properly in legacy shrinkwraps

commit c585ce1f51e5ddc4ad75588bf89ea4583dddeaf5
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:55:05 2019 -0800

    ideal script: add --add-dev=... option

commit 97cd91b31f937649bf47dcc3b4d6f4a296052c3e
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:54:30 2019 -0800

    diff: track set of unchanged nodes in each branch

commit 4c0ebba0f9eb6064a1bd8251d640e161db997c53
Author: isaacs <i@izs.me>
Date:   Fri Dec 27 12:53:36 2019 -0800

    module for determining a folder for staging

commit de4c61d93662f7af7720bf4780d8b889bc958c1a
Author: isaacs <i@izs.me>
Date:   Thu Dec 26 10:59:52 2019 -0800

    A class for calculating tree diffs

commit eeab3a8a630a4e9b2686e3631608bb8f887ec5f4
Author: isaacs <i@izs.me>
Date:   Wed Dec 25 19:30:25 2019 -0800

    update pacote

commit 2c71154d213411ea526268fcff77300dd453636c
Author: isaacs <i@izs.me>
Date:   Sun Dec 22 00:27:13 2019 -0800

    Properly dedupe nested meta-dep cycles
    
    This implements a pruning algorithm when replacing nodes, such that any
    cyclical set of dependencies required by the old version can be
    optimally replaced by the dependencies of the new version.
    
    For example, a cycle of peer deps, all updated to a new version with the
    new version of the dep being updated, would cause conflicts when finding
    the ideal place in the tree, because each node would have edgesIn from
    another conflicting version.  As a result, the cycle of deps would get
    nested, and then after placing everything, the pruning step would remove
    those now-extraneous deps anyway.
    
    The earlier pruning step in the case of node replacement reduces the
    cases where we have extraneous deps left over in the first place (maybe
    eliminates it altogether? not sure, haven't taken the time to prove it
    one way or another), so that these conflicting metadeps will be moved
    out of the way before attempting to place dependencies.
    
    Additionally, a check is now performed after placing a node to find any
    nodes by the same name which are descendants of the target and can be
    safely replaced by the target.  So, if a previous installation required
    a nested placement of a dep, but it's no longer required after an
    update, then the nested node is duduped out automatically as part of the
    subsequent placement.

commit e75a388788053456097163e680c8a02962bfae4d
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 23:29:25 2019 -0800

    Skip shrinkwrapped deps in buildIdealTree
    
    Also, track hasShrinkwrap and inShrinkwrap on Node objects, and store
    hasShrinkwrap in the lockfile.

commit 02b75128a6f990a4a5d0d3c665c1b594da82d5d9
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 22:49:27 2019 -0800

    inventory: add funding to default query keys

commit 2bb6768647123631d6c92f778e86d76a74fe629b
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 22:48:58 2019 -0800

    Fix scripts timing and sorting

commit 4251044b22edb256b0f3e87acd1e69184587a6c2
Author: isaacs <i@izs.me>
Date:   Fri Dec 20 16:33:36 2019 -0800

    Revert "buildIdealTree: support {update:{depth:Number}} option."
    
    This reverts commit 7744295d027146409775c55d83ff5908112dff7f.
    
    See https://github.com/npm/rfcs/pull/81 for rationale.

commit 7744295d027146409775c55d83ff5908112dff7f
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 12:03:07 2019 -0800

    buildIdealTree: support {update:{depth:Number}} option.

commit c143da5ab9b22a04cab250c06735c8e615f6070d
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:58:31 2019 -0800

    fsParent and target are bidirectional and managed
    
    This automatically updates the path, realpath, and associated fields
    whenever the node.fsParent or link.target are modified, as we were
    previously doing with node.parent.
    
    That is, if the link.target is reassigned, then link.realpath is updated
    to match link.target.path.  If node.fsParent is modified, then its path
    is updated to be relative to the new fsParent's path.  And, if changed,
    the paths of all nodes referencing this one as either a parent or
    fsParent or link target are similarly updated.
    
    In order to accomplish this, the linksIn and fsChildren sets are added,
    making link.target and node.fsParent bidirectional.

commit b8b8d7d4545d16be2ec67773e6a836f0117e1b70
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:53:08 2019 -0800

    update snapshots

commit 39931355bcfef0d08f665af6b974313a8ff70be1
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:43:16 2019 -0800

    add --save option to scripts/virtual.js

commit 77d5c7e7b2d0d88d90e6d8dba31e7536af3aaf8d
Author: isaacs <i@izs.me>
Date:   Wed Dec 18 11:42:57 2019 -0800

    add fixtures for update tests

commit 390451920f4167ca68453536302f83f4d28ee4ef
Author: isaacs <i@izs.me>
Date:   Tue Dec 17 16:47:58 2019 -0800

    update tap
    
    Removes extraneous deps

commit 1e769a6b46444848c276debade50cd1c2148531b
Author: isaacs <i@izs.me>
Date:   Mon Dec 16 09:19:20 2019 -0800

    add resolveParent getter
    
    This simplifies the parent/fsParent selection logic when resolving deps.

commit 963e047ef3e5ace091f40110805adc5f22fb9a6c
Author: isaacs <i@izs.me>
Date:   Sat Dec 14 11:13:00 2019 -0800

    update with a set of names

commit 2c74748e8ca06539b63f53e4857b7c43194dec1e
Author: isaacs <i@izs.me>
Date:   Sat Dec 14 10:42:38 2019 -0800

    Implement update.all, keep update settings around

commit 6152b8b68eb1d18eda00a804200c4c04ad74b898
Author: isaacs <i@izs.me>
Date:   Sat Dec 14 10:39:10 2019 -0800

    Add Shrinkwrap.reset() method

commit 45ca2c9473cdca08c6ff8c8b1687d64f9d275e5d
Author: isaacs <i@izs.me>
Date:   Fri Dec 13 17:07:45 2019 -0800

    add bundled deps properly

commit b7845e3a21c4f35304f163a8fb0d538f3ca5e3cc
Author: isaacs <i@izs.me>
Date:   Thu Dec 12 13:33:41 2019 -0800

    update docs, add logo

commit 5e356e72e772083b5e6a1955ff28035457956f86
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:19:27 2019 -0800

    build ideal: add/remove deps, prune properly, more peer dep handling

commit d2c15eeb0c6d6553d6db5a88c7b0a482af00fcd7
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:12:56 2019 -0800

    Make node.package a getter/setter
    
    This allows for automatically refreshing all the edges by putting a new
    package on the node.  Useful when adding or remove package deps in
    buildIdealTree.

commit f0c455dd2468aec176c797953e2a98e0cbbc6856
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:09:12 2019 -0800

    Add inventory.filter(fn)

commit 0cbb0154ff82bcfb270a0ea84d2a20f86957eb97
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:08:26 2019 -0800

    make edge.reload() a public method
    
    Arborist class needs to do this when updating the root node's package
    dependencies.

commit 6345380e1bdddb1adf52f9a8934cad0bb0bf7069
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 23:07:35 2019 -0800

    add peer-dep-cycle v2 mock

commit 0b965bfa137286e6f8560a9ac5e56051c53eb136
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 22:46:54 2019 -0800

    more peer dependency fixtures

commit 9c9072543e44f181e301876ae48e03f7a9c333f1
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 22:45:39 2019 -0800

    organize registry-mocks fixture a bit better

commit 8dfeafde916b28014652d02c607f9352d0ecfe5d
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 17:19:07 2019 -0800

    Save license info consistently in lockfile

commit 0cad4e8871ed808f76566faefd09bd5a01e01f68
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 17:10:22 2019 -0800

    inventory: be resilient against mutated/invalid data

commit 61135ce82809f06ba56ba0f9f246c185241c1619
Author: isaacs <i@izs.me>
Date:   Thu Dec 5 17:00:50 2019 -0800

    some tweaks to the funding and license scripts

commit c10bfff3ed3a0fe88b9cc21db4e1968be404f5df
Author: isaacs <i@izs.me>
Date:   Wed Dec 4 23:42:50 2019 -0800

    little helper scripts, early makings of a cli maybe

commit 37c1df8141263844072eec7d0b4689b365e681d7
Author: isaacs <i@izs.me>
Date:   Wed Dec 4 22:19:02 2019 -0800

    add a test fixture with a cycle of peer deps

commit 454151cf90ff12943f8e235d37996183ff4d348c
Author: isaacs <i@izs.me>
Date:   Wed Dec 4 22:13:42 2019 -0800

    give the regmock test fixture loader a better name

commit 49fd0cfb2230b6a16b06663da02089c37f373da8
Author: isaacs <i@izs.me>
Date:   Tue Dec 3 18:05:09 2019 -0800

    build ideal: Include bundleDependencies at the root level
    
    Also, refactor the build ideal tree test a bit so that the server is
    reusable, since we'll need that in the reify tests as well.

commit 055a2d434a5acd53043171a5737803ef869cf400
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 21:01:05 2019 -0800

    Arborist.buildIdealTree()
    
    This builds out the ideal tree from a package.json and/or package-lock.json,
    by walking the tree and fixing all problems encountered.
    
    It does not (yet) auto-prune, or take requests to add to the tree.  Ie, it's
    strictly 'npm install <noargs>', not 'npm install foo'.

commit ca558213f741546033a25d58771d55ca7cc2ce61
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 14:51:39 2019 -0800

    update loadVirtual with recent shrinkwrap/resolved changes

commit 1873a65aeec4f54bba87c329350bfea2cdadf5fc
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 14:00:35 2019 -0800

    Add node replacement, fix node.resolved for file:
    
    This adds the replace(), replaceWith(), canReplace(), and
    canReplaceWith() methods to the Node class, and some other methods
    needed for building ideal trees.
    
    It also adds consistency to how shrinkwraps and node objects track the
    node.resolved values for file: deps.  The resolved value is now always
    relative to the object or file reporting it.  That means that we
    effectively can't do anything with the _resolved value in package.json
    for file: deps, so we have to rely on package-lock and shrinkwraps for
    those.

commit f00c262b173b7abe96564e24e770776a3c133038
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 13:09:10 2019 -0800

    util to convert a legacy location to relative path

commit 86a0583291f2359ef882e2279c52a3bf2879e6db
Author: isaacs <i@izs.me>
Date:   Mon Dec 2 09:35:03 2019 -0800

    resolve 'foo' to 'foo', not like 'foo@'

commit 459b71c834596b8ef41d8be39e25666dd38c4840
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 23:09:02 2019 -0800

    Link resolved is always relative from path->realpath

commit 75c785f64bc27f326b645854be0b2607e219f09b
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:50:14 2019 -0800

    keep path resolution relative to file storing it
    
    This changes how lockfiles store the resolved paths for Link nodes.
    
    Instead of making it relative to the Link, the path is always relative
    to the lockfile in question.  That gets rid of an extra layer of
    indirection, and makes it easier to move Link nodes around in the tree
    without having to do lots of path calculations that can be hard to
    reason about.
    
    Note: this makes some other tests break, but they will be updated in a
    subsequent commit.

commit 6f58d5b2012d754479d6e5b9bbb1c2880cd58967
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:41:02 2019 -0800

    test fixture showing the tap/react@15/ink collision

commit b1d027b51437140bb0f162b2cdd642982c75a19a
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:39:22 2019 -0800

    a fixture to demonstrate inferring dep types from shrinkwrap file

commit d0ab3c5f218be2732391235c9b7396ca8ead55af
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 22:36:52 2019 -0800

    add Edge.satisfiedBy method

commit 58d3e3d3d22946f6d2edc2f38487a3950e4f6929
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:34:04 2019 -0800

    update pacote, read-package-json-fast, tap, and tcompare

commit 763f1ca66a02279a07e4f6db01cb7c9abc6f1da5
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:32:35 2019 -0800

    inventory: make querying by license actually work

commit 49c24ed59661611b9f3b6b7bbadf1522cf4afb17
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:25:43 2019 -0800

    module for /-normalized relative paths

commit 3f152813824579b6c2c810183c6225d7d73dcd2b
Author: isaacs <i@izs.me>
Date:   Sun Dec 1 15:25:30 2019 -0800

    module to make resolved values consistent

commit dda54febdf82d0ab7d23d41fd3271f535a41ab12
Author: isaacs <i@izs.me>
Date:   Sat Nov 23 23:14:37 2019 -0800

    Shrinkwrap class takes an options object
    
    The number of things that had to be passed to the Shrinkwrap class was
    getting a little out of hand.  We're contemplating adding a 'backup
    lockfile' concept, which will make matters even worse, and it needs to
    know about save:false, so the right thing to do is have it take a set of
    options at construction time, rather than passing booleans around.

commit c2a5ab9db2c2511e040142e3a00a7101fce65abb
Author: isaacs <i@izs.me>
Date:   Sat Nov 23 22:19:59 2019 -0800

    Resolve confusion around 'root' vs 'path'
    
    On Node and Link objects 'root' refers to the root node.
    
    But on Arborist and Shrinkwrap objects, 'root' referred to the root
    path.
    
    This led to some weird and confusing internal terminology.  Fix by
    making 'path' always refer to the string path to a thing, and reserving
    'root' to refer to a root node in a graph.

commit 2dc703ccdcc2813663441949b33e5fddb34ac20f
Author: isaacs <i@izs.me>
Date:   Fri Nov 22 17:05:26 2019 -0800

    upgrade pacote, switch to read-package-json-fast

commit 1da36f91f2b439d05d5bb526e8e51d22b6726e3f
Author: isaacs <i@izs.me>
Date:   Fri Nov 22 15:01:57 2019 -0800

    DRY path/location handling, fix deeply nested edge case
    
    DRY the code that was handling metadata fetching and updating, and
    take care of an edge case that prevented deeply nested link targets
    from being properly updated when they eventually get parented.
    
    This is mostly a refactor that just cleans up the code for readability,
    but it does fix a (albeit obscure and unlikely) bug in the process.

commit c5b39991c08f5e5ccca227d4a1015a1caad9165d
Author: isaacs <i@izs.me>
Date:   Fri Nov 22 13:28:31 2019 -0800

    correct comment in dep-valid function

commit f3b9ac483ba631f8e2df97e16d81de39f2981e26
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:52:34 2019 -0800

    re-add tcompare as dev dep
    
    Removing it caused problems, because tap had a conflicted version at a lower level.

commit 92e9dad6f2f5a70d8a2b72fe91a26bb380250e14
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:41:05 2019 -0800

    include funding in metadata
    
    This will make it easier to quickly get info for 'npm fund'

commit bee2adc6fb81a22f3439531b504f05549ad40b18
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:36:33 2019 -0800

    update tap for nicer diffs

commit 47c777f52d8f3b27c6d4c0fe9b4721c356ca76e4
Author: isaacs <i@izs.me>
Date:   Thu Nov 21 14:36:22 2019 -0800

    check for fsParent links on any top-of-tree node

commit 12c6d3d08c64e3e9ed32022299065cdea195743c
Author: Darcy Clarke <darcy@darcyclarke.me>
Date:   Wed Nov 20 10:52:09 2019 -0500

    chore: Add github settings for labels
    
    PR-URL: https://github.com/npm/arborist/pull/17
    Credit: @darcyclarke
    Close: #17
    Reviewed-by: @isaacs
    
    Note: node 8 was already removed from travis in another branch.

commit 04ff0a16e8954151f460f4ed3770cebb9281a403
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 11:09:32 2019 -0800

    ensure that fixture symlinks are loaded in yarn test

commit ee514e019474a1a705cdeab237be06cf95bf473e
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 10:44:54 2019 -0800

    Add static methods to load yarn lock from string/tree

commit a0f73eeaa163955f3e71202f83fc0986b47fa9f8
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 10:30:07 2019 -0800

    save the yarn.lock if it was loaded

commit 5cd2658641cf4f494c569e644f939f6d6cc3913f
Author: isaacs <i@izs.me>
Date:   Wed Nov 20 09:59:32 2019 -0800

    Get metadata from yarn.lock, clean up root/parent behavior
    
    This fixes a lot of weird edge cases and one race condition in how
    metadata was being handled between the root, top, and parent semantics.
    
    The race condition was that loadFSTree would sometimes be called on a
    link whose target had not yet loaded, resulting in an empty children
    collection.

commit abb0c07fa887473f3618749cb66f649126db0519
Author: isaacs <i@izs.me>
Date:   Tue Nov 19 23:09:37 2019 -0800

    shrinkwrap: add test for weird broken data case

commit b8a0f6794cfd0d1f4a3b97700295f124b6b4c2b7
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 22:22:15 2019 -0800

    shrinkwrap: load yarn.lock file as well

commit dd6a7001b0612c641d16790e785a7a32ed704520
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 22:21:11 2019 -0800

    handle yarn lock files that don't end in \n

commit 42b962d4d2e71327143b223ac84362510600e7ab
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 22:20:34 2019 -0800

    don't delete fixture symlinks on each test run
    
    Makes it too difficult to share fixtures between tree-walking tests.

commit 974c7fb8483c1864da3bc282670dccfcd5e3f9d7
Author: isaacs <i@izs.me>
Date:   Mon Nov 18 13:16:37 2019 -0800

    Some slight changes to the install-types fixture
    
    Remove the (no longer used) .arborist-lock.json file.
    
    Remove the _fields from a few package.json files, just to ensure that
    we still get the same results.

commit 1cb81ef3f94485ac14495f1f7d40287843e80d2c
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 21:32:10 2019 -0800

    ci: drop node 8, add latest node

commit 97be6d83d124b1297c241fae9340a5d5b4da6ada
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 21:29:52 2019 -0800

    test: turn off --esm

commit c83bfbda1b7e4be9f73f7329b7a0475c5a347fa1
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:45:08 2019 -0800

    sort loadActual snapshots
    
    Fixes node version dependence

commit 85f4463663a86be9d1bb4e1d32aede72ad1ee52a
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:38:11 2019 -0800

    fix spec-from-lock snapshots for Node version dependence
    
    RegExps toString differently starting with node v12

commit a74a6b5bd7ecd2c241f687f13986754e885732b9
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:33:31 2019 -0800

    Remove cwd from yarn-lock shapshot names

commit 4f0aa97be95e59b1c50c4eb93ff57ffa62b406a4
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 15:29:57 2019 -0800

    fix link tests when run on travis
    
    Or any system running in /home instead of /Users, really.

commit 2b2fed221e9de20c605d43e7f08ca14468381136
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 12:27:32 2019 -0800

    YarnLock: class to parse and stringify yarn lock file metadata
    
    This is just the initial implementation spike.  It does not yet provide a nice
    way to lookup or update metadata, or keep it up to date with a Node tree.
    
    Next step: integrate with the Shrinkwrap class so that a yarn.lock file is
    automatically respected and kept in sync if it exists.

commit 55e6387a7f5f4208a57840518bf9b638f292a638
Author: isaacs <i@izs.me>
Date:   Sat Nov 16 20:59:49 2019 -0800

    style: remove excess \n char

commit 54f00871516d884ab31de6521bd9b31707b0a17e
Author: isaacs <i@izs.me>
Date:   Sat Nov 16 20:58:51 2019 -0800

    update tap
    
    makes npm audit happy

commit 37c1a87a808f1c09225b7ce0007937de78485711
Author: isaacs <i@izs.me>
Date:   Sun Nov 17 12:00:51 2019 -0800

    test: forgot load-actual snapshot file

commit 07c65a0e7e3ad618c7d1d85cf35970158ae0a339
Author: isaacs <i@izs.me>
Date:   Sat Nov 16 18:43:46 2019 -0800

    Load virtual trees from shrinkwrap file
    
    This drove several updates in the Shrinkwrap class and legacy data
    handling functions.
    
    The Shrinkwrap[_metaFromLock] method should probably be split out into a
    standalone function for easier unit testing.  If not, then the
    versionFromTgz and specFromLock functions could be brought into the
    class, for consistency if nothing else.

commit 318fc7d6d3bd9ad520ba9037427d4dcca2aeef46
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 16:35:48 2019 -0800

    Properly set dev, optional, and devOptional in shrinkwrap

commit 2cf89997cebd18461345fd3a1f8fbf8515f7c162
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 15:59:20 2019 -0800

    calc-dep-flags: Properly walk deps of link targets

commit 4e1688435f5fadffd70548f871e457f5419bd292
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 14:51:05 2019 -0800

    Save file: deps resolved values relative to root
    
    Otherwise it ends up being specific to a given system.
    
    Also ensure that the relative() calls in Shrinkwrap class don't drop \\
    chars in metadata files on windows.

commit eb968f53a5db30c8b59e8fc92679c51a9fee6228
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 13:06:06 2019 -0800

    Ensure root is preserved when loading actual tree
    
    Also: add the metadata to the loadActual snapshot tests, which would've
    caught this, and use the built-in tap object sorting so that the
    shrinkwrap is consistent across runs.

commit da9bf4c490d2c6805f87bf40cda22635e9fdfda1
Author: isaacs <i@izs.me>
Date:   Thu Nov 14 12:16:44 2019 -0800

    Add Shrinkwrap.commit() method, fix some obvious bugs
    
    Found during pairing with @darcyclarke

commit dd1a91f93da726a828dd8b0559f46ca0c8b8e5b8
Author: isaacs <i@izs.me>
Date:   Wed Nov 13 17:45:30 2019 -0800

    Replace Metadata class with Shrinkwrap class
    
    This unites the handling of npm-shrinkwrap.json and package-lock.json
    files into a single class, and defines the lockfileVersion 2 style
    shrinkwrap files.
    
    There's no need for an .arborist-lock.json file in node_modules, because
    the 'packages' section covers all that we would put in there anyway.
    
    In lockfileVersion 3, we can drop the dependencies section, along with
    the legacy metadata code supporting it.  (Likely we'll want to drop the
    writing/tracking of the legacy metadata before we drop support for
    reading it, if ever.)
    
    The loadVirtual function has been removed, but will be brought back
    similar to how loadActual was migrated into the Arborist class.  The
    intent of the Shrinkwrap class is to make that easier to accomplish,
    since we effectively just have to generate all the Node and Link objects
    and assign their parents to hook them up into a tree, and the lockfile
    will contain the arguments needed to generate them.
    
    Still todo: store funding info in the lockfile, so that we can run `npm
    fund` without loading the entire actual tree.  There are a few other
    other use cases where we'd want to get a quick and dirty snapshot (ci
    and audit, at least).

commit 47b4f65505597d525fd9b34311039c7f3255266e
Author: isaacs <i@izs.me>
Date:   Sat Nov 9 12:22:51 2019 -0800

    deps: add pacote from git branch, and json-stringify-nice

commit 100bf7bf22a82024d260016d6b0810954272ead6
Author: isaacs <i@izs.me>
Date:   Thu Nov 7 15:17:24 2019 -0800

    metadata: splitting location by node_modules, don't need to handle scopes

commit ebc253110ee8678642c3537b93c1583afb1936cc
Author: isaacs <i@izs.me>
Date:   Thu Nov 7 14:23:53 2019 -0800

    Fix some loadActual bugs that popped up in the refactor

commit 0d8784e26a5ed256ebb534a2f3ebec411f734eef
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:49:19 2019 -0800

    add pacote, update tap

commit 08388418e18da80fcf033448809018306da84a46
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:48:33 2019 -0800

    Metadata: record links in a more useful fashion

commit 7f8fade16419947bcf0e6ed8999ce75a029b081b
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:47:02 2019 -0800

    Fold loadActual functionality into Arborist class
    
    This will allow us to have a single source of truth for metadata as we
    build up the idealTree from that metadata, and reify the idealTree onto
    the actualTree.

commit 8c267ca72c4e85059966dfde6604bb3e5f984002
Author: isaacs <i@izs.me>
Date:   Wed Nov 6 17:48:52 2019 -0800

    move inNodeModules function onto Node class

commit c2bcf244c63b571162942062397c479e7179dd09
Author: isaacs <i@izs.me>
Date:   Mon Nov 4 16:10:49 2019 -0800

    Refactor data model to enable reification and ideal tree building
    
    This changes a number of things in the data model to make it easier to
    reify package trees and build ideal trees from package requirements.
    
    - The .arborist-metadata.json file is renamed to .arborist-lock.json,
      and contains a more complete picture of the package tree.  This will
      eventually be merged into the package-lock.json under the 'packages'
      key, so as to support locking workspaces and other trees that don't
      follow npm's traditional dep/node_modules/dep/node_modules/...
      structure.
    - Location is now the relative path from the root node to the node in
      question, again to better support trees that don't conform to npm's
      traditional expectations.
    - The root node keeps an index of packages by location, which is
      queryable by name or license key.  This will make it easier for use
      cases where we need to jump directly into the tree to all packages
      with a given name, for example for 'npm ls', 'npm update', or the 'npm
      audit' server-side service.

commit a4ad5b86b64a9b076890e09a0eb8d7114762e22c
Author: isaacs <i@izs.me>
Date:   Mon Nov 4 16:06:14 2019 -0800

    inventory class

commit bd517ee9c46e82b742abf9ace27702c62275ca64
Author: isaacs <i@izs.me>
Date:   Mon Nov 4 09:25:51 2019 -0800

    remove tacks (not being used)

commit 0587ced7001c0e968176819b0f875a01d491345d
Author: isaacs <i@izs.me>
Date:   Fri Oct 25 22:33:39 2019 -0700

    Parse pnpm trees (and other links into node_modules folders)
    
    Fix: #16

commit aaa8353caf45804ba8c44a24b8946830f67fcc7d
Author: isaacs <i@izs.me>
Date:   Fri Oct 25 16:37:45 2019 -0700

    Resolve deps to fs parent folder children
    
    Fix: #15
    
    Note: this does NOT support pnpm style trees.  They still show up as a
    ton of missing deps.  But, this commit adds a test fixture and snapshot
    for how pnpm trees are handled, so we can track changes against it more
    easily.
    
    pnpm trees will be addressed via #16
    
    This lays the groundwork for Workspaces, by resolving dependencies in
    the `packages` (or whatever) subfolders against the root node, if those
    deps are found there.

commit 6e9b6a3f0caacf72550e4ba1b3c39d5274de11d3
Author: isaacs <i@izs.me>
Date:   Fri Oct 25 14:13:21 2019 -0700

    edge: Always compute the error
    
    The better to print it with.

commit bc98f5fd402c6728e8a88be373a905704bd4e951
Author: isaacs <i@izs.me>
Date:   Thu Oct 24 23:31:44 2019 -0700

    two more workspace-ish examples

commit 5288b21bb0d4b0d6c377dc84506d778e2f2a82b0
Author: isaacs <i@izs.me>
Date:   Wed Aug 7 15:44:57 2019 -0700

    Implement peerDependenciesMeta

commit 67c9ef1d3a1deb7781e4f627853bf8af0c2e30d1
Author: isaacs <i@izs.me>
Date:   Wed Aug 7 15:28:02 2019 -0700

    Handle git-conflicted shrinkwraps, prefer shrinkwrap to lockfile

commit b2674fb579f771aea8efff667d12e0b8e219cf55
Author: isaacs <i@izs.me>
Date:   Wed Aug 7 09:12:18 2019 -0700

    npm-shrinkwrap has priority over package-lock

commit 5cf92b8fb0392a05f62a0887957a7ec2648fc0f0
Author: isaacs <i@izs.me>
Date:   Tue Aug 6 16:32:58 2019 -0700

    remove my home directory from tap snapshots

commit 10609464e29e8f97dfddb111f618840adabd05cf
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 22:21:51 2019 -0700

    Thread Metadata object throughout Node tree
    
    Effectively, only the root node gets a Metadata object, the others all
    copy the reference to their parent's meta whenever this.parent changes.
    
    This allows all the location updates to automatically update the
    meta.data.arbmeta, so it's ready to write when we reify the tree.

commit 8b152b2f35ea7e51973523ab9595bdfb51610311
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 21:58:12 2019 -0700

    Add Metadata.load(root) to instantiate and load in one
    
    I keep mistyping it this way, may as well just make it part of the API.

commit 217ca01bfe30c339cfc016af9fedf0c05acdd9e5
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 21:47:04 2019 -0700

    index exports test

commit 345f6876a98592969942dc2402004a6c165ac30e
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 19:27:49 2019 -0700

    load a virtual tree from a shrinkwrap

commit a90badbb216b745baa9a3f48f66069d46df8da4f
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 17:28:13 2019 -0700

    depValid: handle errors more consistently
    
    Also, guard against a null request coming in, which can happen
    when a shrinkwrap is very old or hand-munged.

commit 91de8fdedb0ac921342926671c19aca92c7cfcba
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 17:16:30 2019 -0700

    beef up the install-types test fixture
    
    This will be used to test loadVirtual, needs more edge cases.

commit 4dceb469235b62db4df4eb9b63d097eb97a7ace2
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 15:33:39 2019 -0700

    node: keep errors in this.errors[]
    
    There can be more than one, it turns out.

commit 2421365b05f94a1ae12128727ce02d8245deee50
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 15:27:10 2019 -0700

    metadata: always memoize to arbmeta object
    
    This makes it so that at the end of an install, we can easily
    write it back to the file for next time.

commit 783ec99282f2befe15a8b453df0494708ac0c116
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 15:17:06 2019 -0700

    Get a spec from a lockfile entry

commit e2813887e5bc240acbc999e4b9dac83e8de5778f
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 14:51:15 2019 -0700

    try to get a version from a tarball file/url

commit df08ef2d313239fd6cc4433f3a21713fb6dbdc53
Author: isaacs <i@izs.me>
Date:   Mon Aug 5 12:53:05 2019 -0700

    dep-valid: don't rely on package.json _fields

commit 8b800075a296a5a6f188b5be4dd5dc74a430ceba
Author: isaacs <i@izs.me>
Date:   Sun Aug 4 23:02:20 2019 -0700

    bump deps

commit 59297daa78b104dda68f6c65fc0e8f6b637da46a
Author: isaacs <i@izs.me>
Date:   Sat Aug 3 16:33:11 2019 -0700

    Load integrity/resolved metadata in loadActual

commit b7f68b64fba91343079a768d0027b854edcef9db
Author: isaacs <i@izs.me>
Date:   Sat Aug 3 16:17:35 2019 -0700

    Metadata class for loading resolved and integrity

commit 27f9d77356436ce7f9ed96de33e39e3e4144071f
Author: isaacs <i@izs.me>
Date:   Fri Aug 2 10:47:33 2019 -0700

    Calculate dep flags (dev, optional, etc.) properly
    
    This also adds the capability of a Node constructor to not be given aa
    `path` or `realpath`, since that can be inferred when assigning to a
    parent.  In that case, it gets the `name` field from its `pkg` option.
    
    Of course, this means that alias deps will have to be given a path (at
    least `path: 'alias-name'`) when being created.  Another option might be
    to have an explicit `name` field in the options.

commit 41d343abb50983c61c035500e0ab638b4b4089bf
Author: isaacs <i@izs.me>
Date:   Wed Jul 31 15:26:04 2019 -0700

    Add coverage map

commit a921e10c0c5e6228027e4e547cace0eea63c245e
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 15:00:01 2019 -0700

    Properly exclude dev deps below top level

commit f787c135977e3bd06f754a9b7e2bf68c90612cef
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 13:50:56 2019 -0700

    docs: edge class

commit 281dd748698553e1b056424a2c226b5966629b50
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 12:22:10 2019 -0700

    doc: s/req/prod/

commit 9e8dec191fae4fba78f55d140d509e1b4f7fbacf
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 10:27:47 2019 -0700

    Do not load devDependencies below top level

commit 0d1c0a9f53a7b59a1686b65d8ec10b7dd2bef152
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 10:26:04 2019 -0700

    Do not treat a missing optional dep as an error

commit 3d5655bc569cf632738c77a2280c4a31f6cda000
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 01:04:19 2019 -0700

    docs: document some recent changes to Node and Link classes

commit 918caa72ae7f1e4b81cafcea668f7f9b7048e9c3
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 00:53:47 2019 -0700

    test: abstract out fixtures, sort better in load-actual

commit 7ba17f269f0da0c1f80c796e8b55aba79f13c805
Author: isaacs <i@izs.me>
Date:   Mon Jul 29 00:37:17 2019 -0700

    Make node.children a Map instead of Array
    
    This simplifies all the cases where we need to look up a child node by
    scanning for the index, or even worse, filtering based on a name match.

commit 7e67734dc686d71ed691e153da684abe8ed13183
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 23:49:46 2019 -0700

    test: fold symlink test into load actual
    
    Also, clean up symbolic links better, and use Maps/Sets in the snapshot
    rather than arrays and objects, so that it's order-independent.

commit 4b779383f585967f5f6dbfe2294c3d26ee0bd2bf
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 23:45:59 2019 -0700

    test: use a coverage map

commit f27893fa2742b76fe89519b0e6257e84fd663cd1
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 23:30:53 2019 -0700

    loadActual: update to new Node API surface

commit e0cd438ca42c869addf0346440f87f2fc66539f5
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 22:52:45 2019 -0700

    node: track errors encountered loading node
    
    Typically, this is an error reading the package.json file

commit 689a22243985a08605d97ec61a3c01e1431f716e
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 16:44:45 2019 -0700

    New classes for Node, Edge, and Link
    
    This is taking the module completely away from the approach used by
    read-package-tree.  Loading is still not done, so the tests are
    expectedly failing, but the need for this rewrite became more and more
    apparent when trying to shoehorn virtual loading and tree munging into
    the older data structure.
    
    With this, the dependency graph is automatically generated and updated
    as the folder tree is defined or mutated, making it much easier to do
    the kinds of operations that will be required for npm's use cases.
    
    From the Node point of view, there's only one kind of 'thing' that
    represents a dependency, which is captured in the Edge class, making it
    much simpler to keep up to date when re-parenting nodes.

commit 98e4999d1b0481b74cd8f5b9083cde130ea0a353
Author: isaacs <i@izs.me>
Date:   Sun Jul 28 13:17:19 2019 -0700

    todo comment: don't rely on package _fields

commit 01e907a8c7a294fd60a1df446fdcd1ebce0722e7
Author: isaacs <i@izs.me>
Date:   Fri Jul 26 15:42:50 2019 -0700

    Clean up path and parent handling
    
    Make node.parent a setter that updates location, so that cases where a
    package is linked multiple times throughout the tree resolves to the
    appropriate path.  If a link target is outside the tree, then node.path
    remains null, rather than being set to the logical path where it first
    occurs in the tree.
    
    Fix #1

commit 9ff6f226b2bf0cb19d4a1de4793efe638d6ed05e
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 21:45:56 2019 -0700

    Track bundledness more reliably
    
    Fix: https://github.com/npm/arborist/issues/4

commit ac1036e68b5d91f4006cc5d302f98de516783bea
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:35:26 2019 -0700

    Get rid of node.id
    
    Fix: https://github.com/npm/arborist/issues/2

commit 770dd43bb44003f6c46299dbc9efc4174049697f
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:27:47 2019 -0700

    don't bother unsetting flags that aren't set

commit 1859a9d74ed57b9104300ca91b49cada3719c8ad
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:26:14 2019 -0700

    devOptional: for deps both dev and optional graphs
    
    Fix: https://github.com/npm/arborist/issues/3

commit 7af682370f595ea58b0e61a2d6b9e4e8026dbcab
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 16:24:39 2019 -0700

    update deps

commit 64e0d491e33b18d7c35593ff4b473bd1da435ffe
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 14:49:55 2019 -0700

    todo comment to not depend on special _fields in package.json files

commit 4d1be1b791e62bfa2d0c46811d0888c339ba2af6
Author: isaacs <i@izs.me>
Date:   Tue Jul 9 14:48:40 2019 -0700

    update deps

commit a2bd6bb2846d1636bca77a1e17c6dd3cd29c5142
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 14:12:56 2019 -0700

    test: skip root package-lock test on CI
    
    npm ci does not produce the exact same kind of package-lock as npm i.
    
    As a result, this test will always fail on travis.  It's more of a
    temporary gut-check anyway, since npm will be using this module
    eventually.

commit 1dc603e46f728607dfec49660f0104ea271ec43f
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 12:31:03 2019 -0700

    start moving to the arborist API surface
    
    Still todo:
    - Unit tests for all classes.
    - Most of the arb.whatever() methods (other than loadActual, really)
    - Make the Arborist class the top-level export

commit dd6f629ae832edfa13a9548aec807bce440eff39
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 11:52:43 2019 -0700

    remove unused 'warnings' property

commit da3fc8267cbc5810b84b8db2a88fefb633a58f9d
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 11:16:14 2019 -0700

    test: Add a basic workspace fixture, make paths all consistent

commit a88479147c82dd183570db1dcfa9b62fce01fae8
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 10:56:01 2019 -0700

    two todo comments

commit a18b1ac8370ba53b3f4151d37d54e8defb7da8ca
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 10:55:51 2019 -0700

    Drop the filterWith method

commit b9a88513fdf415e945777c321cd4cabd62aaca81
Author: isaacs <i@izs.me>
Date:   Mon Jul 8 10:55:09 2019 -0700

    change name from read-package-tree to arborist

commit 49d2df1fbaee6322df2b7a928f9e8ec167219c09
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 22:08:39 2019 -0700

    Specify parent in arguments to Node/Link ctor

commit 2374249076a282f881544cf11d9e49ff3e570586
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 15:29:24 2019 -0700

    get rid of unused property

commit 6b8394343ec17a5b87d0b45548860568805ddb20
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 15:14:05 2019 -0700

    Use options object instead of sprawling arg lists

commit 5c6f65d7fc20e6a1fa87189c887368d7d57f0ea0
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 14:49:43 2019 -0700

    Test deps properly, track extraneous deps

commit bfa7d3561667f89a92c2df29be2a935a7a51b088
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:45:27 2019 -0700

    use native util.promisify

commit 0b86bf4a3044879016060268a6bda654e4f811ab
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:44:45 2019 -0700

    update deps, prune package-lock

commit 8528a637ad78c23a5dd3c3287bf655cc7ab2c87a
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:44:00 2019 -0700

    module to test if deps are valid

commit 9b6226809b2b749f269637c9df79f277cbbef4e9
Author: isaacs <i@izs.me>
Date:   Fri Jul 5 13:41:16 2019 -0700

    fixtures for more looping edge cases

commit f7871b158a2b1d05883d959ee3737575f855ee2e
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 23:19:02 2019 -0700

    Track the /-style flat location in the tree

commit 844c31f7b5a77fac2d0e64cb5de0ee200de6bff1
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 18:29:57 2019 -0700

    restructure code into more logical modules

commit 62239488359721b34bc2255807c1167027419c02
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 17:16:40 2019 -0700

    rename rpt.js to index.js

commit 86b349780fecf11ffbe6679ea77dce15da86819e
Author: isaacs <i@izs.me>
Date:   Sun Jun 23 16:46:48 2019 -0700

    Add test that exercises package aliasing
    
    Adding the alias also results in a case where the sync and async
    walkLogical calls produce different results.  To test this properly,
    persistent array objects are used instead of strings, so that they're
    fully updated in the final result.

commit 1fab6fd5fbb2e9c282118f1e5751dfd1ce057da7
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 17:20:21 2019 -0700

    Don't exclude links within the tree from package-lock.json view

commit aa58840a5672272d7f171e79c205893f0eb6cc06
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 17:10:24 2019 -0700

    Add package-lock.json info on the .packageLock getter

commit 7285526cda75e4bba6a9a497d35098e98a59b9d7
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 15:15:21 2019 -0700

    Use walk methods more like a map/reduce
    
    Enter function can transform a node, and then the exit function
    receives the result of the current node plus all children results.
    
    This makes it easy to archyize (etc) and capture information
    properly, even when there are cycles.

commit b86cca07caf2277d73ca0a5344f107ca3147cdae
Author: isaacs <i@izs.me>
Date:   Sat Jun 22 14:11:14 2019 -0700

    Handle peer deps, load all dep info in one walk

commit a3600ec7bd0524306d368426a42c0dbffc42a33e
Author: isaacs <i@izs.me>
Date:   Fri Jun 21 20:35:37 2019 -0700

    Track and mark invalid dependencies

commit d7156678effa868079c873ec6285c56871d34fce
Author: isaacs <i@izs.me>
Date:   Fri Jun 21 17:12:29 2019 -0700

    Flag optional deps, sort without localeSort
    
    The better to match the existing logic in creating package-lock.json
    files.

commit 64c62e6be479c2b7756b83b9a7c4a7a123bb308f
Author: isaacs <i@izs.me>
Date:   Mon Jun 10 23:51:39 2019 -0700

    Load logical tree, add methods for walking trees
    
    As of this commit, each node has a Map for dependencies, identifying
    whic node resolves each of their dependencies, devDependencies, and
    optionalDependencies.  Missing dependencies are stored in the
    misisngDeps map.
    
    Still todo:
    - peerDependencies and semver validation.
    - reading the logical tree only (eg, from a package-lock.json file).
    - outputting to a package-lock.json file.

commit 3174edfcb529df349d595fa6b7aad16bec89453c
Author: isaacs <i@izs.me>
Date:   Sat Jun 29 14:04:22 2019 -0700

    5.3.1

commit 6acf66a16cb3d70cfca55b5a851f9d3223f57336
Author: isaacs <i@izs.me>
Date:   Sat Jun 29 13:58:29 2019 -0700

    Revert breaking change, preserve legacy design bug
    
    Two breaking changes were mistakenly landed in v5.3.0.
    
    The first is returning full paths on the Node.path property, where
    relative paths were previously provided.  (Since the fully resolved path
    is on the Node.realpath property, it's not really necessary to have the
    full path on Node.path anyway, and this was just an oversight.)
    
    The second is that the children of a Link node were previously rooted
    with the *Link* as the parent node, rather than the target.  This causes
    problems in dependency tree analysis, which npm CLI mostly (but not
    entirely) works around.  When combing through this code to remove the
    fs.realpath race conditions, this weird bug was 'fixed', but doing so
    breaks a lot of the code that works around this read-package-tree design
    flaw (which dates back to before this code was abstracted out of npm CLI
    4 years ago, so working around it as established context can certainly
    be forgiven).
    
    Version 6 will fix this long-standing design bug, but doing so requires
    much more work on the tree shaking algorithms in npm CLI.
    
    Fix https://github.com/npm/read-package-tree/issues/21

commit c995ab2c95083bfa5943aadb5e5bffdf3bb3ead4
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 12:35:37 2019 -0700

    only the node_modules in root should be ignored
    
    This was causing a failure on travis, because a new node_modules test
    fixture wasn't being included in the repo.  Oops.

commit 5534e74abc1aff107ee961086892e1d9f8e65f06
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 10:44:45 2019 -0700

    5.3.0

commit 0515c80d8e88da2e88f4780364fb798b92fb565b
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 10:40:39 2019 -0700

    auto-publish on version bump

commit 42314104b532f4e622dc6a0a2b74dc5733980ddd
Author: isaacs <i@izs.me>
Date:   Wed Jun 26 10:35:22 2019 -0700

    Restore node v6 compatability
    
    This rolls back tap to v12, and adds the util-promisify polyfill.

commit e9cd536c543a0b722cb3acdee2cf2c7f881a9016
Author: isaacs <i@izs.me>
Date:   Mon Jun 10 14:47:25 2019 -0700

    Use custom cachable fs.realpath implementation
    
    In this use case, we don't care much about a lot of the stuff that
    fs.realpath can (and should!) do.  The only thing that's relevant to
    reading a package tree is whether package folders are symbolic links,
    and if so, where they point.
    
    Additionally, we don't need to re-start the fs.lstat party every time we
    walk to a new directory.  While it makes sense for fs.realpath to do
    this in the general case, it's not required when reading a package tree,
    and results in a geometric explosion of lstat syscalls.  For example, if
    a project is in /Users/hyooman/projects/company/website, and it has 1000
    dependencies in node_modules, then a whopping 6,000 lstat calls will be
    made just to repeatedly verify that
    /Users/hyooman/projects/company/website/node_modules has not moved!
    
    In this implementation, every realpath call is cached, as is every
    lstat.  Additionally, process.cwd() is assumed to be "real enough", and
    added to the cache initially, which means almost never having to walk
    all the way up to the root directory.
    
    In the npm cli project, this drops the lstat count from 14885 to 3054
    for a single call to read-package-tree on my system.  Larger projects,
    or projects deeper in a folder tree, will have even larger reductions.
    
    This does not account, itself, for a particularly large speed-up, since
    lstat calls do tend to be fairly fast, and the repetitiveness means that
    there are a lot of hits in the file system's stat cache.  But it does
    make read-package-tree 10-30% faster in common use cases.

commit 4eed760707c2e8f4bb5e4b111e29b0e59aca4273
Author: isaacs <i@izs.me>
Date:   Thu Jun 6 21:01:15 2019 -0700

    Add promise API to readme

commit 9a290ec609015e1ecb250c1c8c2d4de49b5379ad
Author: isaacs <i@izs.me>
Date:   Thu Jun 6 20:58:03 2019 -0700

    drop old versions from travis
    
    This drops node 6, which is still technically supported, but modern
    tap is a compelling draw.

commit 4782b1f1850f6498ce7dcd44ee0dc25d6ff56219
Author: isaacs <i@izs.me>
Date:   Thu Jun 6 17:58:29 2019 -0700

    Refactor to be promise-based
    
    This commit changes no functionality, except that a Promise is returned
    by the read-package-tree function.  (A supplied callback is attached to
    the returned promise if provided.)
    
    Test coverage is brought up to 100%, and some code paths have been
    slightly optimized, but the excessive level of realpath/lstat calls
    remains for now.

commit f656af895b2f480e135c54619cb9633d0f7294ed
Author: isaacs <i@izs.me>
Date:   Tue Jun 4 23:04:38 2019 -0700

    Use tap snapshots

commit 463394833735e8df1f00ff857f04472443d2dcfb
Author: isaacs <i@izs.me>
Date:   Tue Jun 4 23:03:24 2019 -0700

    update tap

commit ee595cb0d318e07ffaeb52f6dc4d84cf92f7cbf9
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Feb 12 15:13:55 2019 -0800

    5.2.2

commit 4b6e0a37aeb7e7e58f20a1be940ba85233356e01
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Feb 12 15:13:18 2019 -0800

    fix(audit): npm audit fix --force

commit 0989a5cd3189f039dd8936cd6d0b59be740192db
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Feb 12 15:12:19 2019 -0800

    fix(name): fix calculation of node and link names

commit a7f0ab70c52bcd14b2094f2585cf324384c70721
Author: Ashley Williams <ashley666ashley@gmail.com>
Date:   Tue Jun 6 11:42:32 2017 -0400

    feat(test): add travis badge to readme

commit 5245c6e50d7f46ae65191782622ec75bbe80561d
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 18:46:46 2018 -0700

    5.2.1

commit 608b650560d623794dccd3fb94011bc47d7af99b
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 18:46:11 2018 -0700

    fix(name): only need one dirname call

commit db2770c40e1194e63e2adb175171beba7572ed37
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:50:50 2018 -0700

    5.2.0

commit 099462c60d5c9b73e0206ca99526df070d0816b3
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:48:50 2018 -0700

    meta: add node 8 and 9 to travis

commit d89fa5422fb4c7c559152b7e600eade698a409d2
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:47:15 2018 -0700

    meta: add package-lock.json

commit e5e5535e825a464b038edc2371572b3d0e508db7
Author: Kat Marchán <kzm@zkat.tech>
Date:   Tue Apr 10 13:47:04 2018 -0700

    feat(name): add node name from local dir names

commit d9e0ed750eada0850b8a4d2a01d4510a3776ce45
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jun 1 18:15:16 2017 -0700

    5.1.6

commit 130f384d5b9df00cc676e222b7a59a363cd4cad2
Author: Anna Henningsen <anna@addaleax.net>
Date:   Thu Aug 11 02:52:41 2016 +0200

    Make sure directories for symlinks always exist
    
    Adds the missing test/fixtures/badlink/node_modules directory.
    
    As the directory would usually have no contents except during testing,
    it isn’t present in a normal git checkout of this repository and so
    needs to be created manually in order for the tests to work.
    
    Work around that by letting the test file create it.

commit 5c19d70d88aa787c53dee8227b92e85681895182
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Aug 10 17:17:39 2016 -0700

    Reduce the raceyness of where we get the `path` attribute for Node objects
    
    Previously if you had a module AND a symlink to that module in the same
    node_modules tree then the value of the `path` attribute would
    non-determinstic due to `read-package-tree` doing everything async.

commit 44985bb9a5240a62b8940f21d6a61953f88d9620
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Fri Apr 21 16:43:28 2017 -0700

    Update travis config to match current npm

commit 56afb7ebd7ce989dd652f8b6fbb9266d53a0b597
Author: Thomas Guillet <guillet.thomas@gmail.com>
Date:   Tue Feb 21 09:33:47 2017 +0100

    Remove one typo in README

commit 0d9f6d83e4faf1fd8649d0135b10b6aab46a8119
Author: Forrest L Norvell <forrest@npmjs.com>
Date:   Wed Aug 10 17:16:33 2016 -0700

    ci: guess support for Node 5 is already gone?

commit d1ec4dfb4c3941b1f508a2ff748eacae64fc7e62
Author: Forrest L Norvell <forrest@npmjs.com>
Date:   Wed Aug 10 16:54:59 2016 -0700

    ci: square up versions
    
    Also replace no-op "before_script" with current "before_install".

commit 98d21fa6fd904eafa5637dd5ae75510f5fe34a2f
Author: Daijiro Wachi <daijiro.wachi@gmail.com>
Date:   Tue Jan 5 19:39:02 2016 +0100

    gitignore node_modules

commit 5fcf957b01d3ce5ad3ffde51a5fd6d8178e23354
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jun 23 16:43:42 2016 -0700

    5.1.5

commit a1624bccec1ec9cfdbbcb4b2d2fd56273664442e
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jun 23 16:29:31 2016 -0700

    Minimize distribution

commit c27be355706efd492bb469f99fc386aa3d9ebf29
Author: Daijiro Wachi <daijiro.wachi@gmail.com>
Date:   Tue Jan 5 00:47:38 2016 +0100

    Make symlink errors non-fatal when reading a package tree

commit eb24d2508da745233af93769596ff1d963f801be
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 19 11:31:31 2016 -0700

    5.1.4

commit 64b6de4afd485a7d50a34382b602123e9d1ea71f
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 19 11:30:37 2016 -0700

    Fix bug in unwaterfalling that dropped parents
    
    Previously as children were added their parent's were set and during the
    refactor to remove the waterfall of callbacks this was dropped by mistake.

commit d9fc4f3f4c8220e00a9a729272f6008185c4da5b
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Mon May 16 18:04:14 2016 -0700

    5.1.3

commit 4d3a46c1af921aaeb577c4196168a57d1ac05b48
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 12 02:32:11 2016 -0700

    Don't mark a module as linked if ONLY its node_modules is linked

commit cb31e32429152a49fd4bfc37cefadd149e0ce7c5
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 12 02:29:27 2016 -0700

    Unwaterfall the chains of callbacks

commit daac9fbd4dd927e3d2109b2befdacb719f571c2c
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu May 12 01:56:47 2016 -0700

    Switch resolve to join where resolve is unneeded

commit 2ed40c4654804f2a5ddb7b0b2c509080731eea6b
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Sep 24 22:43:16 2015 +0000

    5.1.2

commit 8aa335e252b0af61e90330d3424a59e385800ad9
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Sep 24 22:42:34 2015 +0000

    Fix use of the now not always there name attribute

commit 11f5ecd539a6c3068b379a8cf392d46942b720ad
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Sep 24 00:14:09 2015 +0000

    5.1.1

commit 8460bbc607d7d9bb98c56dadd64fc037ebc3f520
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Sep 23 21:52:06 2015 +0000

    Stop intuiting package names
    
    This originally came in as a part of 99cc6a7 as rpt was being
    refactored to have fewer fatal conditions and to produce more
    normal output. It turns out that it's VERY useful to npm to be
    able to distinguish between "no package.json" and "package.json
    with only name=dirname".

commit fae66436b710772765968fedf9c918676b29f720
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Sep 23 21:50:47 2015 +0000

    Make selflink test regexp based
    
    Because race conditions in read-package-tree can produce different but valid
    results depending on the order directories are read in.

commit 8c61a3bbeac6bfab524f44e0d33e590c77c426b5
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Wed Sep 23 21:50:09 2015 +0000

    Allow regexp based tests

commit 9c8baac5c966f4976cfc4de6caafe58299d7a51e
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Fri Jul 17 03:15:08 2015 +0000

    5.1.0

commit b51e5056ff72f04e11e9d6ab7ecba94e60c049f8
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jul 16 13:49:55 2015 +0000

    Support filtering what gets included in the tree

commit 5952414124ac36722988b097e8e79166fcb2a15b
Merge: 8a0dd455 57ab023d
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Thu Jul 16 16:05:22 2015 +0000

    Merge tag 'v5.0.0'
    
    5.0.0

commit 57ab023d0a50214b5ea73887adb874723a4b0232
Author: Rebecca Turner <rebecca@npmjs.com>
Date:   Tue Jun 30 20:43:20 2015 -0400

    5.0.0

commit f10e6f61c00e256b14f0efad61bd288b1bcba0d2
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Jun 30 20:42:37 2015 -0400

    Bring docs up to date

commit 99cc6a7c8f748192bd0ffd677af188151c34cfb9
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Jun 30 19:17:55 2015 -0400

    Make errors reading & parsing package.json files non-fatal
    
    Instead record them and continue– npm needs this to be less
    crashy around bad data.

commit 8a0dd4555b02d1c7fe95c07eec2478466618160e
Author: isaacs <i@izs.me>
Date:   Sun May 31 20:12:53 2015 -0700

    tap@1.2.0 and travis-ci

commit 14162fb39841acac16ecaad5e9b79e65b430a1fb
Author: Rebecca Turner <me@re-becca.org>
Date:   Sat Apr 25 13:25:38 2015 -0400

    4.1.0

commit 38207e7ae24b08efa3ec920634a88af4c6456e9e
Author: Rebecca Turner <me@re-becca.org>
Date:   Fri Apr 24 07:23:44 2015 -0400

    Paths in linked directories need to maintain the path name passed in originally
    
    So we track the logical path name– the one that was passed into to start with,
    this is what goes in the .path attribute, and the physical path name, which
    is the version that starts with the realpath of the starting root. This is
    what goes into the realpath attribute of Node objects. Link objects are
    unchanged.

commit 48609748bbf277147e09ded9340ba7d86f4f87f1
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Apr 22 20:24:51 2015 -0400

    4.0.2

commit e3d3721dcc74afe3f11119d650c27e0bfb80f079
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Apr 22 20:22:07 2015 -0400

    Fix bug with overzealous link marking
    
    Specificaly, if the root of the tree or ANY parent of the root of the tree
    were a symlink then every node in the tree would be flagged as being in a
    symlink.

commit 798ed8b2508261ad2efe3a147da0cc45b83a3e20
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Apr 7 15:10:39 2015 -0400

    4.0.1

commit 73ad938e9c4e6fddc7dbfe9a9c8475f948ac8f5e
Author: Rebecca Turner <me@re-becca.org>
Date:   Tue Apr 7 15:00:21 2015 -0400

    read-package-json@2.0.0
    
    Because I probably shouldn't commit things late at night. =(
    This modules doesn't use normalize-package-data, so adding
    it did nothing. What I actually wanted to do was update
    read-package-json, which I do here.

commit defe8eda3be00788b1f9c504db07495040bb0e73
Author: Rebecca Turner <me@re-becca.org>
Date:   Mon Apr 6 23:59:32 2015 -0400

    4.0.0
    
    Major version bumping this due to the new version of normalize-package-data
    that in turn changes how dependency URLs are normalized.  In particular,
    github shortcuts are left as shortcuts now, instead of being expanded into
    URLs.

commit 17a81cac19f7374915de84bd7a289a5abad84c74
Author: Rebecca Turner <me@re-becca.org>
Date:   Mon Apr 6 23:58:09 2015 -0400

    normalize-package-data@2.0.0

commit 5e91322b0c25f1412823b831f6f7f98ad98e740e
Author: Forrest L Norvell <forrest@npmjs.com>
Date:   Mon Mar 9 23:15:01 2015 -0700

    src: reformat according to `standard`
    
    Also, 'package' is a no-no identifier in ES3, ES6, and ES5 strict mode,
    so changed it to the more nonconfrontational 'pkg'.

commit 20da8f80bd6cab9e4311492ac44900cba2438587
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Feb 18 04:49:04 2015 -0500

    3.0.0

commit d25d5aecc39fce01de0fcef5f97a336fa82ccf12
Author: Rebecca Turner <me@re-becca.org>
Date:   Wed Feb 18 04:32:05 2015 -0500

    Return error objects if we run into an error reading a package.json

commit e8806e9035ddb079f10d705b77d29d285bbfc0b4
Author: Rebecca Turner <turner@mikomi.org>
Date:   Wed Feb 4 05:02:58 2015 -0500

    2.2.0

commit 76e80d9bf23b457709784a09742f9eae7f2a77f3
Author: Rebecca Turner <turner@mikomi.org>
Date:   Wed Feb 4 05:02:42 2015 -0500

    Skip any dot-dirs in node_modules, not just .bin

commit b4531e0b5a4618c4cf6b1829bcbaca005ebd3341
Author: Rebecca Turner <turner@mikomi.org>
Date:   Sun Feb 1 17:55:49 2015 -0500

    2.1.0

commit 9877fba3a9768059e66cd2e9b945545ae6358137
Author: Rebecca Turner <turner@mikomi.org>
Date:   Sun Feb 1 17:48:21 2015 -0500

    Store parent to allow bidirectional tree traversal

commit 94838dbb5bd7667c75bb187e9f15f44447d3ba9e
Author: isaacs <i@izs.me>
Date:   Tue Sep 2 17:06:47 2014 -0700

    v2.0.0

commit e542d8fe2e4db9f44850cf21554c72d8429ec30e
Author: isaacs <i@izs.me>
Date:   Tue Sep 2 17:06:22 2014 -0700

    Tests for Node/Link objects

commit db7048297e5b64a1e86d35f5e7f5253337668410
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 17:56:48 2014 -0700

    Handle Node and Link objects properly

commit 10d6f6d0cdb5c274d6df2a3f8dc4f70473a90385
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 16:00:49 2014 -0700

    v1.0.0

commit 437be4d0cd50e5ff58e4b150c76e76cbba3fe6b4
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 16:00:44 2014 -0700

    add symlink type for windows' benefit

commit d8b7143da61f1012a157a60fd18a277dafb5ce71
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:59:37 2014 -0700

    the code

commit 09507f9eec15ae5cfee8a6878bc2db1a4a49ba44
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:55 2014 -0700

    tests

commit 125d5439c0ee03ef6c75c209bedbe3db01761232
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:26 2014 -0700

    isc

commit 72718d666dde2ca57adff74683dc476890a1b8b3
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:21 2014 -0700

    package.json

commit 07afa9a7843dc67428e9b08ae7d39639328f4757
Author: isaacs <i@izs.me>
Date:   Tue Aug 12 15:48:15 2014 -0700

    readme
