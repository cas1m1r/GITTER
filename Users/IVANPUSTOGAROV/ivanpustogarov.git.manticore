======================: FILES :======================
======================: BRANCHES :======================
======================: LOGINFO :======================
commit f17410b8427ddbd5d751d8824bdf10ce33c9f3ce
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Wed Jan 6 10:41:45 2021 -0500

    Concretize only those registers that are used by an unimplemented instruction

commit b835624a0a51ab042f3020cffee99bc047c37098
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Thu Dec 26 17:19:10 2019 -0500

    Add printk patching functionality

commit f31c9c8b69c377d6e70340c2fc3f06fc317a3ecb
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Sun Jul 28 21:22:58 2019 -0400

    Fix the bug with two consecutive B instructions
    
    In case there were two consecutive branch instructions with a symbolic
    conditions, the second instruction was skipped

commit 4a2760b1c1f6dd9f1763fbe0bc42c5fbcd577e38
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Sat Jul 13 14:18:06 2019 -0400

    mmap, mumap, debug printint

commit 7f7171bf9ea578a1f43640fa66b8bedca17dedac
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Wed Jun 27 03:24:20 2018 -0400

    Add barebones mode
    
    Add a mode in which on can symbolically executed arbitrary code
    snippets wrapped as ELF file that provides memory mappings.
    This is similar to Unicorn engine but with symoblic execution

commit 24e46889f65b713ee184f0801be0d71357a2f422
Author: James Wang <jameswang9909@hotmail.com>
Date:   Tue Jun 26 13:38:36 2018 -0400

    Allow users to specify path to solc and solc import remappings (#945)
    
    * Allow users to specify path to solc and solc import remappings

commit 66afb1f011d70f722bc00809d4eef355df39e35e
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 25 22:31:02 2018 -0300

    Fix #947 (#948)
    
    * Fix #947
    
    * Fixed code climate

commit 63ac45c26915d805546edda7d8b11252cb2978ff
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 22 19:10:41 2018 -0400

    Manticore 0.1.10 (#941)
    
    * Bump version number
    
    * Add changelog skeleton
    
    * Add changelog
    
    * Add missing detect-all flag
    
    * Don't forget --avoid-constant

commit e2f25839a4808e1fbc883a6682a162a52823cc59
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 20:09:09 2018 -0300

    Change EVMAsm offset by pc (#938)
    
    * Change offte by pc
    
    * EVMASM offset -> pc
    
    * Keep refactoreing offset -> pc (evmasm)
    
    * The forgotten offset 1
    
    * New format()

commit 5c14e47d8be1ce1d01113079957b248bad73b436
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 20:08:44 2018 -0300

    Better temporary expression handling (#944)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * Better int overflow detector (expensive)
    
    * Added a few more IO reg tests
    
    * CC
    
    * CC
    
    * CC
    
    * Fix io tests. Remove dead code. Improve Transaction.set_result
    
    * Account names, New ABI, user level constraining, state persistence
    
    * merge bugfix
    
    * Merge fix fix
    
    * fix docstr
    
    * Better type checks
    
    * Fix minimal.py example
    
    * CC and symbolic address
    
    * CC
    
    * CC
    
    * CC
    
    * CC
    
    * Add bytearray-Array concatenation/ Fix ABI tests
    
    * CC
    
    * CC
    
    * This fixes EVERYTHING!
    
    * Fixing truly everything, maybe
    
    * Review 1/10
    
    * A few extra ABI serialization tests
    
    * Better default arguments for constructor in multitx
    
    * CC
    
    * CC
    
    * Exception EthereumError
    
    * review
    
    * Improve normal/contract_account filters. Move some ABI stuff to auxiliary funcs(CC)
    
    * CC
    
    * ABI.serialize smallfixes
    
    * Catch parsing exceptions (review)
    
    * Add comment to BitVec.cast()
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * CC
    
    * cs.migrate and bette temporary handling
    
    * CC
    
    * typo
    
    * A Bugfix(tm)

commit e0f5bce7ade63249a4451c1563c89f66ceabf9ab
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 17:58:49 2018 -0300

    Account names, ABI, and state persistence... (#926)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * Better int overflow detector (expensive)
    
    * Added a few more IO reg tests
    
    * CC
    
    * CC
    
    * CC
    
    * Fix io tests. Remove dead code. Improve Transaction.set_result
    
    * Account names, New ABI, user level constraining, state persistence
    
    * merge bugfix
    
    * Merge fix fix
    
    * fix docstr
    
    * Better type checks
    
    * Fix minimal.py example
    
    * CC and symbolic address
    
    * CC
    
    * CC
    
    * CC
    
    * CC
    
    * Add bytearray-Array concatenation/ Fix ABI tests
    
    * CC
    
    * CC
    
    * This fixes EVERYTHING!
    
    * Fixing truly everything, maybe
    
    * Review 1/10
    
    * A few extra ABI serialization tests
    
    * Better default arguments for constructor in multitx
    
    * CC
    
    * CC
    
    * Exception EthereumError
    
    * review
    
    * Improve normal/contract_account filters. Move some ABI stuff to auxiliary funcs(CC)
    
    * CC
    
    * ABI.serialize smallfixes
    
    * Catch parsing exceptions (review)
    
    * Add comment to BitVec.cast()
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * CC

commit 0e8c9b0bf2b7e9b8145254f86522867b67c8947f
Author: aditi-gupta <aditi100gupta@gmail.com>
Date:   Fri Jun 22 16:26:18 2018 -0400

    Improve Ethereum command line flags (#943)

commit 55c86544b1828571eb04969efd11cf1803cc57a1
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 15:48:16 2018 -0300

    Remove dead code (#942)

commit dc3bbd421b5657b92d60fdf5cad3a4dc2db119aa
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri Jun 22 17:34:40 2018 +0200

    Inode number is encoded with 64 bits (#897)
    
    * Inode number is encoded with 64 bits
    
    Fixes #824
    
    * typo fix for interpreter
    
    * Use of stat64 linux kernel structure
    
    See https://code.woboq.org/linux/linux/include/uapi/asm-generic/stat.h.html

commit d3edfa56a767e9ed6eaa80555c456715bb62e503
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Wed Jun 20 23:53:14 2018 +0200

    Add UTXH to arm instructions (#935)
    
    * Add UTXH to arm instructions with tests

commit ccbf9bce7c52c26877a64b30b7a4dea7b17266ba
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Wed Jun 20 23:17:51 2018 +0200

    Raspberry hello world (#914)
    
    See #514
    
    Adds ARM UQSUB8 instruction

commit e29ee087162637f929a84d766f56cfee148c3e21
Author: Lee Azzarello <lee@rockingtiger.com>
Date:   Tue Jun 19 10:40:31 2018 -0700

    Dockerfile updates (#882)
    
    * Dockerfile updates
    
    * no blockchains, no masters
    
    * Stylistic README changes
    
    * Revert back to manticore user

commit 88bf2f68f98715ce5404e1f85f15956571a21532
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 18 19:58:45 2018 -0300

    Fix  evm SDIV/SMOD (#933)
    
    * Fix #930 evm SDIV/SMOD
    
    * Fix ABS :)

commit fbd3865f9056eb2d001901e9c713d32b9aa40240
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 18 11:17:35 2018 -0300

    Fix Taint on Ct Eq (#934)

commit e12b57b032b280bca5c1bde6f916ea9bdd58cac5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 15 19:32:42 2018 -0400

    Make SymbolicFile testcase generation work for closed files (#929)
    
    * Track closed files so we can generate concretized SymbolicFile data for closed files
    
    * Update test to close file too

commit cca85ef84749db8081f469988ead03b79a505d71
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 15 16:55:33 2018 -0400

    Generate symbolic file testcases (#928)
    
    * Export concretized symbolic files in testcase
    
    * use a warning
    
    * add unit test
    
    * Rm unnecessary new attr

commit 8c5e25f5552a5cb1e80d41b62753dab3a7169817
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Jun 14 17:52:26 2018 -0300

    Initial doc to storage evm functions (#915)
    
    * Initial doc to storage evm functions
    
    * CC
    
    * Make evm.world_state private so access is _restricted_ via methods
    
    * Add forgotten import for get_storage_items
    
    * Minor doc improvements

commit b4b4bb76c04d523c1f4349d8cbed016c55c95954
Author: James Wang <jameswang9909@hotmail.com>
Date:   Wed Jun 13 13:51:08 2018 -0400

    Use p.communicate() to read stdout and stderr (#920)
    
    Use communicate() instead of `stdout.read` and `stderr.read`, as they can result in deadlocks. This can occur if manticore tries to compile a solidity contract that has enough errors.

commit e9576604db76e36d29518e2da4dbb52547921572
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Jun 12 15:17:46 2018 -0400

    Fix test to use correct variable (#925)

commit cf6cd0eaf2bd4f38b16c6ee2027e1c219e5eafe8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Jun 7 17:45:07 2018 -0400

    Fix z3 install regression (#923)
    
    * Add back z3
    
    * Rm manual install

commit b184f4e91612a83d3bac294d2f5bf32ec2594958
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Jun 6 15:44:53 2018 -0300

    Integer overflow detector improvements (#913)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * Better int overflow detector (expensive)
    
    * Added a few more IO reg tests
    
    * CC
    
    * CC
    
    * CC
    
    * Fix io tests. Remove dead code. Improve Transaction.set_result
    
    * CC
    
    * Fix wrong  merge
    
    * relax bench test
    
    * Remove Remove
    
    * Reviewed

commit adf010e4f35e882f743c7bae2a1513734d549093
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Jun 6 10:04:18 2018 -0300

    Add regression test for posCAll bug (#918)

commit 49478b1f366b1f0369126fbc0fb0645b9b45788b
Author: Pierre Pronchery <khorben@defora.org>
Date:   Wed Jun 6 01:34:24 2018 +0200

    Add support for NetBSD as a host OS (#893)
    
    With these changes, I am able to run Manticore on Linux (static)
    binaries from a NetBSD host.
    
    Tested with NetBSD/amd64 (7.1_STABLE XEN3_DOM0).

commit 21c1ea5265ce8d5aea94343e969010c520000688
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jun 5 12:05:35 2018 -0300

    Fix pos CALL/DELEGATECALL/STATICCALL/CALLCODE (#917)
    
    * Fix pos CALL/DELEGATECALL/STATICCALL/CALLCODE
    
    * CC

commit 5d7c7f1237847256a16321e1692c03be12e46cdd
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 4 20:02:53 2018 -0300

    Dev evm INVALID detector (#910)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * CC
    
    * Reviewed

commit 1fcb249ac76aeedf2b9f90d213ecbb6976d9b8fd
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Mon Jun 4 22:52:04 2018 +0800

    incremental py3: print statements, octals, and more (#908)
    
    * incremental py3: automated conversion work
    
    print statements, octal literals, and various small changes to support
    identical calling between py2 and py3. Plus a few missed exception
    syntax, etc.
    
    * more print function imports, fix a syntax issue
    
    * revert an import change for the moment
    
    * different absolute import

commit 72039584fb225dd0234f2f18b7a926411c62f86b
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Sat Jun 2 02:35:31 2018 +0800

    Incremental Linting (#911)
    
    * flake
    
    * start removing * imports
    
    wildcard imports make it so we can't easily reason about what is
    available in scope and limit the utility of linting tools
    
    * a wide variety of pep8 related changes
    
    Also adds a tox.ini entry for flake8 experimentation right now.
    
    * fixes

commit 058943763b6aa44ee834538b60593667cf4f1070
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 23:06:06 2018 +0800

    absolute imports (#907)

commit 78df0e9ab9de970656011ae6a0cc0a0e79e68a38
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 21:42:04 2018 +0800

    install z3-solver in our install script so it's available (#906)

commit 69c9d9bf1fc4445de6f0d0a594652a261cd0b2a9
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 21:38:42 2018 +0800

    py3 incremental: remove long literals (#905)
    
    * py3 incremental: remove long literals
    
    * install z3-solver in our install script so it's available

commit 2d2ba9068caf1f80695cfc2df207c43f4fdd50bb
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 11:16:59 2018 +0800

    switch the exception syntax to py3 compatible (#904)

commit c29c3cc7e8bdccc721af21fbd192370d851620a4
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri May 25 19:22:49 2018 -0400

    [WIP] Large EVM refactor (#843)
    
    * Array value configurable. 8,16,32..256 bits (not prefixed to 8)
    
    * Test Array256->256
    
    * Remove old 8 bit assumptions
    
    * Add arrayProxy copy constructors and remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * Better ArrayProxy special case handling
    
    * WiP-research Use raw no-optimized smtlib generic arrays as memory and storage
    
    * remove pdebug print:
    
    * Fix tests
    
    * Review fixes
    
    * review fix
    
    * fix gas variable
    
    * Review fixes
    
    * git hell
    
    * fix asm_to_smtlib
    
    * Fix vm.gas access
    
    * getvalue hack
    
    * Improve internal API
    
    * solver.can_be_true(cs, True) must check that cs is feasible
    
    * Simpler callstack code
    
    * Fix merge and tests
    
    * Fix copy.copy
    
    * Move state ids to private
    
    * New internal add_transaction api
    
    * Fix tx.return_data
    
    * Remove comments
    
    * Do not rely on .last_exception
    
    * Fix evm tests
    
    * peping
    
    * peping
    
    * Peping +test fixes
    
    * Peping +test fixes
    
    * Peping +test fixes
    
    * Fix endTx pop vm
    
    * Improve speed and simplifications. Remove internal_transaction mess
    
    * Change test_eth.EthTests test a bit
    
    * Fix some tests and CALLDATALOAD
    
    * Add CALLCODE and reachability test frame
    
    * Fix calldataload, msize. Add reachability test frame
    
    * Fixlog
    
    * Clean reachability test
    
    * Fixe CODECOPY concrete
    
    * Some style sdded
    
    * peping
    
    * Remove origin and price from EVM as it can be retrieved from human tx
    
    * Added current_human_transaction and last_human_transaction
    
    * peping
    
    * Refactor tests
    
    * Increased argument count  allowed CC
    
    * Initial automatic library loading (no toposort)
    
    * pep8
    
    * Accepts any number of libaries on any ordering
    
    * pep8 and relaxed codeclimate
    
    * Simple library test
    
    * merge libraries in
    
    * Solve https://capturetheether.com/challenges/math/mapping/
    
    * Remove debug print
    
    * More robust path creation for test files
    
    * DELEGATECALL support
    
    * generate testcases only at finalize()
    
    * Add functools32 as dependency for lru in py2
    
    * Manticore Library PoC
    
    * Favor bytearray
    
    * Favor bytearray
    
    * config
    
    * Fix concolic and sha3 arraybyte-> str
    
    * Fix concolic
    
    * Fix typo
    
    * remove absolute path from tests so it fits in link placeholders
    
    * Shrink path spec for solc
    
    * Hopefuly Fix solc invocation bug
    
    * FFFFFFFFFIIIIIIIIIIIIX ITTTTTTTTTTTTTTT
    
    * Better performance on visitors cache, and new ArraySlice
    
    * better os joining, evm library link, and tx based events
    
    * Fitering solidity functions plugin
    
    * add itereator capabilities to ConstarintSet
    
    * Some solver functions exported to state
    
    * bye bye metaclass dynamic check
    
    * extra simplification
    
    * Improved symbolic gas and other bugfixes
    
    * Better visit_BitVecExtract
    
    * Default initial timestamp and block number
    
    * 99 typos
    
    * Re-enable account.named_func() trick
    
    * typo
    
    * Better stronger
    
    * Added default symbolic arguments to constructor..
    
    * Remove constant marked functions from multi_tx
    
    * Add default 16G memory cap to z3
    
    * concretized_args now supports concretizing address arguments to all possible accounts
    
    * Fix coverage calc
    
    * reset fails sometimes
    
    * PEP8 ROA (#900)
    
    * pep8 formatting
    
    * Code Climate updates
    
    * cyclocomplexity--
    
    * Refunds moved from the instruction to the the exeption catching
    
    * merge
    
    * merge
    
    * accept both bytearray and str
    
    * doc
    
    * blockhash changed and returns a symbolic value now, so these tests are wrong
    
    * A bugfix
    
    * pep8/complexity updates
    
    * remove more questionable tests
    
    same thing as with the blockhash thing. we're doing things a little more symbolically now so comparing to concrete will not work
    
    * Accomodate our chubby State class
    
    * Keep moving the refunds
    
    * Disble reachability test for now
    
    * Remove double declaring log for now
    
    * Fix coverage calculation
    
    was prev creating a generator, which you can't do `in` on??
    
    * require 1 tx for int overflow test
    
    * Fix path tests
    
    * Remove debug print in tests
    
    * Only enable gas when necessary
    
    * codeclimate fixes
    
    * Fix concretize_args
    
    * only 1 tx
    
    * Disable max/min support in solver

commit f73fc40e326414a30d2c61d811108a28046d70f0
Author: Matias Bordese <mbordese@gmail.com>
Date:   Fri May 25 14:58:18 2018 -0300

    Install capstone from next branch, optional via pip --process-dependency-links. (#896)
    
    * Install capstone from next branch, optional when passing --process-dependency-links to pip.
    
    * Alter readme wording

commit b9af9bf0185a47ed25d3b1c8de03f872cf42dfb1
Author: Kirwan <kirwan.elmsly@gmail.com>
Date:   Sat May 26 00:35:24 2018 +1000

    Fixed variable name typo. Issue #898. (#899)

commit b5d9d1da278ed281bbda7e8c0dac2c7010fc5e57
Author: Pierre Pronchery <khorben@defora.org>
Date:   Sat May 19 00:01:09 2018 +0200

    Khorben/479 assert brk (#890)
    
    * Remove assertion on brk()
    
    Manticore assumed that new calls to brk(2) were always increasing the
    size of the data segment. This is not always true, since programs may
    decide to reduce it as well.
    
    Tested with a static Linux/i386 program on macOS/amd64.
    
    * Minor optimization
    
    Only compute perms if actually needed.
    
    * Avoid creating memory mappings with a negative size
    
    This should completely fix #479 this time.
    
    * Update sys_brk() implementation
    
    * Add regression tests for brk
    
    * Added brk test binary src

commit 68c471687223397d5f352319c87a28f781e3005d
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri May 18 18:14:34 2018 -0300

    Remove solidity in minimal.py example (#895)
    
    * Remove all needs for solidity in minimal.py example
    
    * Separate evm only minimal example

commit f4c4c9ae277688ec386083a6a817b2f7e7e9f654
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri May 18 18:19:11 2018 +0200

    Add LD_LIBRARY_PATH type feature (#878)
    
    * Add LD_LIBRARY_PATH type feature
    
    Use of environment variable MANTICORE_LD_PATH
    instead of LD_LIBRARY_PATH which is protected on MacOS
    
    Fixes #93
    
    * Comments taken into account
    
    Commit to be squashed afterwards
    
    * Codeclimate fix
    
    * Support LD_LIBRARY_PATH in the loader

commit 71c90c38c1dd0bedf97a126dedeaf0a7e4f606b5
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri May 18 17:40:15 2018 +0200

    Add dedicated files for ARGV/ENVP in report (#863)
    
    * Add dedicated files for ARGV/ENVP in report
    
    Fixes #169
    
    * Add unit test for argv/env reports
    
    * Code review taken into account

commit cb1f244d3197dcad3e2d551edee59f6251fd137b
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri May 18 11:36:05 2018 -0400

    Fix Linux initialization (#894)
    
    * Move _open() outside of assert
    
    * Make a few tests aware of assert-less exec
    
    * Use the __debug__ builtin instead of sys flags

commit efbcd084fd1c924c8b0ca4b57ea7deaeb3592add
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed May 16 11:39:23 2018 -0300

    Rollback to old mini assembler only example (#889)
    
    * Rollback to old mini assembler only example
    
    * Rollback reordering and remove comment
    
    * Ah no. We need to keep the states in the lists until the end
    
    * Update ethereum.py
    
    * Use calculate coverage funciton

commit 79d90ae6a6d03377b185cf16678556d3df9cbae5
Author: Daniel James <dwhjames@gmail.com>
Date:   Tue May 15 12:29:43 2018 -0400

    Typo in ManticoreEVM#last_return (#886)
    
    Encountered the following trace:
    
    ```
    Traceback (most recent call last):
      …, in <module>
        m.last_return()
      File "…/manticore/ethereum.py", line 906, in last_return
        return state.platform.last_return
    AttributeError: 'EVMWorld' object has no attribute 'last_return'
    ```
    
    It appears this bug was introduced in commit ed29a22f
    
    The same bug was also lurking in `EVMWorld#run`
    https://github.com/trailofbits/manticore/pull/886#issuecomment-386626556

commit 6747c437b19e162f639259b4d12867d09bbf2ddf
Author: Pierre Pronchery <khorben@defora.org>
Date:   Fri May 11 17:52:07 2018 +0200

    Partially implement fork(2) (#892)
    
    * Partially implement fork(2)
    
    Really this return ENOSYS (not implemented), which allows sub-processes to
    detect the condition and continue to run (or crash on their own if they did not
    expect fork() to fail).
    
    * Move sys_fork to correct class; add a basic docstring

commit f6d0cd4e8e9c386ed48e1bbb30af88f801b8ae3a
Author: Pierre Pronchery <khorben@defora.org>
Date:   Fri May 11 17:43:27 2018 +0200

    Partially implement chroot(2) (#891)
    
    * Partially implement chroot(2)
    
    Really this return EPERM (permission denied), which seems to be absolutely fine
    since a non-privileged user is currently assumed. This is what would normally
    be returned in this scenario.
    
    * update chroot implementation

commit 44ef97ec6c804ae641738366e077c44aa38cf109
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Tue May 8 20:15:03 2018 +0200

    Loads shared ELF to analyze a function (#861)
    
    * Loads shared ELF to analyze a function
    
    See #69
    
    * Bring in recent changes to concolic.py
    
    * Loads shared ELF to analyze a function
    
    * Fix the 'linux' class method prototype

commit b9a515ccfed8b68a2ff7bcaaa8fe07f3ec655433
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Mon May 7 10:23:40 2018 -0300

    Added optional message parameter in ConcretizeMemory (#885)
    
    * Added optional message parameter in ConcretizeMemory
    
    In some files (e.g. manticore/core/cpu/abstractcpu.py), ConcretizeMemory is invoked with a message but it is interpreted as the "policy" value now, causing a crash. This commit should fix that issue.
    
    * Small code refactoring to address code review

commit 109180fc155fd5a4c06473b89f52e726ca7d6d40
Merge: 9c258bd 23a1412
Author: feeb <feeeb@protonmail.com>
Date:   Fri May 4 16:03:35 2018 -0400

    Merge pull request #888 from trailofbits/dev-019
    
    Manticore 0.1.9

commit 23a1412e15dccafb74cc7db913773bf7a9b5552d
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Fri May 4 14:27:41 2018 -0400

    Finish changelog

commit 66640c8ed881dd8cd3724ae654a3f90c2604670f
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Fri May 4 14:17:47 2018 -0400

    Initial changelog

commit 5c9e63555eba27288d6b32592c42a6cdba7eed53
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Fri May 4 14:07:20 2018 -0400

    Bump version

commit 9c258bd68d386fb1c7c19ae589ede27e8da0d3b1
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu May 3 18:52:29 2018 -0400

    Update concolic.py (#887)
    
    * Update concolic.py
    
    * update what evt we subscribe to

commit 9307475af5f52d641e97b8208ac53ea4812e5940
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Tue Apr 24 12:36:06 2018 -0400

    Raises exception for Solidity compiler not installed. Issue #867 (#877)

commit fb3c01fe1ca78453920c3c2e4d245de4e0ebd40d
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Tue Apr 24 12:32:18 2018 +0200

    Sign extends x86 AND operand (capstone bug) (#852)
    
    * Sign extends x86 AND operand (capstone bug)
    
    Fixes #560
    
    * Regression test for X86 AND with sign extension
    
    For issue #560

commit 4a98110f4a74916305231a0a2fabc076e6218462
Author: Daniel James <dwhjames@gmail.com>
Date:   Fri Apr 20 11:05:04 2018 -0400

    Support Solidity compilation of a file handle (#873)
    
    This preserves the current behavior of using a string value as Solidity
    source code, but now also supports instances of the `file` type, and
    will use the `name` property of the file object to pass to the
    subprocess invocation of solc.
    
    This implementation also now ensures resource cleanup for the stdout and
    stderr pipe handles.
    
    Make use of compiling via file handles in multi_tx_analysis
    
    This will enable import statements in Solidity code to work for the
    Manticore CLI out of the box
    
    Note, Manticore still wants the source code, so if we compiled using a file
    handle, rather than a source string, we need to read in the source
    
    fixes #705

commit 92cfab3a429d1ed32f5ac4448c53518db467b0ef
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Apr 17 18:58:58 2018 -0300

    Fix check of solc metadata tail (#848)
    
    * Fix check of solc metasata tail
    
    * Remove debug print
    
    * fix metadat tail removal
    
    * Yet another loose end - fixed
    
    * Better version parsing and review fixes
    
    * Remove debug print
    
    * pep8

commit 71bf5d4f1118318341ec0900c24f1b22aa617a74
Author: Pierre Pronchery <khorben@defora.org>
Date:   Tue Apr 17 23:25:40 2018 +0200

    Remove assertion on brk() (#860)
    
    Manticore assumed that new calls to brk(2) were always increasing the
    size of the data segment. This is not always true, since programs may
    decide to reduce it as well.
    
    Tested with a static Linux/i386 program on macOS/amd64.
    
    (https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/mm/mmap.c?h=v4.17-rc1#n226)

commit 2814723cc841e5494d3e3d35f940630071ad4a5d
Author: Daniel James <dwhjames@gmail.com>
Date:   Mon Apr 16 20:44:29 2018 -0400

    Support ABI parsing of specs that use function types (#874)
    
    See http://solidity.readthedocs.io/en/v0.4.21/types.html#function-types
    This is a special case of `bytes24`, 24 bytes are right zero padded in
    a 32 byte word.

commit bfffa78b5fdece3a18b87d205e130701efc9d243
Author: Daniel James <dwhjames@gmail.com>
Date:   Fri Apr 13 16:32:17 2018 -0400

    Fix Issue #869 (#872)
    
    * Add testcase for empty types bug
    
    * Fix Issue 869
    
    Bug introduced in
    https://github.com/trailofbits/manticore/commit/0fc4bba9ad8ef61f9e1f23bc6d0a88b7a05aa385#diff-6cf4568b5e8712514d226faa04e417fbR450
    
    - Move empty string up to the beginning of the if-else chain.
    - Correct test for bool type case
    
    fixes #869

commit aa792588fe3a883276ea30ba543ec8822cf44db0
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Tue Apr 10 10:34:38 2018 -0300

    Added --txnocoverage option to manticore cli (#849)
    
    * added txnocoverage option to manticore cli
    
    * improved code readability

commit d5a692fc59fad1b24ee021f4daa3561068cae0c5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 9 10:01:12 2018 -0600

    Rm the slow solver code (#859)

commit 0fc4bba9ad8ef61f9e1f23bc6d0a88b7a05aa385
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Thu Apr 5 17:43:15 2018 -0300

    Added all the uint types supported by Solidity (#811)
    
    * added all the uint types supported by solidity
    
    * fixed some incorrect indentation
    
    * Added missing space around "+"
    
    * added some proper exceptions and included all the integer parameter types
    
    * improved exception handling
    
    * missing check
    
    * added preliminary version of unit test for ABI
    
    * x
    
    * half finished
    
    * tes
    
    * fixes
    
    * docstr
    
    * Raise exception only once
    
    * cc
    
    * Fix merge bug
    
    * fix merge bug in tests
    
    * Fix bugs introduced in merge

commit 6616b9e05c3669c143be0af65234a89187c1c0fc
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 5 13:31:16 2018 -0600

    Ethereum ABI and misc fixes (#855)
    
    * Port most of the less invasive/controversial changes from dev-evm-dynamicarguments
    
    * Port section of fixes from ethereum.py
    
    * Port tests unrelated to concretizing dyn args
    
    * Add remaining changes from evm.py
    
    * clean, fmt, code climate
    
    * rm unnecessary setup
    
    * disable??
    
    * fmt
    
    * remove all the returns
    
    * lol cc
    
    * Rm unused code
    
    * port to .format
    
    * don't use map (for py2/3 compat)
    
    * simplify slicing
    
    * Rm dyn arg code, since it doesn't really even work
    
    and will be included when dev-evm-dynamicarguments is totally resolved
    
    * add address/get_uint test
    
    * Revert "Rm dyn arg code, since it doesn't really even work"
    
    69188da4caf1ff74288b6398e8140f627dc495c4

commit af779d8baad19fa91f1007366bf877403f59f9bc
Author: cclauss <cclauss@bluewin.ch>
Date:   Tue Apr 3 22:47:47 2018 +0200

    Do not forget self (again) (#854)

commit bda9c091b58acf3ea19de876a75cd0e49e1ec5ea
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 30 18:26:26 2018 -0400

    Manticore 0.1.8 (#851)
    
    (thanks for 1k)
    
    * Bump version numbers
    
    * initial changelog update
    
    * Add changelog content
    
    * add contribs

commit 2f382a9d1c8bdefd667b233ce4d1807682bc8804
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Fri Mar 30 10:44:34 2018 -0400

    Added KeyError Exception for offsets not in srcmap. Issue #832 (#839)

commit 03af65e55f7db8b418f79ab250b3a10a7fee668c
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Thu Mar 22 09:40:51 2018 -0300

    A more complete example to initialize and explore a smart contract with manticore (#827)
    
    * A more complete example to initialize and explore a smart contract with manticore
    
    * Removed outdated comments

commit 9c19014e4b7f16a62b913016fb9572504874aa10
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Thu Mar 22 02:34:19 2018 +0700

    Fix duplicated armv7 test name (#833)
    
    * Fix duplicate armv7rf test name
    
    * Small refactor of armv7rf
    
    * Proper test classes names

commit d1051f6c8406e2a25467c8dc20b8b86adfa045d8
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 20 14:30:09 2018 -0300

    Push 0 on internal revert (#830)

commit 2eb002593e894d97b5fc9f214d84d9b1d56e3d9a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 19 14:22:08 2018 -0400

    evm: add per state trace file (#817)
    
    * Add trace file
    
    * Make ethersplay compatible trace format
    
    * Small cleanup
    
    * Record separate init and rt traces, emit separate trace files
    
    * add todo
    
    * More pythonic
    
    * Add test for end insn in trace file
    
    * Fix test
    
    * Move trace accumulation into will_evm_execute callback
    
    here, we can easily and correctly check the .last_exception field
    to see if we were in init code or rt code. from the did_evm_execute hook
    the last instruction (end instruction) had a different .last_exception
    so this was causing the last instruction to not be recorded in the trace.

commit 8acd2293b833ced86d6b20849d1acee591a2b3a7
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Mon Mar 19 15:08:22 2018 -0300

    Added --txaccount parameter to control the caller of the symbolic exploration of smart contracts (#819)
    
    * added --txaccount parameter to control the caller of the symbolic exploration of smart contracts
    
    * Use of the new EthereumError exception

commit e97e631d8e9656ce514d04065d1182f3e686219e
Author: Matthew Roll <mproll@protonmail.com>
Date:   Mon Mar 19 09:24:04 2018 -0400

    port ethereum tests to individual files (issue #809) (#820)
    
    * Add contract keyword arg to IntegrationTest._simple_cli_run
    
    * Remove inline tests from test_eth
    
    * Refactor IntegrationTest.test_eth_regressions to support multi-contract files

commit fb79127bc2c6dafec0c1eea909eedf053a032ffe
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 16 17:48:36 2018 -0400

    Graceful exit when no states to run (#815)
    
    * rm unnecessary return, change assert to graceful handle
    
    * Add regression test
    
    * Add regression test
    
    * Correct logic
    
    * Rm unnecessary check
    
    This branch is unnecessary, if this condition is true, then ultimately
    the executor will do nothing, and we'll simply return anyway.
    
    * Raise NoAliveStates if no alive states to execute
    
    * docstr update
    
    * Update mult_tx_analysis to handle NoAliveStates
    
    * Fancy
    
    * Update test
    
    * Codeclimate fmt
    
    * fmt
    
    * better readability
    
    * add docstr

commit a21c8b6012ec6d657a45f7459635c979bdb5de8e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 16 13:32:32 2018 -0400

    Improve evm docs (#816)
    
    * Add docstr for finalize
    
    * prune unnecessary stuff from docs
    
    * Add trace file
    
    * Revert "Add trace file"
    
    4687810e15c2bc6cc3e729c32bdad2f617679d77

commit eaa0e524b44cbdb4a7bcf3ba6808bbd86c2a16c3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 15 16:41:29 2018 -0400

    Fix off by 1 error in codecopy (#812)
    
    * Fix off by 1 in codecopy
    
    * Add regression test
    
    * Improve formatting

commit fb3938bb3ea70e67ebf7daf64adbe92fd5bcd5ed
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Mar 15 16:31:18 2018 -0400

    Raises exception for contract with a function without code. Issue #789 (#797)

commit cf789a429198f058df8ad2ebc95a1fe64ce3f9b3
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Wed Mar 14 16:45:12 2018 -0400

    Introduce concretized_args decorator (#803)
    
    * Introduce concretized_args decorator
    
    * Add docs
    
    * Cleanup
    
    * Add basic expression counter
    
    * Please codeclimate
    
    * pep8
    
    * update docstring
    
    * Use default concretization policy when not provided
    
    * Add concretizer tests

commit 61babdbe21b99c93c74d7ccecbf520108071761a
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Mon Mar 12 15:27:18 2018 -0400

    Fix evm RETURN implementation (#808)
    
    * Fix write_buffer issue (#807)
    
    * Add test for write_buffer fix
    
    * Use Operators.ORD instead of ord (even though were assuming concrete vals)
    
    * Cleanup

commit bb4a7966a82d1145f010672c78eca86a1a42f32d
Author: Dan Guido <dan@trailofbits.com>
Date:   Mon Mar 12 14:40:06 2018 -0400

    Add codeclimate, tox, and pycodestyle configs (#772)
    
    * pep8
    
    autopep8 -r -i -a -a manticore
    
    * tox for testing py3k
    
    * minimal codeclimate
    
    * Add correct Code Climate ID
    
    * unignore max line endings since it's set to 160
    
    * more badges
    
    * turn off pep8 in code climate
    
    * need to remove for codeclimate to work right
    
    * re-enable most checks with looser thresholds
    
    * remove unused imports
    
    autoflake --in-place -r manticore
    
    * revert the autoflakes changes
    
    * set tox to only py27 for now
    
    * cache is hardcoded to python 2.7.13
    
    * Comment cleanup
    
    * Try autoflake again
    
    * Add dev environment dependency management to tox.ini
    
    * Remove count/statistics options from tox.ini
    
    Per Dan, these crash pep8 analysis on codeclimate at present
    
    * Revert setstate initialization
    
    * Re-introduce explicit compare for flags
    
    * add back structural comment
    
    * rm unneeeded ` as e`
    
    * bump py tox

commit fceb48ce0cff29b5af31f0784c031574ff9e23e5
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Mon Mar 12 12:19:38 2018 -0400

    Update Create (evm exception) arguments (#805)
    
    * Update Create arguments
    
    * Add integration test
    
    * Dial back the procs

commit fbf0823cb61aa7f3b417839a4e2e7e3f58352f10
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Wed Mar 7 14:57:59 2018 -0300

    Very quick fix to avoid STOP instructions to return random values (#792)

commit f4118f4f0f0db9ebcb97c08b103b04224bc795ee
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Tue Mar 6 18:35:19 2018 -0300

    Added a function to generate evm testcases without using callbacks (#791)
    
    * Added a function to generate evm testcases without using callbacks
    
    Possible fix for #782
    
    * The 'message' parameter in generate_testcase should be optional
    
    Requested by @montyly

commit fe2538f6bc7aa82656771aa586fb258d2680c592
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Tue Mar 6 06:42:48 2018 +0700

    Add docstring for ARM's operand.is_shifted (#788)
    
    So that people don't have to google that by themselves! lolo

commit 328b62350a87932dc6469356c1926469e1630d05
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Sat Mar 3 03:55:13 2018 +0700

    Change assertion->exception and add msg when target file is not present (#778)

commit 7349a0b13d74958e67b45152eb09e302146a22e9
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Fri Mar 2 21:52:56 2018 +0100

    Fix out-of-bound index in EVMWorld._process_pending_transaction (#786)

commit 03ecb3fd9f8ecaed21f2daae7414831585d5f51e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 1 18:48:10 2018 -0500

    Fix cli --data parameter (#781)
    
    * Actually use args.data
    
    * Update decree

commit 17e90986b896ff7c66a20aa2e5d6bac286503596
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Mar 1 18:27:52 2018 -0500

    Used a namedtuple for pending transaction. Issue #689 (#775)
    
    * Used a namedtuple for pending transaction. Issue #689
    
    * Changed field names in namedtuple. Issue #689

commit 9b75a1f0fe247fa0317a46ff91270c5e34eb1054
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Fri Mar 2 06:24:27 2018 +0700

    Unicorn emulator: get uc_arch & uc_mode values just once (#779)

commit 20cb97f7aec84707436cc61115ef33107dbd32e4
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Fri Mar 2 01:40:51 2018 +0700

    Fix Cpu.execute's improper reporting of `Unimplemented instruction` (#777)
    
    When particular instruction's implementation raised an `AttributeError` it was catched by `Cpu.execute` and we just saw "oh this instruction is not implemented" while it was, but its implementation was broken.

commit 48f88be7590c7b15ff27cfd8c2da883d71e98190
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Feb 28 20:11:54 2018 -0300

    Dev fix solver getvalue (#739)
    
    * Increment default gas
    
    * Do not solve concrete values
    
    * Do not solve concrete values
    
    * Do not solve concrete values
    
    * Remove comment
    
    * Make solver get_value return concrete values untouched - wip
    
    * Handle solver.get_value integers
    
    * fix reporting
    
    * Make solver.get_value return the expression untouched when concrete
    
    * Remove hack; we know `c` can't be an int type
    
    * Revert "Remove hack; we know `c` can't be an int type"
    
    0849094525d7e4cea0295d4be13552dea9c8ad72
    
    * Fix cli --data argument
    
    Previously, it was being ignored :/
    
    * Fix linux output generation
    
    solve.get_value returns back an int, if it concretized the sym var
    
    * Revert "Fix cli --data argument"
    
    2ee740acb20a9d393e1a7984d7ec0e0fe64dbfaf

commit 39370ccf3c9f74c3bb67eb7413b41993377a0948
Author: Pierre Pronchery <khorben@defora.org>
Date:   Tue Feb 27 18:33:25 2018 +0100

    Let the Python interpreter be specified externally (#774)

commit 461da57ea3a9b30c20b52d7bcded863d680f3fcd
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Feb 26 21:09:34 2018 -0300

    Array value configurable. 8,16,32..256 bits (not prefixed to 8) (#732)
    
    * Array value configurable. 8,16,32..256 bits (not prefixed to 8)
    
    * Test Array256->256
    
    * Remove old 8 bit assumptions
    
    * Add arrayProxy copy constructors and remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * Better ArrayProxy special case handling
    
    * Fix tests
    
    * Review fixes
    
    * review fix
    
    * fix gas variable
    
    * Review fixes
    
    * Fix vm.gas access

commit a3ee31e6e69d974bc3a4cd39760c70c666e19867
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Feb 23 18:31:31 2018 -0500

    Manticore 0.1.7 Release (#764)

commit 394401e3f45fe23ba32af7f49b1332f35a067933
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Feb 23 18:07:49 2018 -0500

    Fix ARMv7's ADD (#769)
    
    * Fix armv7's ADD

commit b9aa4837450aaf278e44b6bcccababe7c45fe1bb
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 23 12:42:15 2018 -0800

    evm: Fix MUL overflow false positive (#767)
    
    * initial
    
    * Add test for mul checker
    
    * clean
    
    * Rename and clean
    
    * Rm testing
    
    * Better comment, and clean
    
    * Split tests, add more tests
    
    * Clean up stuff, remove unnecessary masking
    
    * fmt
    
    * Add back constrain to make it match the originall buggy situation
    
    * Clean up surrounding code, make it unit testable
    
    * Correct name
    
    * Use individual arguments for helpers

commit 3f1c51fa913adfa0c6bece264fa2d2fdd39ea1f5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 23 08:13:55 2018 -0800

    Improve solc error output (#765)
    
    * Improve err handling when there's a solc error, print the error
    
    * Fix bug, don't merge stdout/err
    
    * Simplify
    
    * Add more space

commit d0f69c755cc0bd6f53b93a9487d4dc9b0579b400
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Feb 22 13:04:01 2018 -0800

    Add ethereum regression tests (#763)
    
    * Clean some unused variables
    
    * Add basic infrastructure
    
    * Add real eth regression tests
    
    * Use check_call
    
    * Suppress stdout
    
    * Make 705 work
    
    * Less error prone way of testing

commit 8e47a6ebe9be706f8cc97f8fec902588b5fd7c2f
Author: Jean Jordaan <jean.jordaan@gmail.com>
Date:   Thu Feb 22 20:17:49 2018 +0700

    Drive-by typo correction ;-) (#762)

commit ebe0baa178c2fce672d30096d62ee39dfa4c8456
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 20 12:10:29 2018 -0800

    Emit events for exception raising evm instructions (#722)
    
    * Create EVMInstructionException, properly emit did_evm_execute_instruction for insns that trap to the platform
    
    * Emit event before execution of platform handlers. This is because many of the
    platform handles actually destroy the cpu (platform.current) via pop_vm.
    Clients that receive the event may want to access the cpu though, for example
    to see the current PC. so we emit the event right before, so they can do this
    
    * simplify
    
    * move closure below result decl
    
    * Add comment to explain
    
    * Fix typo
    
    * Revert back to pythonic style
    
    It was this way to test emitting the did execute signal here, rather
    than in the evm cpu
    
    * Remove inline function definition from critical path
    
    * Add test for events for exception instructions

commit 9f0d25c5d93d9af0a16af8619d159f6f677e59ae
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 20 04:57:07 2018 -0800

    Fix evm state handling regression (#741)
    
    * Revert breaking change
    
    * Add assertion to verify states being queued

commit 105a7d3aee8d324c778467278332e6a2c2a3a305
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Tue Feb 20 08:48:26 2018 +0700

    Speedup x86 execution by caching AMD64RegFile.all_registers (#755)
    
    * Cache `all_registers` for AMD64RegFile

commit 680fc8f17e267394e6770e6b0d09a82afdddd346
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Sat Feb 17 17:51:58 2018 +0100

    Armv7 code refactor (#749)
    
    * Armv7 code refactor
    
    Removes dead imports, makes code style more consistent and a bit more compliant with pep8 (yeah i seems we don't enforce any particular style, but this seems to be a reasonable default for me).
    
    * Review fix: add comment for armv7 _shift

commit c6f457d72e1164c4c8c6d0256fe9b8b765d2cb24
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Thu Feb 15 14:47:36 2018 -0600

    Updates for thumb mode (#610)
    
    * WIP. issues with setting PC correctly via POP are corrected. issues with pc relative addressing in thumb mode corrected. Still a memory access error, but getting there
    
    * WIP - PC relative addressing in thumb mode now aligns the value for PC per the spec before applying offset
    
    * General thumb mode fixes:
    * ldr pc, <operand> now swaps modes and sets pc correctly
    * the bl instruction sets the lr appropriately for the current mode
    * the two operand forms of the ORR, EOR, and BIC instructions now exist
    * tests added for these updates
    
    * comment cleanup
    
    * WIP :more thumb mode instructions, a special case for the sys_brk handled, and a really ugly solution to an internal plumbing problem
    
    * First attempt at concretizing ARM mode
    
    * Handle symbolic mode for ARMv7
    
    * Clean up imports
    
    * Make comment more accurate and use instruction.size
    
    * Collapse _Shift and _Shift_thumb
    
    * Make ARM mode handling more Pythonic
    
    * Improve comment on arm shift register handling and capstone behavior

commit fca3179dd0814dfea8ab38321ba485f750b971bf
Author: Srinivas P G <spg349@nyu.edu>
Date:   Wed Feb 14 16:52:54 2018 -0500

    System calls addition - sys_getrandom and sys_openat (#640)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * getrandom system call - Initial commit
    
    * openat system call initial commit
    
    * getrandom system call fixes
    
    * openat and getrandom system call
    
    * Update sys_getrandom
    
    * Make BadFd more generic as FdError
    
    * Resolve mode inside File
    
    * Support opening directory with open(2)
    
    * Fix fd leak
    
    * add sys_openat tests

commit 843a4f399e274ba405e60184f03f19f8a977b498
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Feb 14 18:28:50 2018 -0300

    Fix finalize (#738)
    
    * fix finalize
    
    * Document the state id -1

commit 2f2de29d36cd0b59314d07eb0120ea9ddcad05d9
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Feb 14 17:13:40 2018 -0300

    Better plugin context management. (#730)
    
    * Better plugin context management. Example UseDef logging plugin for evm
    
    * Example plugin to log use-def
    
    * Better plugin name checking hints
    
    * Better plugin name checking hints2
    
    * Fix uninititalize-plugins (found via the warning)
    
    * Remove redundant variables in example
    
    * Typo
    
    * Better warning print (class name)
    
    * better safety check + context fix
    
    * better variabke naming
    
    * Update manticore.py

commit 84aca4ac1b7746607cb1d14cfd8729de2cfbec6e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 13 19:15:54 2018 -0500

    Add docs on symbolic input (#750)
    
    * Change tagline
    
    * Not sure socket support is a gotcha exactly
    
    * initial docs
    
    * Better docs
    
    * Code blocks
    
    * Links to the api docs
    
    * Improve language
    
    * Doc add_symbolic_file in public API
    
    * Rm stray init

commit f8587ff13e3e3b44d47897a9803b562a014da693
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Feb 13 20:55:52 2018 -0300

    Bump default gas budget (#740)

commit 4d84551375fc79c5cbfc0d06fcdd51cc13c521cd
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Feb 8 15:25:40 2018 -0500

    Fixed Issue #723 - changed _pop() to _pop_vm() (#745)

commit 5a38737edea4684cf4080c9dda4fe35c7caf43fc
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Feb 5 15:00:05 2018 -0300

    Fix sha3 (#703)
    
    * the fix
    
    * Add default example sha3 when unknown
    
    * Review
    
    * Remove IF statement on potentially symbolic value

commit 2f2b081aa989f12e257af53b9d412ce19735c6a7
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Feb 2 15:37:24 2018 -0300

    Added multiprocessing support to generate testcases in finalize (#697)
    
    * Added multiprocessing support to generate testcase in finalize
    
    * Improve the code using @feliam suggestions
    
    * Fixed multiprocessing code. Now it really seems to work!™

commit 97307906c5e4d4a89d9631628e6d58f1a19b7e82
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 2 13:23:04 2018 -0500

    Fix incorrect number of transaction in certain states (#724)
    
    * privatize Executor.put, use in evm
    
    * better typeerror
    
    * Simplify execute(), directly raise exception in _process...

commit 9f7b87d0b8e047d26f24ed9e5ddddb0068069ae9
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Wed Jan 31 11:47:46 2018 -0500

    Use the 'force' flag for bss zeroing (#719)
    
    * Clean up bss trailer zeroing

commit a1f809732d0a1bfedb0bd09c1115bb1857635385
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jan 30 17:31:28 2018 -0300

    Quick evm header fix (#679)
    
    * Quick evm header fix
    
    * Fix BLOKKHASH

commit c0068431c9eb754678aa6a7ef7bb70ac9523a34d
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Tue Jan 30 12:17:27 2018 -0500

    Introduce a 'force' parameter to memory access functions (#632)
    
    * whitespace cleanup
    
    * Remove access check from COWMap.__setitem__/__getitem__
    
     * Access checks happen via read/write, so these checks are unecessary.
    
    * Add force parameter to read/write functions
    
    * Introduce  to AbstractCpu's accessors
    
    * Add mem force tests
    
    * Apply force param to symbolic operations
    
    * Add symbolic force write tests
    
    * Clean up test
    
    * Fix symbolic write behavior; add tests

commit faf1d16b99e9a5ecf842b0dce07a2c0873c66ea4
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jan 29 20:28:31 2018 -0300

    Allow importing solidity files from current folder (#717)

commit 60d2b61fb36ddb1c0079647a3ceebfb6f9d0c84f
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu Jan 18 15:50:13 2018 -0500

    Run linux examples in Travis (#668)
    
    * Update makefile; add a list target for testing
    
    * simplify nostdlib example
    
    * Make sendmail example return success
    
    * Add tests to run all examples
    
    * Add some targets to exclude
    
    * Run example scripts; temporarily add a workspace accsesor to mcore
    
    * Optionally read end of main from argv
    
    * Make concolic test more robust
    
    * Clean up Makefile
    
    * Be better with phony targets
    
    * Add run_simple and state_control tests
    
    * verbosity++
    
    * Make sure we fail when we intend to
    
    * Simplify travis_test.sh
    
    * Remove multi_arch_sym

commit 7907d0179dbc0a2a0c8161d9bf6c746d499b50cd
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Wed Jan 17 16:11:13 2018 -0300

    Added support to analyze solidity source code with multiple contracts using the --contract command line option (#712)

commit aeb3b99f7dcc90cbf4fa6f76d62087dc294a357a
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jan 16 13:53:01 2018 -0300

    the fix (#702)

commit 000ef094f9694e1f07a996146d8364fb81f9365c
Author: Alexander Holman MBCS AMIAP <alexanderholman@users.noreply.github.com>
Date:   Tue Jan 16 16:26:07 2018 +0000

    Update state.py (#709)
    
    replace `\0` with `NULL` as per issue #699

commit 03f92a7f0ba105666ccc7f982854e31b174ffcd5
Author: Alexander Holman MBCS AMIAP <alexanderholman@users.noreply.github.com>
Date:   Tue Jan 16 16:25:16 2018 +0000

    Update manticore.py (#710)
    
    Removed first of twice declared function `enqueue` as per #706

commit 465c926a2e39d5daf1405711dac61b6ddd0a2527
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jan 8 20:34:27 2018 -0300

    Fix metadata setting race (#675)
    
    * Set the sol metadata before building the contract account
    
    * EVM account lazy hashes
    
    * new_address now public
    
    * Micro-optimization more readable
    
    * Arithmetanic

commit 7b2607b0a6c1ebf2b3d56a34ecbea840d73b56d5
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Mon Jan 8 14:09:27 2018 -0300

    Improved readability of .tx files using repr to print function call arguments (#694)

commit 98712cf4264dd724b0cc5b5d9acc9a3eebbf2015
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jan 5 18:04:35 2018 -0300

    Adds support for unmarshaling bytes32 type (#680)
    
    * Adds support for unmarshaling bytes32 type
    
    * Review fixes

commit 976f31446d5719895735db599db2e36d83cab61c
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Jan 5 16:06:00 2018 -0300

    Add missing DivideByZeroError import and replaced DivideError by DivideByZeroError (#692)

commit 743d479cbf10f40e3079d56e3f26b2d1f4e34893
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Jan 5 12:39:25 2018 -0300

    Added missing **kwargs to ManticoreEVM constructor (#686)

commit 3b796091c257248d671f86aa8abc661613f50834
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Dec 29 12:49:50 2017 -0300

    NotImplemented(x) -> NotImplementedError(x) (#677)

commit b6753a34ae4e6c43f6c5a51b573fa8e791ab4fd5
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Dec 29 12:48:07 2017 -0300

    Adds support for unmarshaling uint8 type (#681)

commit 4c0f4bc6cf7509eb0f3399327fb494188b137671
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 19:11:25 2017 -0500

    Trick rtd into thinking we don't need z3 (#671)

commit a9be273c2e81dc661e05b5fb320a6ecd45ac7c39
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:44:09 2017 -0500

    Update README.md (#670)

commit 8a588c70f4a4ddc12e98cbbff0190988723961bc
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:30:16 2017 -0500

    Manticore 0.1.6 (#662)
    
    * Update CHANGELOG.md
    
    * Add external contributors
    
    * add categories
    
    * Update CHANGELOG.md
    
    * initial rough notes from commit log
    
    * Update CHANGELOG.md
    
    * Update CHANGELOG.md
    
    * Bump version numbers
    
    * Update CHANGELOG.md
    
    * readme 2.0
    
    * update tagline

commit a7fb995aa184d6695e7b315fe5cf94d084557d04
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:27:40 2017 -0500

    Update __main__.py (#669)

commit 6499c0e281badb8fbe55cc8add4be98d4a1097e1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:11:14 2017 -0500

    Add --tx flag to control symbolic tx (#667)
    
    * Add --tx argument that must be a positive int
    
    * Add simple tx_count mode
    
    * Help updates
    
    * Add None default arg
    
    * Implement as upper bound, rather than absolute tx num
    
    * rename to positive

commit 2e578acf9d11a71b21f8ec05d18a402ea6b9afee
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Dec 22 16:24:56 2017 -0500

    Fix Unicorn exception handling; add a symbolic wrapper for exit(2) (#616)
    
    * Fix unicorn tests and exception handling; add a sym wrapper for sys_exit
    
    * Add debug output when solving for exit() arg
    
    * Update how sys_exit(expr) is handled

commit 8413f7e9477dd66c59fa6e1433f68d09eda2ce6b
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 16:24:21 2017 -0500

    Rm unused evm workspace function (#666)
    
    * Rm unused function
    
    Since this func was added, _generate_testcase_callback was overrided
    in ManticoreEVM totally bypassing this function, which is now unused
    
    * add comment

commit 7875aaf5fd6c4f8fecbacef5bf58b4794733454f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 14:05:37 2017 -0500

    Rename manticore.seth to manticore.ethereum (#665)
    
    * Rename file
    
    * Fixup refs
    
    * update logging
    
    * Update docs
    
    * Update docstr
    
    * Clean docs

commit c200aeefec5c307cb5ab5c65b1cba18b24897d4e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 13:14:09 2017 -0500

    output the actual exit status when finalizing evm states (#664)
    
    * Instead of 'Still Running' use the actual state exit status
    
    * Throw states are terminated now
    
    * More accurate phrasing, since 'throw' and 'not enough funds' are here too

commit 7aa85f13bbe5f0b340f7177a77b39c87ebcc1f08
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 12:23:17 2017 -0500

    Clean examples/evm (#661)
    
    * Clean examples/evm, add a new one
    
    integer_overflow.py -> simple_int_overflow.sol
    simple_functions.py -> simple_multi_func.sol
    simple_transaction.py -> simple_value_check.sol
    
    * Add umd example

commit 6896c227ef1d015ae15b67755efd3942d1c6853c
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu Dec 21 17:02:44 2017 -0500

    Initial implementation of concolic algorithm (#653)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Initial concrete trace follower
    
    * Add extended (json) trace support
    
    * More stubs for condition gather
    
    * Update trace saving to new format
    
    * Produce trace regardless of contents
    
    * Record register deltas in trace
    
    * Move initialization to _start_run so we can call run() multiple times
    
    * Re-fix multiple workspace bug
    
    * Fix it correctly
    
    * Add extended trace and accessors
    
    * make sure did_execute_instruction is always published
    
    * Produce a consistent version
    
    * move extended tracing to separate class
    
    * Reorg of extended tracing plugins
    
    * Add concolic tracing script
    
    * Clean up old hooks
    
    * Sync memory as well; cleanups
    
    * Revert binary tests
    
    * simplify concolic follower
    
    * Move trace follower to plugin.py
    
    * Simplify follower
    
    * Add skip ranges to Follower
    
    * Update concolic.py
    
    * Remove redundant state init
    
    * Clean up driver script
    
    * Update header line
    
    * Move trace follower
    
    * Move Follower to follow_trace.py
    
    * rm unused import
    
    * Remove unnecessary property
    
    * rm ConcreteTraceFollower
    
    * Revert start_run behavior
    
    * Initial implementation of concolic algorithm (#574)
    
    * Fix coverage calculation vs. metadata (#529)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * Various bug fixes. (#530)
    
    * Fixes #503
    
    * Fixes #515
    
    * Fixes 272. Concretize data written to a fd.
    
    * Revert debug hack and fix overly broad exception
    
    * Update did/will_exec_instr semantics
    
    * Clean up imports
    
    * Update logging and improve sys_open return
    
    * Update variable names+doc for consistency
    
    * Remove win32 support (#535)
    
    * Remove Windows support files
    * Remove Windows test files
    
    * Localize log formatting changes (#547)
    
    * Don't add custom format string to root logger
    
    * Fix handler propagation
    
    * Move inline function definitions out of the AbstractCPU's execute method (#538)
    
    * This change moves from inline function definitions out of the critical path of AbstractCpu's execute method.
    
    * Raise a mcore exception if we fail at emulation
    
    * Fix all integral type checks that forget long (#555)
    
    * [fix] Issue #550: generates extra workspace folder (#557)
    
    * [fix] Issue #550: generates extra workspace folder
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Slight workspace and store refactor
    
    * Handle file.tell() error, which will happen for special files (/dev/tty) (#559)
    
    * Fix SLOAD invalid memory access (#562)
    
    Check global_storage includes an entry at address before trying to load
    storage.
    
    * New API for EVM analysis (#551)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Add PCMPXSTRX Instructions (#507)
    
    * Add PCMPXSTRX Instructions
    
    * bug fixes
    
    * unittest related fixes
    
    * Full test of pcmpxstrx
    
    * Move tests
    
    * Fix typo per issue #552 - s/arm64/amd64/ (#561)
    
    * Added missing syscalls in decree syscall trace (#545)
    
    * added missing syscalls in decree syscall trace
    
    * added missing parameter in callback of BranchLimited policy
    
    * progress
    
    * can flip constraint set
    
    * hack around double decl issue
    
    * can gen input
    
    * what is this, a coding interview?
    
    * did it?
    
    * clean
    
    * finish
    
    * pretty log messages
    
    * comment, clean
    
    * more cleaning
    
    * cmt
    
    * Only really fork when there's multiple solutions (#569)
    
    * Update comment and path
    
    * Add UMD simple assert example (#573)
    
    * Manticore prints linux ret code as uint instead of int (#578)
    
    * Fixing raise issue #435
    
    * syncing git
    
    * Fix Bug #570
    
    * syncing
    
    * removed all binaries
    
    * missed one file
    
    * Updates travis cache to python 2.7.13 (#576)
    
    * Updating README with solc binary requirements (#575)
    
    * Updating README with solc binary requirements
    
    * Update README.md
    
    * Assert valid operand length (#558)
    
    * Assert valid bytecode and operand length
    
    EVM bytecode comes in 32-byte chunks, and contracts require at least one
    segment to be created. An example, originally written by @ggrieco-tob in issue #546, is included.
    Unsure what expected behavior should be, but initial state has a problem when a contract is
    created with a single byte.
    
    Also added some exception handling in `parse_operand()` to catch invalid
    instructions, e.g. a PUSH1 instruction followed by no bytes.
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Fix SLOAD invalid memory access
    
    Simple check to ensure address storage is in global_storage before
    attempting to load data.
    
    * Remove invalid assertions
    
    * Fix for issue 556 and 591 (#590)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Fix Issue: 597 - Remove unused policy argument in function State.solve_n (#598)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * Fixes to thumb mode instruction implementations
    
    * Thumb specific fixes to the SUB, BX, and MOV instruction implementations
    * implemented hardcoded result for gettid syscall
    
    * Trace following mode (#513)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Initial concrete trace follower
    
    * Add extended (json) trace support
    
    * More stubs for condition gather
    
    * Update trace saving to new format
    
    * Produce trace regardless of contents
    
    * Record register deltas in trace
    
    * Move initialization to _start_run so we can call run() multiple times
    
    * Re-fix multiple workspace bug
    
    * Fix it correctly
    
    * Add extended trace and accessors
    
    * make sure did_execute_instruction is always published
    
    * Produce a consistent version
    
    * move extended tracing to separate class
    
    * Reorg of extended tracing plugins
    
    * Add concolic tracing script
    
    * Clean up old hooks
    
    * Sync memory as well; cleanups
    
    * Revert binary tests
    
    * simplify concolic follower
    
    * Move trace follower to plugin.py
    
    * Simplify follower
    
    * Add skip ranges to Follower
    
    * Update concolic.py
    
    * Remove redundant state init
    
    * Clean up driver script
    
    * Update header line
    
    * Move trace follower
    
    * Move Follower to follow_trace.py
    
    * rm unused import
    
    * Remove unnecessary property
    
    * rm ConcreteTraceFollower
    
    * Revert start_run behavior
    
    * Centralize system call logging (#602)
    
    * Remove per-syscall logging
    
    * Make Cpu.read_string() stop reading at first symbolic byte
    
    * Centralize syscall logging
    
    * Update helper docstring
    
    * Update arg/ret expansion
    
    * Check for issymbolic first
    
    * Tiny hex format change
    
    * Log unimplemented instructions (issue 163) (#599)
    
    * Remove double printing of exception.
    
    * Pretty print the unimplemented instruction raised by unicorn (UcError).
    
    * Raise exception after unimplemented instruction error logging.
    
    * Ensure the raised exception is actually a unicorn invalid instruction error.
    
    * Resolve conflict
    
    * EVM assembler/disassembler doc and cleanup (#563)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * EVMasm refactor
    
    * EVM api refactor (#589)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Fixed Issue #533 (#606)
    
     * Remove Platform._path
    
    * Amend pr guidelines (#615)
    
    * Fixed Issue #619 (#623)
    
    Add newlines in .trace file generation
    
    * Hide legacy cli flags from cli help (#622)
    
    * Fixed Issue #533
    
    * Removed --replay argument from cli help. Issue #617
    
    * Update help description
    
    * Remove unused --size flag
    
    * Emit .input instead of .txt files in workspace (#625)
    
    Related: #612
    
    * Update workspace.py
    
    Changed extension to .input
    
    * Update test_workspace.py
    
    * changed key value pair in test_workspace bc of change of extension to .input in workspace.py, fixed issue #618
    
    * removed unwanted directories
    
    * Update seth.py
    
    * Update seth.py
    
    Change in Documentation issue #612
    
    * EVM refactor and simple UI (#629)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Initial eth cli based on solidse.py (#633)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * initially evm cli from solidse.py
    
    * rm prints, make import work
    
    it's just `import seth` because this file runs from the perspective
    of being inside the package. `from manticore.seth` doesn't work
    because manticore.py gets priority over the manticore package, and
    there is no seth entity inside manticore.py
    
    * rm wip cli file
    
    * add excess printing as a big comment
    
    * print minimal report
    
    * require .sol only
    
    * rm solidse again
    
    * rm fluff
    
    * evm: Make 'not enough funds' states finalized states (#636)
    
    * print on every
    
    * terminate not enough fund states
    
    * Better check
    
    * revert debug change
    
    * Implement initial evm workspace, fix small bugs (#638)
    
    * print on every
    
    * save the bytecode to look at later
    
    * update tuple
    
    * wip workspace files
    
    * wip
    
    * generate tx files
    
    * rm unused event handler
    
    * clean up solving for tx.data
    
    * Revert "print on every"
    
    0caaae3658a169c9763c51544aa3c79a4e3940ca
    
    * Detectors () (#637)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review
    
    * Refactor concolic implementation (#601)
    
    * Refactor concolic.py
    
    * make arg name more descriptive
    
    * A few cleanups
    
    * Keep track of traces
    
    * Added perm() description
    
    * Rm meaningless paths variable
    
    * little comment
    
    * rm bug comment
    
    trace set is the correct solution; we need to filter out satisfiable but
    redundant paths that are generated by the dumb permuter
    
    * clean comments, debug stuff
    
    * Better EVM workspace output (#641)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review
    
    * New workspace output
    
    * Fix examples
    
    * wrog merge fix
    
    * Fix examples/new api
    
    * Fix examples/new api/output
    
    * More output
    
    * More doc
    
    * Broken examples deleted
    
    * Debug code removed
    
    * Wrong docstring
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Fix TODO
    
    * Fix for issue #642 (#643)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * fix issue 642
    
    * Fix z3 oddity: reset vs optimization (#627)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Mitigates the wrong objectives print in z3 4.4.x
    
    * Exception to SolveException
    
    * Fix compilation bug (#645)
    
    * fix for #608 using a local definition (#644)
    
    * refactor logs files content (#646)
    
    - if no logs just print nothing
    - output any printable bytes in the memlog as a convenience in case they logged strings

commit b8ea5226d732edf7b7145d07d2a178438d5b98b0
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu Dec 21 14:18:09 2017 -0500

    0.1.6-related cleanups (#659)
    
    * rename .runtime_bytecode to .bytecode
    
    * init_bytecode -> init.bytecode
    
    * clearer language
    
    * Consistent returns, arguments; added address property
    
    * docstring cleanup
    
    * Fix spelling; remove extra result capture

commit 6b794fecaa65e38d56ca7bd7e6ea2a9156842f35
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Dec 21 12:54:24 2017 -0500

    eth int overflow: tests, mul support (#656)
    
    * Move algorithm into ManticoreEVM
    
    * Rm buggy unused line
    
    * Initial eth testing setup
    
    * Check for overflow in mul also
    
    * clarifying comment
    
    * Install solc for travis
    
    * Add sudo
    
    * x
    
    * Rm travis_retry, since we rarely actually use it, and it's not available in this script for some reason
    
    * Check for specific findings
    
    * Fix test
    
    * Clean up transaction firing logic
    
    * Use less strict check, better for floating point

commit aac83ada10c4426f0a0a570255fb73421339840d
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Dec 20 13:55:17 2017 -0500

    Add error handling to solc wrapper (#651)

commit cc8ee5685e3c3c6bb2a2302926228e53de82b6a3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Dec 20 13:54:56 2017 -0500

    Improve evm cli output (#652)
    
    * Replace starting text
    
    * Use warning logger for detector warnings!
    
    * Uniformity bt linux and evm
    
    * clean up suppress hack
    
    * Prettify output
    
    * minor

commit 95967f84dfd9e9dd5b255f2f9b25aae2361dadb9
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Tue Dec 19 18:47:10 2017 +0100

    Seth: Fix uninitialized address in _generate_testcase_callback (#650)

commit 591d7b81d56dae88c441975e955fece9f489ff58
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Mon Dec 18 16:06:44 2017 -0500

    EVM logging cleanup (#647)
    
    * make init_logging() idempotent
    
    * Update logger names; add plugin logger
    
    * Add logging support to main
    
    * Start tracking completed transactions as part of ManticoreEVM
    
    * Make evm and non evm output more consistent
    
    * Remove redundant start_workers
    
    * make debug output conditional in Manticore
    
    * Improve seth logging
    
    * Add seth to logger lists and make sure new loggers are initialized
    
    * Make completed_transactions not lie during the processing of one
    
    * Print coverage after processing a transaction
    
    * Demote starting msg to debug

commit 6dd50da350b1d71fd0a685a31173af70b4dfa2d1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Dec 18 12:00:01 2017 -0500

    refactor logs files content (#646)
    
    - if no logs just print nothing
    - output any printable bytes in the memlog as a convenience in case they logged strings

commit 833ef4af2f2b25a009aac7cc102e8c86c7a26cee
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Dec 15 18:57:02 2017 -0300

    fix for #608 using a local definition (#644)

commit 670076c8559b24b1c91e1cf999c6464668dfa040
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Fri Dec 15 21:53:54 2017 +0000

    Fix compilation bug (#645)

commit 9839cbdbb0d1d94fd062da9d3504371ff411a8ef
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Dec 15 16:45:30 2017 -0300

    Fix z3 oddity: reset vs optimization (#627)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Mitigates the wrong objectives print in z3 4.4.x
    
    * Exception to SolveException

commit aabfecfe77c05670c953121f48f1855266aa6b38
Author: Srinivas P G <srinivas@ginger.io>
Date:   Fri Dec 15 12:13:00 2017 -0500

    Fix for issue #642 (#643)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * fix issue 642

commit db80685758c4192a6a0ce96b8cbd0eee1cd4ebce
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Dec 15 02:17:41 2017 -0300

    Better EVM workspace output (#641)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review
    
    * New workspace output
    
    * Fix examples
    
    * wrog merge fix
    
    * Fix examples/new api
    
    * Fix examples/new api/output
    
    * More output
    
    * More doc
    
    * Broken examples deleted
    
    * Debug code removed
    
    * Wrong docstring
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Fix TODO

commit 4b79711b92e9959f2fda4da548c09d6298de0e89
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Dec 12 14:56:39 2017 -0300

    Detectors () (#637)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review

commit df9af1fd12f9bbe944f801a6ade2fddbf0b6f6a7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Dec 11 16:14:06 2017 -0500

    Implement initial evm workspace, fix small bugs (#638)
    
    * print on every
    
    * save the bytecode to look at later
    
    * update tuple
    
    * wip workspace files
    
    * wip
    
    * generate tx files
    
    * rm unused event handler
    
    * clean up solving for tx.data
    
    * Revert "print on every"
    
    0caaae3658a169c9763c51544aa3c79a4e3940ca

commit 7ea30192a144d465d814b3c97d2f71bbd714f632
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Dec 11 11:36:30 2017 -0500

    evm: Make 'not enough funds' states finalized states (#636)
    
    * print on every
    
    * terminate not enough fund states
    
    * Better check
    
    * revert debug change

commit 3f0441148fa490d4a38de013c8f66bccebca3fc8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 8 11:15:03 2017 -0500

    Initial eth cli based on solidse.py (#633)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * initially evm cli from solidse.py
    
    * rm prints, make import work
    
    it's just `import seth` because this file runs from the perspective
    of being inside the package. `from manticore.seth` doesn't work
    because manticore.py gets priority over the manticore package, and
    there is no seth entity inside manticore.py
    
    * rm wip cli file
    
    * add excess printing as a big comment
    
    * print minimal report
    
    * require .sol only
    
    * rm solidse again
    
    * rm fluff

commit ed29a22fceb0c187e1ee97ae230f5d9524bd0b48
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Dec 7 20:19:16 2017 -0300

    EVM refactor and simple UI (#629)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review

commit 764151de7158ac3d3f4c8e8570d1fa584c94e7fc
Author: Daniel Bolognino <dbolognino425@gmail.com>
Date:   Wed Dec 6 18:51:20 2017 -0500

    Emit .input instead of .txt files in workspace (#625)
    
    Related: #612
    
    * Update workspace.py
    
    Changed extension to .input
    
    * Update test_workspace.py
    
    * changed key value pair in test_workspace bc of change of extension to .input in workspace.py, fixed issue #618
    
    * removed unwanted directories
    
    * Update seth.py
    
    * Update seth.py
    
    Change in Documentation issue #612

commit c6902d7265e66e8cd07a5a6b0e8c6e0e72c48cfa
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Tue Dec 5 10:41:38 2017 -0500

    Hide legacy cli flags from cli help (#622)
    
    * Fixed Issue #533
    
    * Removed --replay argument from cli help. Issue #617
    
    * Update help description
    
    * Remove unused --size flag

commit e63838d204e83112fe2a20e2ddae776243a2a97a
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Mon Dec 4 17:53:19 2017 -0500

    Fixed Issue #619 (#623)
    
    Add newlines in .trace file generation

commit be0141e501d3f40b77b111f9451cb2be8a2d33d4
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Dec 1 16:14:56 2017 -0500

    Amend pr guidelines (#615)

commit 77b0542b83bce9695aa79d7447aa58f5c056b111
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Nov 30 10:16:08 2017 -0500

    Fixed Issue #533 (#606)
    
     * Remove Platform._path

commit 9c777e6d2b34db29e137a049a46a0355eda73660
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Nov 29 19:00:49 2017 -0300

    EVM api refactor (#589)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor

commit 3a63402ae55c22d0624c2e6de89abb337c3e89d9
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Nov 29 13:22:16 2017 -0300

    EVM assembler/disassembler doc and cleanup (#563)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * EVMasm refactor

commit e50cc6b9b2a451a6f2eedb94ed3d85bbc4d5bf83
Author: awr|arr <arr@watson.org>
Date:   Tue Nov 28 19:18:12 2017 -0500

    Log unimplemented instructions (issue 163) (#599)
    
    * Remove double printing of exception.
    
    * Pretty print the unimplemented instruction raised by unicorn (UcError).
    
    * Raise exception after unimplemented instruction error logging.
    
    * Ensure the raised exception is actually a unicorn invalid instruction error.
    
    * Resolve conflict

commit 481e41991d4ffff2909e2d6fbd0eb24c38ac6744
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Tue Nov 28 18:36:33 2017 -0500

    Centralize system call logging (#602)
    
    * Remove per-syscall logging
    
    * Make Cpu.read_string() stop reading at first symbolic byte
    
    * Centralize syscall logging
    
    * Update helper docstring
    
    * Update arg/ret expansion
    
    * Check for issymbolic first
    
    * Tiny hex format change

commit 3c7d92bfcdbb82996c59f197fdaa3b6ced6fb5b7
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Tue Nov 28 18:14:03 2017 -0500

    Trace following mode (#513)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Initial concrete trace follower
    
    * Add extended (json) trace support
    
    * More stubs for condition gather
    
    * Update trace saving to new format
    
    * Produce trace regardless of contents
    
    * Record register deltas in trace
    
    * Move initialization to _start_run so we can call run() multiple times
    
    * Re-fix multiple workspace bug
    
    * Fix it correctly
    
    * Add extended trace and accessors
    
    * make sure did_execute_instruction is always published
    
    * Produce a consistent version
    
    * move extended tracing to separate class
    
    * Reorg of extended tracing plugins
    
    * Add concolic tracing script
    
    * Clean up old hooks
    
    * Sync memory as well; cleanups
    
    * Revert binary tests
    
    * simplify concolic follower
    
    * Move trace follower to plugin.py
    
    * Simplify follower
    
    * Add skip ranges to Follower
    
    * Update concolic.py
    
    * Remove redundant state init
    
    * Clean up driver script
    
    * Update header line
    
    * Move trace follower
    
    * Move Follower to follow_trace.py
    
    * rm unused import
    
    * Remove unnecessary property
    
    * rm ConcreteTraceFollower
    
    * Revert start_run behavior

commit 88b213de7e25ca7d6d9e12b010cf50cdc9b0593e
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Tue Nov 28 16:46:19 2017 -0600

    Fixes to thumb mode instruction implementations
    
    * Thumb specific fixes to the SUB, BX, and MOV instruction implementations
    * implemented hardcoded result for gettid syscall

commit d98ef2225137aae3f5a230b42a829d077bae105c
Author: Srinivas P G <srinivas@ginger.io>
Date:   Mon Nov 27 18:13:13 2017 -0500

    Fix Issue: 597 - Remove unused policy argument in function State.solve_n (#598)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument

commit ce888766cd5a7947f250c0733d2429aac4587d8d
Author: Srinivas P G <srinivas@ginger.io>
Date:   Wed Nov 22 16:18:45 2017 -0500

    Fix for issue 556 and 591 (#590)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler

commit fccf451406139b5bba213d20ee2b697e85464ba6
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Tue Nov 21 11:56:00 2017 -0700

    Assert valid operand length (#558)
    
    * Assert valid bytecode and operand length
    
    EVM bytecode comes in 32-byte chunks, and contracts require at least one
    segment to be created. An example, originally written by @ggrieco-tob in issue #546, is included.
    Unsure what expected behavior should be, but initial state has a problem when a contract is
    created with a single byte.
    
    Also added some exception handling in `parse_operand()` to catch invalid
    instructions, e.g. a PUSH1 instruction followed by no bytes.
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Fix SLOAD invalid memory access
    
    Simple check to ensure address storage is in global_storage before
    attempting to load data.
    
    * Remove invalid assertions

commit fbe70f1bc52def0297aaa7151f9e036f221a56c5
Author: Sidhant Gupta <guptasidhant004@gmail.com>
Date:   Tue Nov 21 04:14:19 2017 +0530

    Updating README with solc binary requirements (#575)
    
    * Updating README with solc binary requirements
    
    * Update README.md

commit 5c52fcaf543db31533a263ebc0fb840c8aec012f
Author: Sidhant Gupta <guptasidhant004@gmail.com>
Date:   Tue Nov 21 02:36:57 2017 +0530

    Updates travis cache to python 2.7.13 (#576)

commit 652c99b471ebb2d2624b7605cb0292d8c21ae9a9
Author: Dushyanth Chowdary <dnc295@nyu.edu>
Date:   Mon Nov 20 16:04:34 2017 -0500

    Manticore prints linux ret code as uint instead of int (#578)
    
    * Fixing raise issue #435
    
    * syncing git
    
    * Fix Bug #570
    
    * syncing
    
    * removed all binaries
    
    * missed one file

commit 1dbf40ea8e13ad60bf4deb43f73caef87ad21eee
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Nov 20 15:35:32 2017 -0500

    Add UMD simple assert example (#573)

commit 35d8fce9df21f3fa645f24174589df84061fe0c1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Nov 17 12:40:30 2017 -0500

    Only really fork when there's multiple solutions (#569)

commit 0e4e9a49e2dcab5651d74fbbd8de4649428efa4c
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Tue Nov 14 17:18:31 2017 -0300

    Added missing syscalls in decree syscall trace (#545)
    
    * added missing syscalls in decree syscall trace
    
    * added missing parameter in callback of BranchLimited policy

commit 352b9ba48d7553f7c14e5358ccabdaec38faa1b2
Author: awr|arr <arr@watson.org>
Date:   Tue Nov 14 15:10:14 2017 -0500

    Fix typo per issue #552 - s/arm64/amd64/ (#561)

commit 8002a1d682a14c857f687754b754dabdee1d12c8
Author: HighW4y2H3ll <tonyhu@sjtu.edu.cn>
Date:   Tue Nov 14 14:39:51 2017 -0500

    Add PCMPXSTRX Instructions (#507)
    
    * Add PCMPXSTRX Instructions
    
    * bug fixes
    
    * unittest related fixes
    
    * Full test of pcmpxstrx
    
    * Move tests

commit 94d2e94bf1554ffa0eccaefec6f1587d9a1be84b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Nov 14 12:06:08 2017 -0300

    New API for EVM analysis (#551)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes

commit b13a8c0c249ca5dcd3df0cc60d22f532d19177e8
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Tue Nov 14 13:34:18 2017 +0000

    Fix SLOAD invalid memory access (#562)
    
    Check global_storage includes an entry at address before trying to load
    storage.

commit d9b54675c53b4d5b41834a762e305615ed48cb49
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Nov 13 18:30:23 2017 -0500

    Handle file.tell() error, which will happen for special files (/dev/tty) (#559)

commit 08f86cc8923c5ed86c70329ba7e1d613fbdbbb9f
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Mon Nov 13 17:20:57 2017 +0000

    [fix] Issue #550: generates extra workspace folder (#557)
    
    * [fix] Issue #550: generates extra workspace folder
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Slight workspace and store refactor

commit 9535ec8fd31b18e9f865b82bc54893516e877db4
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Nov 9 11:28:24 2017 -0500

    Fix all integral type checks that forget long (#555)

commit d341bc94ff1cd015aa3fffc96c155aeab166a910
Author: Peter Goodman <peter.goodman@gmail.com>
Date:   Wed Nov 8 14:48:23 2017 -0500

    Move inline function definitions out of the AbstractCPU's execute method (#538)
    
    * This change moves from inline function definitions out of the critical path of AbstractCpu's execute method.
    
    * Raise a mcore exception if we fail at emulation

commit 7c1e5e16fc147a55528fe0c7aa45e3f44557deca
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Nov 6 18:00:26 2017 -0500

    Localize log formatting changes (#547)
    
    * Don't add custom format string to root logger
    
    * Fix handler propagation

commit 82d1621bfe04b82a818d97b4d8cf6ea28ac5fdea
Author: car bauer <hugin@mimisbrunnr.net>
Date:   Mon Nov 6 16:51:43 2017 -0500

    Remove win32 support (#535)
    
    * Remove Windows support files
    * Remove Windows test files

commit baf2d769a624306f91fcca44bcff0b087f1bba69
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Oct 25 10:53:11 2017 -0400

    Various bug fixes. (#530)
    
    * Fixes #503
    
    * Fixes #515
    
    * Fixes 272. Concretize data written to a fd.
    
    * Revert debug hack and fix overly broad exception
    
    * Update did/will_exec_instr semantics
    
    * Clean up imports
    
    * Update logging and improve sys_open return
    
    * Update variable names+doc for consistency

commit 08e8c3b7d886f03b5c4cf16592b96bb2b3fc6db6
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Oct 23 17:45:01 2017 -0300

    Fix coverage calculation vs. metadata (#529)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code

commit a9ad183354cbeda0780e5b8cc8c652d1a27803f3
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Oct 20 16:43:22 2017 -0300

    Fixes symbolic reentrancy example (#528)

commit 5aa681dc762cf15be6fe987755f5f42e276a0edf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Oct 19 15:46:22 2017 -0400

    0.1.5 Release (#501)
    
    * Update CHANGELOG.md
    
    * Update 0.1.5 README
    
    * Bump version/release date

commit 23218d724ea08338f67400d078d4216505ef5eed
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Oct 18 19:17:26 2017 -0300

    Simple event signature fixes (#525)
    
    * dev-evm-event-bugfixes
    
    * Better stringifierer

commit 8591bff45f67b2ae1cf6c2f7011d01267e6a8fd7
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Oct 17 19:47:20 2017 -0300

    EVM support (#521)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * EVM support - Wip
    
    * EVM support - dependencies fixed
    
    * EVM support - fix decree merge
    
    * fix decode instrucion event
    
    * Fix small bugs in evm opcodes (too many arguments + wrong LOG name) (#380)
    
    Fix wrong call parameters + typo
    
    * Fix Create/Call
    
    * Fix depth
    
    * Default fixed point in arithmetic simplifier
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * wip wip
    
    * Auto tests for evm
    
    * New EVM tests
    
    * Ran 9556  FAILED (failures=166, errors=8, skipped=62)
    
    * Fix some arithmetic instructions
    
    * Ran 9556  FAILED (failures=136, errors=8, skipped=62)
    
    * More instructions - Optimizing symbolic memory
    
    * Added gas to opcodes description - FIX DELEGATECALL POPS
    
    * Add wip wallet example
    
    * The tests
    
    * Solidity constructors need argument after bytecode
    
    * Simple integer overflow working
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * context now working
    
    * Fix context serialization
    
    * Fix test models.  Can not set a state constraints
    
    * typo
    
    * A few typos (constraints setter) and use of public properties in internal methods
    
    * Fix init wallet example
    
    * State __init__ needs to initialize platform constraints
    
    * Internal methods use internal properties
    
    * Better attack modeling
    
    * Better example layout
    
    * Storage backup on CALL is now faster .. and correct
    
    * Add LOG support
    
    * Minimal SE test
    
    * Added examples
    
    * Send ether bugfix
    
    * EVM: Fix wrong balance destination on CALL + decrease caller balance on CREATE
    
    * New balance management
    
    * Trying to maintain known hashes
    
    * Known hash concretization policy
    
    * CALLDATA max size bugfix
    
    * Minimal SE example
    
    * Remove evm tests
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Fix visitors oddity
    
    * setup merged
    
    * remove duplicates and add pysha3
    
    * Remove EVMTests import
    
    * Refactor platform specific code out of ManticoreOutput (#505)
    
    * Initial moving work
    
    * Clean
    
    * Make linux.generate_workspace_files work
    
    * Fix
    
    * clean
    
    * Add test
    
    * Test workspace for platform files
    
    * Skip EVM cpu pretty print
    
    * Remove bad import
    
    * Fix coverage.py for testing
    
    * Clean comment
    
    * Comment hack
    
    * Print evm cpu
    
    * pretty print evm world instead of platform
    
    * delet old scripts/examples
    
    * delet old tests
    
    * Remove z3 install script
    
    * Array.max_size can be None, include check for that
    
    * Rm unused _symbolic_files
    
    add_symbolic_files was moved to linux, so this is not needed
    
    * Rm unused args
    
    * Import evm
    
    * Rm dup function
    
    * Rm stray prints
    
    * Add docs for new classmethod apis
    
    * minimal
    
    * minimal example
    
    * fix minimal
    
    * Fair symbolic SHA3 handling
    
    * Simple mapping example
    
    * coverage example
    
    * fix tests
    
    * fix minimal
    
    * Some eko fixes
    
    * New SETH
    
    * integer_overflow refactored
    
    * Fixing the examples
    
    * init_bytecode -> init
    '
    
    * Concrete reentrancy exampole
    
    * concrete reentrancy selfdestruct
    
    * Update minimal.py
    
    * It's a new Minimal
    
    * Integer overflow example
    
    * New minimal
    
    * minimal fix
    
    * Examples last minute fixes
    
    * Remove debug print
    
    * add plugin.py
    
    * Fixing event subscription
    
    * remove temp params
    
    * Remove param
    
    * Update uncovered will_exec callback prototype
    
    * Clean up debug output
    
    * Automatically generated intruction tests
    
    * Uninplemented instruction test removed
    
    * Unused concretization policy removed
    
    * Fixes enabling default bplugins
    
    * solc from PATH
    
    * Removed unused import
    
    * Logger name updated

commit e84c0513a2d850e3fe63bd23425d7ba67a88c7dc
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Oct 4 15:51:37 2017 -0300

    Manticore plugins (#506)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Dev plugins (#512)
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Define prefixes in one place
    
    * remove debug print
    
    * remove debug print

commit 1edee15e5f56001728057865de1981f2dcbfc3ff
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Sep 25 18:09:18 2017 -0400

    Pythonic logger naming (#511)
    
    * More generic logging
    
    * Clean up logger name gen
    
    * Refactor name summarization

commit b9333838ad8973df8d99923b406cde709b26ac2f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Sep 14 11:52:15 2017 -0500

    install z3 with pip in Dockerfile (#502)

commit 0efa37933ac07cb8f83af3baf5f619d03ce1bd73
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Sep 13 19:17:13 2017 -0500

    Fix stderr file creation and test for it going forwards (#495)
    
    * fix stderr file creation and test for it going forwards
    
    * consolidate tests
    
    * clean up imports

commit 58cdee814c594202afa6ac9bab1d31dec94890cf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Sep 13 18:34:45 2017 -0400

    Update test_workspace.py (#497)

commit 23c2585316678db1c421289ea2d3fa9fc7450114
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Sep 13 18:37:42 2017 -0300

    Refactor platform details out from Manticore (#421)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Refactor CLI, and Manticore high level interfaces (#498)
    
    * Refactor main,
    
    - classmethod for linux
    - refactor manticore ctor - compat with old linux behavior
    - changed verbosity API (to allow for this use case: what if you want to set verbosity for the stuff manticore does in its ctor?)
    
    * rm old verbosity
    
    * small
    
    * Add decree classmethod
    
    * Rm checks ; they are redundant anyway
    
    * Misc
    
    * Move add_symbolic_file to linux platform
    
    * rm redundant checks
    
    * Rm explicit args for deprecated interface
    
    * Fix cli bug
    
    * Allow for both linux and decree from cli
    
    * Add back argv positional param for deprecated api compat

commit f6fea10376d7c4ddd46c9225e39d8ef45b32ea9d
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Sep 12 15:21:48 2017 -0400

    Use z3-solver package (#494)
    
    * Add z3-solver pip dep for z3 install
    
    * Update readme for z3

commit 50923974e253fd81ba1522a15f3d12ab5aa53030
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Sep 12 15:08:53 2017 -0400

    Fix logger verbosity and test (#491)
    
    * something liekt his
    
    * `will_store_state` does not exist
    
    * slightly better cli verbosity test
    
    * Fix variable
    
    * Rm unused callback fun

commit a8ef3ecd9f2bd3913c78ed6cb33d53c77f851218
Author: John F.X. Galea <johnfxgalea@users.noreply.github.com>
Date:   Tue Sep 12 20:03:01 2017 +0100

    Added implementation for sys_dup and sys_dup2 (#490)
    
    * Added implementation for sys_dup and sys_dup2
    
    * Fixed bug in close functionality.
    
    * Removed unwanted white-space
    
    * Updated implementation of sys_dup and sys_dup2
    
    * Fixed is_open function.
    
    * Handle a newfd in dup2 that extends beyond existing fd table size
    
    * Add a minimal sys_getrlimit() implementation
    
    Thank you @johnfxgalea!

commit f8a8373e57ab7e6634d6910e1df0b360baecb455
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Sep 11 13:05:51 2017 -0400

    Request binaries that cause bugs in contributing.md (#486)
    
    * Request binaries
    
    * Update CONTRIBUTING.md

commit 8b66e58c7b1922e218c9536ad620ce2811950d80
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Sep 7 20:15:31 2017 -0400

    Document cli better (#482)
    
    * Update README.md
    
    * Rewrite -h
    
    * Clearer cli usage
    
    * Fix forgotten variable name changes
    
    * Fix more forgotten variables

commit 60c6813a809b534afbb4eb1df063dc2c1f3a5346
Author: John F.X. Galea <johnfxgalea@users.noreply.github.com>
Date:   Thu Sep 7 21:30:55 2017 +0100

    Implemented getcwd sys call, along with a new helper function that wr… (#483)
    
    * Implemented getcwd sys call, along with a new helper function that writes a NULL terminated string to memory.
    
    The reason for this commit is that the sys call was not implemented.
    
    * Fixed logging string for sys_getcwd imp
    
    * Removed semicolon in sys_getcwd function
    
    * Fixed logging string for sys_getcwd imp. The problem was that size is unsigned and the incorrect format symbol was used
    
    * Fixed the following:
    1) Included the string param in the doc of the write_string function.
    2) Added less verbose code to append a NULL to a string in the write_string function
    3) Removed the assert to check if the written string to memory matches with one that is read at a given address in the sys_getcwd function
    4) Fixed bug in the return values returned by sys_getcwd
    
    * Fixed error logs in the getcwd function.
    
    * Fixed return values of sys_getcwd function.
    
    * Fixed string format symbol in sys_getcwd function.
    
    * Removed dir exists check from the sys_getcwd function.
    
    * Arranged memory block check in the sys_getcwd function.
    
    * Removed new line after write_string function.
    
    (Thank you @johnfxgalea!)

commit d83fa737a79937fc8ee639aab601743c38707b54
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Sep 6 18:11:22 2017 -0400

    Create CONTRIBUTING.md (#481)
    
    * Create CONTRIBUTING.md
    
    * Update CONTRIBUTING.md
    
    * Update CONTRIBUTING.md

commit 76797730886f58f7fe526945c66f294d63967c1d
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Sep 1 17:05:43 2017 -0400

    Update examples (#477)
    
    * Use locked_context() in count_instructions example
    
     * We use this example on the front page, and it currently generates
       a flood of warnings.
    
    * Update example indeces
    
    * Remove dump_stats()
    
    * Remove extra comments
    
    * Remove redundant comments

commit 9b8ef3cd762bfd2a1200be81e25577d53686d3b5
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Sep 1 16:31:50 2017 -0400

    Concretize stdout in state summary (#478)

commit 0cd2560138683d396651355b4351d5ae96171149
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Sep 1 11:43:29 2017 -0500

    Update Manticore docstring (#476)
    
    * update Manticore docstring
    
    * fix type docstring

commit d5d22a8aaf2b90ee254995d5c2b8c078bba77d03
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Aug 31 16:44:43 2017 -0500

    Allow Manticore initialization with State object (#475)

commit f9b02bd194f77d30d2e2ec0a7a5a08094197bfc9
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Aug 31 13:48:55 2017 -0300

    New Policy class (#368)
    
    * New Policy class
    
    * Move visited to Policy - Fix contexts
    
    * Add BranchLimited
    
    * signals -> events for branchlimited

commit c6f8fd12918336472bcd8fb8a7ef7220d9041e1f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Aug 31 10:16:52 2017 -0500

    initialize executor at manticore initialization (#471)

commit ca0d7b60d206a7f159694721317034ad49eae666
Author: Yan <yan@users.noreply.github.com>
Date:   Tue Aug 29 17:00:17 2017 -0400

    Add basic socket support (#428)
    
    * Add a descriptor class for socket(2) return values
    
    * Add basic socket(2) and bind(2)
    
    * Basic accept(2)
    
    * Basic recv(2) support
    
    * Debug statements and accept(2)
    
    * Add check for symbolic arg to open(2)
    
    * Fix an example warning
    
    * send/sendfile
    
    * debug->info for some mcore output
    
    * Produce socket data as part of state serialization
    
    * Clean up SLinux.sys_open()
    
    * Document socket(2) peculiarities

commit a025bda97a8d76bda2bbecabdb53220fc7746b08
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Wed Aug 23 17:47:23 2017 -0400

    Updated visualization plugin with coverage info & live update option (#444)
    
    * plugin rearrangement and UI options
    
    * Live update and clear options
    
    * coverage stats
    
    * added check for xref address
    
    * coverage in separate option as BackgroundTaskThread
    
    * license cleanup

commit 60a99d2f81226886fefe0eb083912ab2389ee09a
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Aug 23 16:37:26 2017 -0500

    Seed random on policy init to make results deterministic (#466)
    
    * seed random on policy init to make results deterministic
    
    * document new random behavior

commit 1b653be9b3174a5a2f821ed333e527a01595492b
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Wed Aug 23 14:46:17 2017 -0400

    Basic Caching for Binja IL (#467)
    
    * basic caching (wip)
    
    * moved execute in binja and cleanup of self.instruction refs
    
    * did_emulate_insn and get_current_llil_func renaming
    
    * refactor for hasattr

commit b32379d3d407c3ac348e0252efbe0400bc62aa33
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Mon Aug 21 23:03:47 2017 -0400

    did_execute_instruction nit (#468)

commit d3d1e9c924a69e3e312d74365a2a9e2a418c5bac
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Aug 18 13:48:33 2017 -0400

    Manticore 0.1.4 (#462)
    
    * Bump version number
    
    * Changelog updates
    
    * Include changes to undocumented functionality, but mark as experimental
    
    * Function notation
    
    * Update CHANGELOG.md
    
    * thanks!!!

commit 604de56cfde6e4ec8904986b5d390f97468680f7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Aug 18 11:12:14 2017 -0400

    Update readme (#461)
    
    * No more partial arm
    
    * windows unmaintained :(( and bye pip
    
    * Move dev install insns to wiki, no need to clutter README

commit 715cc436c7b01f514f745b0b574a730c5f3a74aa
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Thu Aug 17 17:43:27 2017 -0400

    Abstract Disassembler classes and Binja CPU + Platform (#364)
    
    * adding abstract disasm class
    
    * before adding abstract insn
    
    * explicit capstone use
    
    * (wip) removing capstone
    
    * debugging nose
    
    * removed disassembler from constructor
    
    * nits
    
    * capstone->cs and nits
    
    * basic memory (wip)
    
    * tmp
    
    * added binja dissasm
    
    * fixed execution pipeline - calling LLIL instructions
    
    * updated parseargs to select disassembler
    
    * unstable (disassembler at CPU constructor breaks tests)
    
    * disasm fix for tests
    
    * nit for aliases in x86
    
    * added a flag to differentiate disassembly and IL-disassembly for binja
    
    * before merging
    
    * merging with dev-events master
    
    * fixed signal forwarding for binja
    
    * cleaner initialization
    
    * Binja RegisterFile. Dropped Platform
    
    * address fixup
    
    * properly incrementing PC
    
    * some work on XOR, SET_REG, REG, CONST, AND, PUSH, POP
    
    * adding first CALL, JMP, LOAD (wip)
    
    * JUMP fix
    
    * GOTO and misc fixes in PC handling
    
    * adding instructions (wip)
    
    * fixing flags and sizes (wip)
    
    * loading database if exists for faster analysis
    
    * fix for register debug
    
    * fixes for register sizes and flags
    
    * FIX for multiple IL instructions sharing the same PC
    
    * removed CONST_PTR and misc fixes
    
    * RET, SHR, shift left & misc instructions, fixing insn sizes (wip)
    
    * flag fixes
    
    * ctypes 2's complement parsing
    
    * JUMP_TO, SYSCALL
    
    * syscall fixups and flag computation using binja il only
    
    * FLAG, NEG, CMP(family) of LLIL, some unimplemented methods
    
    * MUL, DIV
    
    * cmpxchg
    
    * MUL, IMUL, ROR, ROL
    
    * fallback to capstone for all LLIL_UNIMPL and LLIL_UNIMPL_MEM
    
    * fixes for registers and memory when switching CPUs
    
    * check for binja to disable multiprocessing
    
    * merging
    
    * nit
    
    * hack for serialization
    
    * moved check for disassembler to Manticore from __main__
    
    * removing __class__ refs
    
    * cleanup from __class__.disasm
    
    * size calculation from get_instruction_low_level_il
    
    * fix for NEG, check for empty queue, execute refactor
    
    * fixes for LLIL functions
    
    * removal of redundant regfile writes
    
    * nit fixes
    
    * function overrides in Cpu classes and orphan printf cleanup
    
    * nit
    
    * incomplete merge
    
    * verbosity temp mod
    
    * cleanups of FIXMEs
    
    * 2-stage constructor for disassembler
    
    * cleanup binja refs in abstractcpu
    
    * serialization for platform_cpu
    
    * check for UNIMPL in all the il queue
    
    * typo fix
    
    * fix for arm
    
    * typo correction and starting caching implementation
    
    * restored register printing and fixed import in x86.py

commit f9489d324985e6a070f6c3295d6a168800bef59c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 17 16:50:21 2017 -0400

    Document `Manticore.locked_context` API (#460)
    
    * Add locked_context to documented APIs
    
    * Initial

commit 22974ca65e6b6015e8b82583a93227ede87ff440
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 17 16:48:59 2017 -0400

    Add gotchas docs (#459)
    
    * Add gotchas docs
    
    * always

commit 5d87fc83b36c1405cffff7fb7193eb1359f077d3
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Thu Aug 17 10:02:44 2017 -0500

    Instructions and tests to support issue binary for issue #182 (#403)
    
    * orn instruction plus unit test
    * uadd8 and it instructions implemented
    * SEL instruction implementation
    * GE flag set by UADD8
    * IT instruction condition code properly no longer prevents its execution
    * support for multiple instruction tests added to testing setup
    * unit test for SEL instruction
    * cleaned up the tests for thumb instructions
    * implemented sxth and rev instructions
    * implemented tests for sxth and rev instructions
    * updated the add implementation to support two operand variant (i.e., add r4, #4)
    * added test for itete ne instruction

commit 7bb64fe26e0ce43d33211e73e1ebf9f4e81c60be
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Aug 15 10:50:46 2017 -0500

    fix trace-saving behavior (#454)

commit 09bb702fac6273faaf8e0f0bbba0bcae593361c1
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Mon Aug 14 16:05:29 2017 -0400

    Implement logging presets (#445)
    
    * logging template nits
    
    * moved logging outside Manticore
    
    * naming fix and exposed API call
    
    * logging -> log renaming
    
    * fix for verbosity test
    
    * restored setter/getter for verbosity
    
    * fixes for warnings in 0 mode and exteneed test_cli_verbosity
    
    * removed print
    
    * relative import, fork message to executor, init function
    
    * verbosity docstring fix
    
    * docstring nit

commit 1d8e05152237a8a3b27c67b130b7de035628c805
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Aug 14 14:44:53 2017 -0400

    Fix state.generate_testcase (#451)
    
    * Use correct event name
    
    * Add test for state.generate_testcase
    
    Test merely tests that this function publishes the 'will_generate_testcase' event
    
    * Properly test; make sure the callback executes and error if not
    
    This is the most convoluted unit test I've ever written.
    
    * "better"

commit 36a58810f905e299ff63a6208dc4e08eeb891869
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Aug 10 15:07:53 2017 -0400

    Use the same workspace URI in Executor.__init__ (#443)
    
    * Make sure we're using the same workspace
    
    * create_store -> fromdescriptor
    
    * classmethod -> cls variable
    
    * Cache descriptor name
    
    * join -> format
    
    * Update Store docs

commit e78ae8904ed7a76528cf01cd2a4b99bcb1d5a268
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 10 15:06:51 2017 -0400

    Add Manticore version to issue template (#447)
    
    * Add Manticore version to issue template
    
    * Update ISSUE_TEMPLATE.md

commit eef3cd20e24d18980b9f4345c79249a8dcb85e71
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Aug 8 18:12:55 2017 -0400

    Implement state.generate_testcase (#438)
    
    * ran
    
    * Some dirty work
    
    * Rm unnecessary sanitization
    
    * Fix state.generate_inputs event publishing
    
    We don't need to manually pass `self` because State is automatically
    forwarded as an argument. Also correctly specify a message for the state
    and expose to the API
    
    * Rename
    
    * Update test for new save_testcase args, make test more robust
    
    * Simplify arguments related to generate_testcase_callback by removing default arg. Add test for this behavior
    
    * Minor test fixup
    
    * Add official API docs
    
    * Remove unnecessary new event type

commit 9ae76a44308d35c437f627136bc2225b07c03ce2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Aug 7 08:08:37 2017 -0700

    Fix testcase generation output (#436)

commit 68555f5234e39526774fa252a847c9485702da36
Author: Dushyanth Chowdary <dnc295@nyu.edu>
Date:   Fri Aug 4 21:27:15 2017 -0400

    Fixing raise issue #435 (#437)

commit af3020db957ff83b66e1474498bdb6be060ddab9
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Aug 4 17:18:45 2017 -0400

    log testcase generation (#430)

commit 7b832724a62aae83457950f182538b694c16cef1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 3 14:13:40 2017 -0700

    Implement symbolic branch tracking in core, add new fork event (#433)
    
    * Add fork_state event for individual state forks
    
    * Rename to forking_state, add branch tracking to state
    
    * Remove unnecessary locking around event publishing

commit 5ad18e736c867f15a22887a0c65f67c3af3b616c
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Aug 2 17:31:29 2017 -0400

    Produce fork-related output at info level from mcore (#429)

commit 3b57c0d5027c4a92bd64a230812998c1eedae4f3
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Aug 1 14:08:54 2017 -0300

    Fix context serialization (#425)
    
    * Fix context serialization
    
    * Fix test models.  Can not set a state constraints
    
    * typo
    
    * A few typos (constraints setter) and use of public properties in internal methods
    
    * State __init__ needs to initialize platform constraints
    
    * Internal methods use internal properties
    
    * test_record_branches removed

commit 271400728c96193368b06bb5c785ccfcdd471062
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jul 31 14:39:47 2017 -0400

    remove state.generate_inputs (#385)

commit 51837df98b705149b814738aa6973321ab22a008
Author: Eric Hennenfent <ehennenfent@imsa.edu>
Date:   Fri Jul 28 10:58:25 2017 -0500

    Add Taint Parameters (#414)
    
    * Add taint args to buffer creation
    
    Allows the `new_symbolic_buffer` and `symbolicate_buffer` functions to take keyword args for tainting. Defaults to frozenset in both cases.
    
    * Add unit tests and ArrayProxy taint propery
    
    Adds simple unit tests for tainted buffers. Added a property to the ArrayProxy class in smtlib.expression so that it's possible to access the taint of the proxied ArrayVariable.
    
    * Updated docstrings

commit 76357216da6658842f952937798b0b71d360de40
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Jul 27 19:41:08 2017 -0300

    Pub-sub like events (#371)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * Eventful class commented
    
    * The million typos
    
    * Code revision
    
    * Fix tests for new mor strict Eventful

commit a3cf6e7d2cf26eec1f55c9f967f1d7498451fca7
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jul 27 12:31:58 2017 -0400

    Fix warning during regular analysis (#420)
    
    * only make context warning appear when appropriate
    
    * implement felipe's suggestion

commit d1ead7a7be1727675dd0a311f843c7663da80d5c
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 21 16:03:26 2017 -0400

    remove naked print from executor.py (#410)

commit 8d19dc507dcc32999c6e1d10df95dc9ce0deeba6
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 21 15:34:33 2017 -0400

    Fix solver call in decree (#409)

commit d9c226b89d716205c3fa61f128cf468f1cac5e2c
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jul 20 16:02:13 2017 -0400

    Fix forking state from memory (#407)
    
    * import ForkState before use
    
    * Fix ForkState behavior

commit 7f54a4342c8833b37063ff5c19831c918a12f079
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jul 19 10:51:31 2017 -0400

    Make makeDecree conform to convention and fix --data (#402)
    
    * fix makeDecree to work with scripting
    
    * fix concrete_data

commit 74bd5ed832f0cbbf67d1bd489dfeb712a1595253
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 18 17:25:17 2017 -0400

    remove grr snapshot support (#400)

commit 344ade98ee73131d881e83a183c833762bae340e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 18 16:34:37 2017 -0400

    Add optional redis dependency to setup.py (#399)
    
    * add optional redis dependency to setup.py
    
    * update installation documentation
    
    * clarify docs and add redis to dev install

commit be2494df44eef91077368bf1c0daa2fab89c9d2a
Author: Frank Busse <f.busse@imperial.ac.uk>
Date:   Tue Jul 18 16:38:41 2017 +0100

    Expose symbolic files to command line interface, implement whence for symbolic seek (#394)
    
    * add --file <symbolic file> flag
    
    * fix seek argument count error, add rudimentary whence support
    
    * symbolic file seek: fix docstring and semantics

commit 47a5d9752f965d19af8c957cb946cb7dfb61de75
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jul 17 14:06:42 2017 -0400

    Make save_stream pass through kwargs (#396)
    
    * make save_stream pass through kwargs
    
    * make base save_stream ok with extra [kw]args
    
    * make key argument explicit

commit ddc3b128483b12c4ce8cab85d5905f15fda847d5
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jul 17 10:36:31 2017 -0400

    Fixed CHANGELOG.md typo (#395)

commit 97115212e1e0cf1bdfdc51ca55f43e369b5bfa37
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 14 18:01:14 2017 -0400

    add pypi badge to README.md (#391)

commit 4bb48af199f0cea8d8dce0cd15ed91c9dd7daedb
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 14 11:56:21 2017 -0400

    Manticore 0.1.3 (#390)
    
    * Manticore 0.1.3
    
    * fix compare URL

commit 13964d053b010395fd76be5cdad5d0565ebed33b
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jul 13 13:57:18 2017 -0400

    create workspace before running manticore to make memdump tests pass (#388)

commit 03ee8760052996fac5e5e23b11f50a5c23457cc1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Jul 13 11:57:07 2017 -0400

    Add basic documentation on function modeling (#386)
    
    * Add basic models docs
    
    * Phrasing
    
    * Minor fixes

commit 60fa4c223169384109c6e8187be643fb18f640f1
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jul 12 18:11:08 2017 -0400

    Fix memdump tests broken by dev-events (#377)
    
    * fix memdump tests broken by dev-events
    
    * switch to superset check to account for timeout differences

commit 45d5b9f6d24ea69ac2238821a99c068452ab4295
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Jul 12 17:50:24 2017 -0400

    New state serialization (#376)
    
    * Fix naming
    
    * Separate storage from workspace
    
    * Begin removing output generation from manticore.py
    
    * Split up workspace and output
    
    * Create a separation between output and workspace
    
    * Get it to a working (hacky) state
    
    * Start bringing state serialization into workspace
    
    * More mcore->workspace moves
    
    * Remove unused imports
    
    * Update serializers; add interface
    
    * move state saving to workspace
    
    * can now save/load states and testcases
    
    * Add redis as backend
    
    * Implement streams in terms of values and vice versa
    
    * Implement `ls` and move workspace loading to Workspace
    
    * Better workspace initialization
    
    * Fix how --workspace is parsed for tests
    
    * update tests to new workspace indexes
    
    * Fix state storage and handling
    
    * Doc updates and extra error checking
    
    * pep8 style changes
    
    * Add Executor's 'sync'
    
    * Remove previous workspace artifacts from Executor
    
    * Comment out constraints check assert
    
    * Centralize locking to new testcase ids
    
    * Fix testcase generation
    
    * pep8 updates
    
    * propagate descriptor instead of path
    
    * Add an in-memory state store
    
    * Make memory maps be sortable
    
    * Allow to produce an empty state
    
    * Add workspace tests
    
    * Make Memory.__cmp__() more robust

commit f134ad6fb4a8064aa3b942904671b1014fae9ef3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 11 16:02:32 2017 -0400

    Check for negative fds in fstat (#384)
    
    * check for negative fds in fstat
    
    * use _get_fd

commit c887fb160e05c5e9fd9e7317179363032f003a0e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 11 12:06:33 2017 -0400

    Fix script verbosity (#382)
    
    * fix script verbosity
    
    * show manticore logger
    
    * remove unused MAIN logger

commit b47f0cff14234d351971bc2cada2df206057be54
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 11 11:36:38 2017 -0400

    fix lowering verbosity (#383)

commit b6a71375cfc8e186d8ce4c9d9ba04f3e5ad5b664
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 7 15:43:52 2017 -0400

    Remove md5 tests and replace with set comparison (#374)
    
    * remove md5 tests and replace with comparison
    
    * fix directory path issue
    
    * remove exact check as test is not deterministic
    
    * fix argument assertion test and remove cdet_visited.txt
    
    * allow extra addresses in actual to account for inter-machine differences

commit e4102e50004ba4013e1a742ed9e4f0f8f6d2a869
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 30 17:47:55 2017 -0400

    Catch and refactor MemoryExceptions (#370)
    
    * initial
    
    * Clean, only store address in message if not symbolic
    
    If it's symbolic,it renders like
    
        Generating testcase No. 2 - Invalid symbolic memory access (mode:r) <<manticore.core.smtlib.expression.BitVecAnd object at 0x7fd6dcd14410>>
    
    which is not useful output to the user.
    
    * Format as hex
    
    * Fix tests
    
    * Rm comments

commit fcb375ac76f77b7875b0b389aa00770b0c32565f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jun 29 17:38:41 2017 -0400

    stop double-logging error traces (#369)

commit bd89bfed2494878bf3502d01e6def39e12035277
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Jun 29 16:03:10 2017 -0400

    Only iterate instance variables for forward_signals() (#367)

commit f58cac7451a21dc7d7b4fdb99ac69c3925ae2db4
Author: Corbin Riggs <corbintriggs@gmail.com>
Date:   Thu Jun 29 11:00:34 2017 -0700

    Fixes ConcretizeArgument Misspelling (#366)

commit fcf0024d5d515b4593daeac83bf22b38d982f4d7
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jun 29 12:02:31 2017 -0400

    Fix capstone MOV issue (#365)
    
    * add temporary workaround for capstone bug
    
    * rename cs to rest

commit 7c00b44675808090eb12a9e918314867817554a6
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 28 14:58:23 2017 -0400

    Update docs (#360)
    
    * Update State docs
    
    * Update manticore docs
    
    * Document models
    
    * Doc models
    
    * Use sphinx link

commit b197a47f960dec925ae8d018b13436290e41442f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Jun 27 19:18:41 2017 -0400

    Adjust verbosity settings (#358)
    
    * Show "Generating testcase" message by default
    
    * Rephrase program finished to be less obtuse
    
    * Rm excessive debug print

commit 7d3d9a9ed1d242073d5f98d7d71919b4ecf866f7
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Tue Jun 27 13:52:20 2017 -0500

    lsl.w in thumb mode fixed, plus tests (#350)
    
    - blx <Rm> swaps mode appropriately
    - asr.w and lsr.w in thumb mode handle immediates for op2 correctly
    - unit tests for thumb mode behavior for shifting instructions
    - unit tests check for correct mode on BX and BLX instructions

commit e931992abbf5b9575d6cabe5e9846dec4f045880
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Mon Jun 26 17:22:59 2017 -0500

    Add ldrd and strd instructions and tests (#348)
    
    * LDRD and STRD implementation and tests

commit 520a9be47d4df0cdb4990c3b4f81318574bde8ed
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 26 18:06:18 2017 -0300

    Dev - events (#341)
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * forwarding events wip
    
    * state setstate fix and setup_stack merge fix
    
    * will_terminate_state fix and tests skipped
    
    * Update all ConcretizeRegister and ConcretizeMemory
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * forwarding events wip
    
    * state setstate fix and setup_stack merge fix
    
    * will_terminate_state fix and tests skipped
    
    * Update all ConcretizeRegister and ConcretizeMemory
    
    * Exceptions are crazy crazy crazy
    
    * fix last merge
    
    * Merge merge until it pass
    
    * Instructions count default to 0
    
    * will/did execute/emulate
    
    * Delayed keybpoard interrupt now shutdowns nicely
    
    * fix auto test generator x86
    
    * Undo bad merge
    
    * utterly hopeless
    
    * basic working
    
    * Fix merge bugs and github comments
    
    * Remove unnecesary comment - github comments
    
    * trace_item not used there
    
    * model-platform and system.py fixed
    
    * backup/restore to store/load -- cpu.instruction property
    
    * Slightly better did/will naming and dynamic signal forwarding
    
    * platform.constraints and cpu.instruction as properties
    
    * Fix forward signals getattr
    
    * set las decoded pc at decode_instruction() / reenable instruction_cache
    
    * Signals name convention: did/will/on
    
    * Forward normal signals
    
    * Maintain last decoded pc in abstractcpu
    
    * Changed context manager so it just wont raise interrupt
    
    * Decree now forwards signals and sets constraints
    
    * linux.SymbolicFile does not need to maintain constraints
    
    * remove debbug print
    
    * Assimilating some PR commets
    
    * size_total == size
    
    * better merge of manticore.py
    
    * typo
    
    * Forwarding only specified objects in signal arguments
    
    * Fix few broken tests
    
    * revert + merge
    
    * remove some unused stuff from manticore()
    
    * manticore context <-> executor context
    
    * manticore context <-> executor context2
    
    * context context context
    
    * forgotten return
    
    * Fix basix.arm
    
    * arm bitwise fix
    
    * fix context
    
    * Comment 1
    
    * Comment 2
    
    * Comment 3
    
    * Comment 4
    
    * Comment 5
    
    * Comment 6
    
    * Fix (still needs refactor but it works) profiling
    
    * Fix (still needs refactor but it works) profiling
    
    * The forgotten bit
    
    * Update tests to reflect current output
    
    * Verbosity fix
    
    * Fix verbosity test

commit edbb6130459b993e04ffc534c5f9829271d861e3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 23 18:18:11 2017 -0400

    Add basic binja viz plugin (#347)
    
    * Add basic binja plugin
    
    * Inline lnk
    
    * Better instructions

commit e2c0414dcaa8cec29d3439b24cd73a19d2e6685c
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Fri Jun 23 17:53:19 2017 -0400

    added _multiprocess_can_split_ directive (#351)
    
    * added _multiprocess_can_split_ directive
    
    * renamed Readme

commit 6133a0e2ed98de6a58f3bf574498ec320ccbc43e
Author: Douglas Gastonguay-Goddard <douggard@users.noreply.github.com>
Date:   Thu Jun 22 10:13:21 2017 -0400

    Feature changes to support concrete execution. (#337)
    
    * Feature changes to support concrete execution.
    
    - Add ctypes to lseek for signed seeks. Pass whence to seek.
    - Move mmap and related functions from SLinux to Linux.
    - Introduce function _sys_open_get_file to isolate symbolic code in sys_open to SLinux.
    
    * Remove white space, use super(...)._sys_open_get_file, self.current.address_bit_size.

commit 9a2d19f4980816c8317bcc397582596f392b298f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 21 19:58:09 2017 -0400

    Update README.md to use pypi (#346)
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md

commit 3ec9043b2ec98aae13afbd98142291512a8773ab
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 21 17:48:37 2017 -0400

    Fix verbosity=1  (#345)
    
    * Only enable debug executor after verbosity 1
    
    * Add regression test for checking uniform cli output for nonverbose mode

commit 860d51ebf1f2f3f05bc0505e55f43e23f30666d3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jun 21 16:59:11 2017 -0400

    Fix simple abspath bug (#344)
    
    Fixes #343

commit a3f0d92393de8b162cbea56a64d1d46c0fb65975
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Tue Jun 20 18:14:24 2017 -0400

    Revert "rename getState to get_state (#338)" (#340)
    
    This reverts commit d0465b3f91ad344d0f97312a4b181ca4093c1caf.

commit d0465b3f91ad344d0f97312a4b181ca4093c1caf
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jun 20 17:23:14 2017 -0400

    rename getState to get_state (#338)

commit 3bf529c371595dd36b411d73a4868cb16dff83dd
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Jun 19 16:50:11 2017 -0400

    Activate executor debug logging with verbosity=2 (#310)
    
    Currently, we no verbosity level do we activate debug level logging
    from the executor, however there is significant debug logging in the
    executor for state forking output.

commit 186fa9c8ca8b668e9bc4903d0a327935f1e20452
Author: Scott <scott.heidbrink@gmail.com>
Date:   Thu Jun 15 18:07:52 2017 -0600

    Changed Socket parameters to accept seek paramaters (#308)

commit 285aaf8258f5d1832cfdb5ee9caab7cb13816116
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Thu Jun 15 13:54:24 2017 -0400

    nits for common Socket/File FD operations (#301)
    
    * nits for common Socket/File FD operations
    
    * rev
    
    * _is_open changed to _assert_open throwing IndexError
    
    * reverted NotImplemented in File sync()
    
    * moved sys_fstat from SLinux to Linux & fixes for _assert_open
    
    * nit in sys_write
    
    * comment nits

commit 9abef20b6772710b9d30ae3c5bc184d39cd60dae
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 14 15:56:11 2017 -0400

    Manticore 0.1.2 (#306)
    
    * Manticore 0.1.2
    
    * Update changelog

commit 5109e2835f503904cc467d8864864a769c1ef32e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jun 14 11:23:55 2017 -0400

    Fix building linux examples and test for future failure (#284)
    
    * fix building linux examples and test for future failure
    
    * fix cd back and typo

commit b12224d8a60ad21026116d6dd928caf2ef9c7bc3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jun 14 09:45:59 2017 -0400

    short circuit _getState when queue is empty (#302)

commit 7f550becc6a3ff105bfd57030e0582404557315c
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Tue Jun 13 13:21:19 2017 -0500

    Add mrc and movt
    
    * Add MOVT instruction
    
    * Add new ARM operand types for MRC
    
    * mrc implementation seems to work
    
    * UXTB inst implemented, provisional implementations of LDREX and STREX
    
    * Added unit tests for MRC, MOVT, and UXTB
    
    * Added mode swapping from blx instruction on arm cpu
    
    * Make tests pass

commit 5ea4a87ddb43e25b41642afe8a0bbeeb8ea9c9c1
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jun 12 15:28:57 2017 -0400

    Fix SymbolicMemoryException (#303)
    
    * fix SymbolicMemoryException
    
    * make simple_parse's visited.txt more correct

commit 1f8c4e18c668cc566e2caa868af9b31fd7c9a1f0
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jun 9 17:48:56 2017 -0400

    Move pretty printing into helpers (#299)
    
    * move pretty printing into helpers
    
    * switch to using __str__

commit aa798c652ec36caaa3ed4bfea3c19639fea4a663
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Fri Jun 9 17:35:42 2017 -0400

    make SymbolicFile inherit from File (#298)
    
    * make SymbolicFile inherit from File
    
    * Create linux.py
    
    Nit from merge (restore class to inheriting from File)
    
    * Fixes on file creation
    
    * revert of __stdin__ in assert
    
    * removed asserts in SymbolicFile init

commit 0533fe1d2d5df65e33af71cf3c389e47431fd119
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 9 13:42:49 2017 -0400

    Use global path for workspace (#295)
    
    Temporary hack around simple chdir OS model

commit 595a33d3e0020dd9962c93bf23002e07de0b9ef8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 9 13:42:39 2017 -0400

    Add .sync to regular Files also (#297)

commit 31b39ccf9d560f4ef3eedbbf47c8c4b9a5a9f7d0
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jun 9 11:39:28 2017 -0400

    unskip win32 API test (#294)

commit c7f5600cd1804a3ac74bb8a6dae1bfdf83e5b069
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jun 9 10:47:55 2017 -0400

    unskip basic stdin test (#293)

commit 584206f3f764c28bda51e1e40af873d7329fb77f
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Thu Jun 8 17:39:39 2017 -0400

    fixes #291 for incorrect syscall returns and some indent issues (#292)
    
    * fixes #291 for incorrect syscall returns and some indent issues
    
    * relative import fix
    
    * commented weakref removal

commit 776f6125ad2a8aaa60897c7c244f005b00959ad3
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Jun 8 15:57:20 2017 -0400

    fsync, rename, and a few cleanups (#290)
    
    * Add sys_fsync()
    * Add sys_rename()
    * Fix sys_write return value

commit 586dff2491647651947e077018ba4afcea0a115a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Jun 8 14:03:31 2017 -0400

    Make Linux write(2) work with Files (#289)
    
    * Add is_full() so sys_write can be generic
    
    * Refactor Linux.sys_write to use File/Socket.write
    
    Previously it used .transmit, which does not exist on Files. Remove
    .transmit from Linux.Socket as that's a Decree artifact and it is more
    linuxy to use write
    
    * Support list arguments in File.write
    
    * Revert accidental decree change

commit 22bfedf8bbea3a9aa25d64928c05129292893f23
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 7 17:22:37 2017 -0400

    Fix signal_transmit crash (#286)
    
    * Check if fd is in self.rwait
    
    * Check if set is empty

commit f3a48f23b8d1d44895164a069520d986d2e8f956
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Tue Jun 6 15:27:01 2017 -0400

    removed duplicate type property (#283)

commit b0d967b687da543f1179c94a95c75ae543d1e47c
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jun 6 12:16:30 2017 -0300

    remove callbacks (#282)

commit 45a5393a1bb5e65427456ccf84a3024e396e540f
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Jun 5 16:33:36 2017 -0400

    Remove obsolete ABI code (#281)

commit 2916d7e3aebd662ecbf6883eb280f6f31a9b1fb9
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Jun 5 16:16:54 2017 -0400

    Support tracing (#247)
    
    * Script for generating syscall tables
    
    * Add generated syscall table
    
    * Reintroduce tracing script
    
    * Add configuration options needed by verify.py
    
    * Clean up verify; remove dependency on experimental after_hook
    
    * trace experiments
    
    * reorg verify.py
    
    * Update after merge
    
    * Remove Manticore param
    
    * Remove unused vars
    
    * Use regfile api; redo last_instr check
    
    * Fix gdb->mcore name descrepancy
    
    * Move kwargs to explicit args for Linux/SLinux
    
     * Maintain options in makeLinux to not overcomplicate the Manticore
       class
    
    * Address merge issues
    
    * remove debug stmt
    
    * Reintroduce options
    
    * Revert linux.py/manticore.py from master
    
    * Use the qemu -s and -R flags
    
    * Import syscalls table from master
    
    * And import extract_syscalls.py script
    
    * Fix verify reference
    
    * Move syscall to arg
    
    * Update register references
    
    * Simplify last instruction check
    
    * Add logging filter to TRACE logger as well
    
    * Be consistent with state synchronization
    
    * Be explicit about gdb types
    
    * Improve mmap debug output
    
    * Return error if ioctl is not implemented
    
    * Fix syscall sync
    
    * Make logging more self-contained
    
    * Use errno const in ioctl impl

commit 14499f7ba84c492051a1d06ab4d7bb404bffa285
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jun 5 14:49:39 2017 -0400

    Add solve_buffer to API (#280)
    
    * add solve_buffer to api and update google ctf script to use it
    
    * start adding push/pop_constraints functionality
    
    * remove push/pop constraints, just use with
    
    * add mark's changes
    
    * add solve_buffer to api.rst
    
    * fix typo

commit 573d17149147de8d5f65f3a50adbf454c71abf98
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Mon Jun 5 19:25:49 2017 +0300

    Add input-related features (#248)
    
    * Add input-related features
    * Add add_symbolic_file() function to Manticore
          -> Add symbolic file: m.add_symbolic_file('file.txt')
          -> 'symbolic.txt' is not longer a default symb file
    * Symb files are generated by Executor.generate_testcase()
    * Add generate_inputs() function to State
          -> can be called by an user-level script
    
    * Use of Executor._getFilename to generate symb files in the workspace
    
    * Consolidate the filename of generated symb files
    
    * - replace % with format in executor.generate_testcase / state.generate_inputs
    - replace file() with open() in executor.generate_testcase / state.generate_inputs
    - replace hasasttr with getattr in executor.generate_testcase / state.generate_inputs
    - use None as default arguments for symbolic_files
    
    * file -> open
    
    * Simplify symbolic_files param
    
    * Make filename uniform
    
    * Docstring clean

commit 5b5392e54dd3a653adfdae8c09198ceaf73042cf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed May 31 15:48:19 2017 -0400

    Implement user variadic model interface (#276)
    
    * Add variadic decorator
    
    * Add check for _variadic func attribute
    
    * Expose @variadic at top level
    
    * Use variable for the actual name of attr
    
    * Update naming
    
    * Use helper
    
    * Maybe more pythonic?
    
    * Add variadic to public API
    
    * Add variadic decorator tests
    
    * Clean
    
    * Remove variadic parameter
    
    * Add docstrings
    
    * Document parameter
    
    * Clean
    
    * Better use of autodoc
    
    * Update docstring
    
    * Add todo comment

commit aeca64285a4c6d73ce749ce3d6556d232d52f27e
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Fri May 26 22:28:22 2017 +0300

    Optimizations and bug fixes in smt formulas (#249)
    
    * Remove the use of the incremental mode in get_all_values
    
    * Improvement and bug fixes in visitor.py
    * PretyPrinter: Remove dupplicate printed information
    * TranslatorSmtLib: Remove dupplicate operands in the generated formulas
    * ConstantFolderSimplifier:
      * Add new operators (BitVecZeroExtand / BitVecExtract)
      * Add no-trivial operators into the operations dict
          -> users can known that these operators are handled
    * ArithmeticSimplifier:
      * Use of a recursive approach to visit expression (faster)
      * Fix the missing calls to no-trivial operators for constant folding
      * Add new operator (ArraySelect)
    
    * Fix issues on corner cases (tests/travis_test.sh ok)
    
    ArithmeticSimplifier: recursive approach less interesting in travis_test.sh
    Use a stack approach, which includes bugfixes of the original
    
    * - Call direclty constant_folder() in ArithmeticSimplifier
    - Remove None bindings in ConstantFolderSimplifier.operators
    - Move the fixed point thing direclty to the Visitors.visit (new parameter: use_fixed_point)
    
    * - Calling constant_folder only if all operands are constants
    - Add None default attribute to getattr

commit 0b710dd86a3dd5b0661074559231783d4a3a5411
Author: Yan <yan@users.noreply.github.com>
Date:   Fri May 26 11:50:39 2017 -0400

    Add basic syscalls (#270)
    
    * Add sys_umask and sys_chdir

commit 8354ded7e0ae0b2d439fa8b87afacd6a3f04f024
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 25 16:22:08 2017 -0400

    Test hook api (#274)

commit c2b0617f32d43984babcaa109b98b7a1f7fb9175
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 25 16:04:34 2017 -0400

    Check returncode of manticore (#273)

commit d87c983b9881362545fa3ce580b1bc4c4d07c1a4
Author: David Manouchehri <manouchehri@riseup.net>
Date:   Wed May 24 17:49:37 2017 -0400

    Added Dockerfile. (#240)
    
    * Added Dockerfile.
    
    * Changes as requested by @japesinator.

commit 124c9d6de5cf35fd42c445866635ea2d2613690e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed May 24 16:09:48 2017 -0500

    Add manticore-examples to README and remove google challenge (#271)
    
    * add manticore-examples to README and remove google challenge
    
    * re-do usage section and add manticore-examples repo

commit 452c92a340e06574e22380931315943ae8daf516
Author: Yan <yan@users.noreply.github.com>
Date:   Wed May 24 15:15:50 2017 -0400

    Update fstat/fstat64, add few syscall wrappers (#261)
    
    * mmap; newstat; exit; sigprocmask syscall wrappers
    
    * Fix fstat and fstat64 implementations
    
    * use st_blocks/st_blksize
    
    * Experiment with fstat structs
    
    * Make uname more verbose
    
    * Fix uname implementation
    
    * Fix newfstat
    
    * Fix fstat64
    
    * Fix fstat
    
    * Refactor uname

commit 3c977719f0fb8f3efae2a60785f620c4ec333ebd
Author: Yan <yan@users.noreply.github.com>
Date:   Tue May 23 15:30:58 2017 -0400

    Linux platform refactoring (#264)
    
    * Clean up model syscall invocation
    * Move read_string to Cpu
    * move push/pop helpers to Cpu
    * Reorg Linux initialization
    * Update linux test
    * fstat64 test harness
    * assert read_string only considers concrete bytes
    * Ensure that correct aliases exist during ctor
    * Improve alias check

commit 475f786f219ca4a154b56f7ad0238a192542cc64
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue May 23 15:21:48 2017 -0300

    Fix x86.PUNPCKL emulation (#259)
    
    * Fix x86.PUNPCKL emulation
    
    * trace check wip
    
    * PUNPCKH/L and Readlink /proc
    
    * PUNPCK fixes
    
    * remove debug traceback
    
    * rename arguments insteag of commenting them
    
    * fix comment

commit ea4f8edfd4f716c8c4671e3ee4df1d401d50a11f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon May 22 14:14:27 2017 -0500

    remove default nsolves parameter from solve_n (#266)

commit 0029c8fdc5ffa5c414a31545f773b4f08c83c614
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon May 22 14:14:03 2017 -0500

    refactor the verbosity interface to look cleaner (#265)

commit b381c4e04d3b0e4b0bac1a438075859953e83aab
Author: Sascha Schirra <sashs82@gmail.com>
Date:   Fri May 19 21:49:22 2017 +0200

    VORPD and VORPS instructions added (#258)

commit 8840e31fc223de7275dc96e74424e0a19f0ad34a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 18 16:59:44 2017 -0400

    Add strlen model (#260)
    
    * add models
    
    * wip strcmp tests
    
    * t
    
    * Add some tests
    
    * Better asserts
    
    * More pythonic
    
    * Add effectivene null test
    
    * init strlen
    
    * pythonic range
    
    * clean
    
    * docstring
    
    * tmp
    
    * stuff
    
    * stuff
    
    * Complete test
    
    * Add another test
    
    * Doc
    
    * clean
    
    * Add symbolic arg check
    
    * Fix tests
    
    * Make arch generic
    
    * Clean comment
    
    * Add basic unconstrained test

commit 10f7531caee3c58c127aa2ecefe535c68df95a27
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu May 18 11:19:14 2017 -0500

    Use newer, less broken capstone version (#262)
    
    * use newer, less broken capstone version
    
    * fix documentation

commit 92eaf76236cfd3384656f5292325744539639f03
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed May 17 11:44:10 2017 -0400

    Add strcmp model (#251)
    
    * add models
    
    * wip strcmp tests
    
    * t
    
    * Add some tests
    
    * Better asserts
    
    * More pythonic
    
    * Add effectivene null test
    
    * Handle symbolic pointer arguments

commit e5aca50e1f725ae62f9c9c9af4b413dbc50c9c98
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon May 15 17:38:22 2017 -0400

    Don't use string=True for symbolic arg/env (#256)
    
    This very strictly constrains the arg/env to the length of the symbolic
    string which is too strict for many use cases.
    
    For example:
    
    manticore ./bin +++++
    
    that symbolic string would only be allowed to be strings of length 5,
    and no shorter.

commit 42c28e02568f14edd2c10d5046384a28bc776bbb
Author: Yan <yan@users.noreply.github.com>
Date:   Mon May 15 16:07:01 2017 -0400

    Handle missing syscalls with correct exception (#255)

commit 2202b0a27d0548e8a962597899489d20019d134d
Author: Yan <yan@users.noreply.github.com>
Date:   Mon May 15 15:11:54 2017 -0400

    Generate NRs for ARM-specific syscalls (#254)

commit 42955387a566042f36be8ca0d74724d6ee7144f4
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 12 17:31:59 2017 -0400

    Don't make concrete bytes symbolic, only wildcard bytes (#252)

commit 7700112d9e54880669c8c9dc04c9cc60b34547c6
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 12 11:35:59 2017 -0400

    Rm unused Slinux ctor params (#250)
    
    * Rm unused Slinux ctor params
    
    Fixes #109
    
    * Add back constraitns
    
    * Make argv and envp default params
    
    * Use ternary
    
    * nit
    
    * Clean test_unicorn
    
    * Correct envp and docstring

commit 1e76998eb78fd2b3240e1131c5480f02c2335620
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 11 13:25:43 2017 -0400

    Add infrastructure for core models (#244)
    
    * Rename libc.py to models.py
    
    * Clean old unused libc.py code
    
    * Make models top level importable
    
    * Add State level model invocation function
    
    So user is not required to pass in state at to a platform level func
    
    * Explicitly mark what is in the public API
    
    Protects against accidentally making something a public API just because
    it has a docstring
    
    * clean
    
    * Move models.py to top level
    
    * Rm models
    
    * Fix docstring typo
    
    * Add default param name, move comment
    
    * Update docstring

commit a0717aa661c0b04d5f73879b265da4da05756630
Author: Yan <yan@users.noreply.github.com>
Date:   Thu May 11 12:20:00 2017 -0400

    Syscall table rework (#245)
    
    * Script for generating syscall tables from Linux src (pulled from kernel.org)
    
    * Add generated syscall table
    
    * Update syscall names to match extracted entries
    
    * Move to new syscall dispatcher
    
    * Add machine def to x86 cpus

commit a10b7bae29ac84e3ce2679a12393abd280a62cbe
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed May 10 19:44:55 2017 -0400

    Update parallel processing api (#246)
    
    * Remove m.workers, add run(procs=), update docs
    
    * Update docs

commit e4a49165973f50354d0931f81f8e179dfa4e7a6d
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue May 9 19:25:32 2017 -0400

    Rename os model terminology from "models" to "platforms" (#243)
    
    * Rename
    
    * rename in manticore.py
    
    * rename in executor.py
    
    * big rename
    
    * big rename
    
    * update changelog

commit b8991e0c6415465bb4c9df36885295916324dff5
Author: Cory Duplantis <cld251@gmail.com>
Date:   Tue May 9 18:35:38 2017 -0400

    Add Google2016 unbreakable challenge to examples repo (#194)
    
    * Add Google2016 unbreakable challenge to examples repo
    
    * Add Google2016 unbreakable challenge to examples repo
    
    state.add instead of state.constraints.add
    
    * Update constraints API

commit 3c9653d1d7dcae8b8f31357e7c575f815f4471ca
Author: Yan <yan@users.noreply.github.com>
Date:   Tue May 9 16:13:08 2017 -0400

    Update syscall/funcall implementation (#213)
    
    * Wrap ABI semantics in its own class hierarchy
    
    * Define a model invocation for syscalls and function calls
    
    * Add unit tests for ABI
    
    * Add a common base class for Platform models

commit 3873c3eb5d4c583e42a3ed6663edb62133ec1890
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon May 8 15:39:18 2017 -0400

    Document m.context API (#238)

commit fca086ea458cd2b2ab31c174078bacebca461ff1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon May 8 15:14:37 2017 -0400

    Add hack for Unicorn YMM registers (#239)

commit 395a40a646bc1d7fb1e54a165c99aa0e7914125d
Author: Yan <yan@users.noreply.github.com>
Date:   Mon May 8 14:32:54 2017 -0400

    Add memory tracing (#203)
    
    * implement memory write tracing
    
    * Comment updates
    
    * Add memory trace tests
    
    * make sure we ignore erroring writes
    
    * Address comments
    
    * remove superfluous return annotation

commit 868bdd80cefbbb0865017c12d60257f7d2913fdf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 5 15:21:52 2017 -0400

    Manticore 0.1.1 (#234)

commit 44d365ff4c50fb9ee829ef5f830dfb6dd421eb9c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 5 13:31:43 2017 -0400

    Formalize API for constraining a State (#232)
    
    * Rename state.add to state.constrain
    
    * Update all uses of state.constrain
    
    * Rm check param
    
    * Added changelog
    
    * Update changelog
    
    * Update
    
    * Minor clean

commit 50fd50ee1206d356d11864e08b4377cb99697960
Author: Yan <yan@users.noreply.github.com>
Date:   Fri May 5 13:11:59 2017 -0400

    Simplify linux model interfaces (#233)

commit aafc0e72849dbb1be3e072923642289355c1e3eb
Author: Tim Deeb-Swihart <chronoslynx@users.noreply.github.com>
Date:   Fri May 5 12:43:22 2017 -0400

    Fix handling of Z3 result in optimize due to nondeterministic output ordering (#226) (#227)

commit d9baedeeac1586e82a2f04de08db5f7f83977335
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Fri May 5 18:33:42 2017 +0200

    sys_sigprocmask: the second method parameter has to be the cpu instance (#229)

commit 64d1ed51f2d4f6e64c95461f74d4e083abf0b4e8
Author: Yan <yan@users.noreply.github.com>
Date:   Thu May 4 17:36:39 2017 -0400

    Decode instruction early (#205)
    
    * Move PC verification to decode_instruction
    
    * Decode instruction in executor
    
    * Fix unicorn tests
    
    * remove decoded_pc
    
    * use issymbolic()

commit 93f9d77f401d949d05e8c8683d1c0a9d7c5031ef
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu May 4 14:40:22 2017 -0500

    Switch to ssh-style verbosity CLI flags (#222)
    
    * switch to ssh-style verbosity CLI flags
    
    * add register logging to level 4

commit 538dfea8fe4144483a942ae99f6c5fb7574003d4
Author: Tim Deeb-Swihart <chronoslynx@users.noreply.github.com>
Date:   Wed May 3 14:05:03 2017 -0400

    Fix incorrect syscall arg regs for X86 (#224) (#228)
    
    i386 and amd64 had their register sets reversed. This fixes that.

commit af2676402c9821d5ebbfe77cc01452f111908377
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 23:33:29 2017 +0200

    Implemented sys_readv system call (#217)
    
    * Implemented sys_readv system call
    
    * sys_readv and sys_writev are now independent of the system bitness

commit b19a158b6f4e01b31c6b1f46504019fa4fb240e5
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue May 2 18:04:07 2017 -0300

    Clean and document some example/linux (#176)
    
    * Clean arguments.c
    
    * Increase query timeout from 30 to 120 seconds
    
    * Example documentation updated
    
    * Add ibranch comments
    
    * crackme.py, ibranch, sindex and typos
    
    * indexhell
    
    * visitad typo
    
    * typo
    
    * strncmp example
    
    * Typos

commit f4e5bcf53e6055f1de17066fd963a72e2694ac3e
Author: Manas George <manas3george@gmail.com>
Date:   Tue May 2 14:55:02 2017 -0400

    refactored will_execute_pc hooks (#214)
    
    * Refactored will_execute_pc hooks
    
    * Fixed typos
    
    * Figured out why the simple_parse test was failing
    
    * Figured out why the simple_parse test was failing
    
    * Figured out why the simple_parse test was failing
    
    * Figured out why the simple_parse test was failing
    
    Cleanup
    
    * Cleanup
    
    * removed TODO from executor.py
    
    * refactored line in forking handling in executor.py
    
    * removed extraneous space in manticore.py
    
    * removed --exe flag from nosetests command

commit 0061ee5c481ce7c6ec375a2f1f69bcd4a346d217
Author: Simon Bourne <simonbourne@enhedron.com>
Date:   Tue May 2 14:49:49 2017 +0100

    CPUID now reports that extended features are unsupported (as unicorn doesn't support them). (#211)

commit 05831621331c12c526571d2d7d524be74340398b
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Tue May 2 03:07:45 2017 +0200

    Fix wrong variable name in SymbolicFile (#220)

commit 9e87d1dfa65cdce3dba3e45ad088e1f26de13f8e
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 02:54:27 2017 +0200

    Added sys_ioctl to 64-bit syscall table (#218)

commit aabf5777ee70a7437db69253787ba3fe7aa6eaa7
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 01:03:52 2017 +0200

    Use correct value for AT_PHENT (#216)

commit 94e6e76919ed3a4dd67a558d2ce57ddbc92ab109
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 00:23:00 2017 +0200

    Fixed wrong syscall number for sys_faccessat (#215)

commit f7598e53c004f24a2d351c69be79a34cd28f1ab6
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Apr 28 12:17:17 2017 -0500

    Only make registers appear on verbosity level 5 (#198)
    
    * make --verbose output more useful
    
    * refactor and rename rendering functions
    
    * refactor to use join
    
    * make sure str returns a value

commit 8d6bcadb3752010943fd6645a13e2c3457d69ac9
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Apr 27 16:36:23 2017 -0400

    Fix RSB, VLDMIA; Add RSC (#197)
    
    * Fix RSB; Add RSC
    * Fix vldmia semantics
    * To trigger build

commit 7e46db52169ee1123728499d66b11184d7b9c39e
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:48:28 2017 -0400

    oops

commit 1836c2d266e9cbed18739bba10d1a8157c5a518c
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:37:38 2017 -0400

    no more sudo

commit d1b0abba6c41215dcb84a819319e3ad0a762abdf
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:37:20 2017 -0400

    try removing sudo

commit 788a5de23ce2ca64da64eac1e5f3a172507386e9
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:37:15 2017 -0400

    .com -> .org

commit c78ea5c9109191654d26c7bfd2bedd662dafcdc5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 26 15:24:27 2017 -0400

    Use lowercase name in setup.py (#192)

commit e4506dc02993d8df1207e397b9f656db69ca3880
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 26 14:57:24 2017 -0400

    Add more fields for pypi (#191)
    
    * Add more fields for pypi
    
    * Add author

commit 44dff1745d2c5952fb947d13e26b0177bdd6221a
Author: Dan Guido <dan@trailofbits.com>
Date:   Mon Apr 24 17:24:29 2017 -0400

    Add readthedocs (#179)
    
    * Add readthedocs badge
    
    * Add rtd intro
    
    * Add API reference link
    
    * change the order
    
    wiki first, because that’s where the majority of the docs live

commit 8b973064d19cc04e4e39ef0714f894c1d4b6d278
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 17:06:47 2017 -0400

    Add read the docs mock (#180)
    
    * Add read the docs mock
    
    * Only mock if 'z3 in first arg to check_output

commit c2fb359b829237e25f46ab977d7670031f6621ba
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 15:09:15 2017 -0400

    Fix LDR/STR writeback (#175)
    
    if a ldr used the same reg for dest and writeback offset, we'd
    compute writeback wrong because we'd run the insn and then use the new
    value in computing writeback

commit fbe3a197ba23f0f9da74b59f660dd1c717010f5a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 12:19:10 2017 -0400

    Install instructions updates (#171)
    
    * Install instructions updates
    
    * Update README.md
    
    * also need pip
    
    * need to update, plus compact a few things
    
    * add -y
    
    * grammar?
    
    * typos
    
    * Add bountysource link
    
    * consistency
    
    * Point users to the examples dir and wiki
    
    I thought these links were cluttering things a bit, and 2 out of 3 of
    them aren’t official documentation yet we’re linking to them in the
    first line of the README. I updated the wiki to address these directly
    in a way I think is more clear.
    
    * link to Z3 releases
    
    * oops, don't know where that came from
    
    * ensure people run the latest pip
    
    * be more explicit
    
    * Add an Issue Template
    
    * be more explicit
    
    * no longer appropriate here
    
    * unnecessary
    
    * add note about 16.04
    
    * move issue template to hidden folder
    
    * Spelling
    
    * be explicit, makes copy/paste easier

commit fd3873f0a872c2e37a82adafee86822bb75e9967
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 11:31:11 2017 -0400

    Fix ARM bitwise (LSL/LSR) (#174)
    
    * Rm bogus asserts
    
    * correct lsl_c
    
    * Add test for lsl carry

commit fe9d4f0f6b8d9d6100a0a76d151569c5706e49e4
Author: Dan Guido <dan@trailofbits.com>
Date:   Sat Apr 22 19:30:00 2017 -0400

    Remove notifications to Slack (#167)

commit edf0ee299b08d3d7a44561f4e30f0d59d85990d4
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 21:31:12 2017 -0400

    Remove arch specific auxv (#173)

commit 87971cca1a3f8cd4e8ed2158508e3aec8baef65f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 20:08:30 2017 -0400

    Add arm LDCL (#172)

commit 04aa03c85eba7445442098fedbb8f7949ba95e92
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 15:18:56 2017 -0400

    Update README.md (#165)

commit f552383e1605388221c53d813e1a120d60d1f676
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 14:59:06 2017 -0400

    Add example taint usage (#161)
    
    * Add example taint usage
    
    - use new_symbolic_value API instead, because it's making an int symbolic
    - add every instruction hook that checks for tainted data in operands
    
    * update readme with taint example

commit 130b4dc739420e9dcc60619c603b8e261fc009a4
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Apr 21 12:21:05 2017 -0500

    allow multiple --env arguments (#158)

commit 8c5cc6d4b0b8cefa1c4c2276bac5b00410d7657a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 13:00:41 2017 -0400

    Add links to eric's writeup in readme (#157)
    
    * Update README.md
    
    * Update README.md

commit 54bfdf163b993b179d8ca29f3113f737fdba3c7f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Apr 20 21:29:28 2017 -0500

    remove procs limit (#155)

commit a52be7459d8d03dced30a16e91d728e0147bedc3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 20 15:30:50 2017 -0400

    Arm add vldmia (#154)
    
    * Add VLDMIA
    
    * Add vldmia tests

commit 5ae5daa5c4f22cbe17ff951c8c52ce106461eaa1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 20 15:05:08 2017 -0400

    Fix arm offset calculation (#152)
    
    * Fix offset calculation
    
    .subtracted is unreliable, and .disp has the sign anyway
    
    * Use .subtracted for reg offsets

commit 4ad028b0df5472b2b29ed5eacff775f6afbb3dda
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 20 14:03:35 2017 -0400

    Fix arm/x86(32) linux stat (#153)
    
    * Fix sys_fstat
    
    i'm pretty sure it was totally wrong before, in terms of how it laid
    out the struct
    
    I'm based this on using arm-linux-gnueabi-gcc -E
    which shows me this struct:
    
    struct stat
      {
        __dev_t st_dev;
        unsigned short int __pad1;
    
        __ino_t st_ino;
    
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short int __pad2;
    
        __off_t st_size;
    
        __blksize_t st_blksize;
    
        __blkcnt_t st_blocks;
    # 72 "/usr/arm-linux-gnueabi/include/bits/stat.h" 3
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
    # 87 "/usr/arm-linux-gnueabi/include/bits/stat.h" 3
        unsigned long int __glibc_reserved4;
        unsigned long int __glibc_reserved5;
    
      };
    
    * Add stat32
    
    * Minor

commit 87073d9985c4ca445217b7b135a6af0a51044b21
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 19 15:06:31 2017 -0400

    rm files (#151)
    
    * rm
    
    * bye

commit 9ca1f4a43aeb53ed3b146a37f4688d6c9a6acbaa
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Apr 19 14:28:46 2017 -0400

    Clean up output (#150)
    
    * Quiet down some error messages
    * Address comments

commit 1171b3a37f3e73a89d26dfaba04f07362fb49f4e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 19 14:23:36 2017 -0400

    Update README.md: restructure, z3 install (#149)
    
    * Update README.md
    
    * Remove FAQ -> plan to move to wiki
    
    * Rough cut
    
    * Moved quickstart a little lower, but still above the fold
    * Added more complete list of requirements
    * Added full instructions to quickstart
    * Clarified Installation instruction options
    * Moved extra details about why requirements are what they are to FAQ
    
    * less is more
    
    * Minor updates

commit daab8a58241c83522bb4c9f05d03dc72fea1e636
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Apr 19 14:12:58 2017 -0400

    Add examples (#145)
    
    * intermediate example commit
    * Added more state_explore examples (w/ new_symbolic_buffer)
    * Actually comment out verbosity
    * rename
    * Add comment mentioning symbolicate_buffer
    * Update comments
    * Fix issue with limited exploration
    * Clear up wording
    * Update descriptions
    * Remove reference to symbolicate_buffer
    * Clean up state_explore.c header
    * move .c to src/

commit 648ddf10abf96d7b1c2e8f2ff5a6b69f502af001
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Apr 19 14:19:15 2017 -0300

    Capstone operand type cornered to one function (#107)
    
    * begin refactoring logging to use manticore object
    
    * fix verbosity things
    
    * fix logging when in scripts
    
    * remove m.log_file now that it's no longer used
    
    * remove unnecessary init_logging usage and unused log_debug variable
    
    * accidentally deleted the wrong line
    
    * re-hide init_logging
    
    * remove old log_debug
    
    * remove unnecessary API stuff and refactor around that
    
    * Capstone operand type cornered to one function
    
    * Un-inline type_map
    
    * Immediate fix to lacking immediate
    
    * Add FAQ about relationship to CRS
    
    * add link to Grr
    
    * reorder instructions
    
    * passive voice
    
    * add slack badge
    
    * begin refactoring logging to use manticore object
    
    * fix verbosity things
    
    * fix logging when in scripts
    
    * remove m.log_file now that it's no longer used
    
    * remove unnecessary init_logging usage and unused log_debug variable
    
    * accidentally deleted the wrong line
    
    * re-hide init_logging
    
    * remove old log_debug
    
    * remove unnecessary API stuff and refactor around that
    
    * Capstone operand type cornered to one function
    
    * Un-inline type_map
    
    * Immediate fix to lacking immediate
    
    * Add FAQ about relationship to CRS
    
    * add link to Grr
    
    * reorder instructions
    
    * passive voice
    
    * add slack badge
    
    * Rebasing noise
    
    * rebase noise
    
    * Operand.reg moved up to Operand

commit b6123321326764c44898011d31f4c764a4a0abe7
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Apr 19 11:50:17 2017 -0400

    Spelling fixes (#148)
    
    * Spelling fixes

commit 3e81cba8fb0476ba18d0b2562a00db740cd57b5f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 19 10:29:05 2017 -0400

    Fix linter issues on cpu (#144)
    
    * quick linter stuff
    
    * Fix cpu init in tests
    
    * update cpu name

commit e32701f97892f9dd30994a7718df18baa44e366a
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Apr 19 01:21:14 2017 -0500

    Refactor logging (#140)
    
    * begin refactoring logging to use manticore object
    
    * fix verbosity things
    
    * fix logging when in scripts
    
    * remove m.log_file now that it's no longer used
    
    * remove unnecessary init_logging usage and unused log_debug variable
    
    * accidentally deleted the wrong line
    
    * re-hide init_logging
    
    * remove old log_debug
    
    * remove unnecessary API stuff and refactor around that
    
    * re-introduce logging PR
    
    * fix Popen
    
    * lost a line in merge
    
    * fix test_binaries
    
    * Log to stdout instead of stderr
    
    * implement mark's changes

commit 65df1cbe35781ed953ce1016d7b26a8aad11cfe2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 18:56:58 2017 -0400

    Fix bad reference to args (#146)

commit a9711cf11969cf2c40756b911f12245bc0db529b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Apr 18 18:40:06 2017 -0300

    Graceful fallback if Z3 doesn't support optimization queries (#135)
    
    * Configure Z3 depending on installed version
    
    * Mocking for subprocess.check_output
    
    * change get_value_fmt to private attribute _get_value_fmt
    
    * Move memoized to utils
    
    * Remove minimal version and simplify
    
    * Re-add invalid versions/sanity checks
    
    * Z3 version format checked on github
    
    * New tests. Version is future proof
    
    * Better logging

commit f6f20b5210dbbfb04d7378c3cf6bff6a8fb88618
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 16:21:28 2017 -0400

    Register stat64 for 32bit syscalls (#142)

commit d8335dcd97d18e70cc5934a7ca115b57bc68e908
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 15:39:04 2017 -0400

    track sys_writev32 (#143)

commit 531f24581796a22735233559d22c99727b729c3f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 14:00:13 2017 -0400

    Fix arm PUSH (#141)
    
    If sp is in the list, it gets pushed incorrectly because it gets
    updated by the stack_pushes for registers that occur before it

commit 398e4d251070c042f47314ef19212b2a6ae70994
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 17 16:58:34 2017 -0400

    README + Output updates (#139)
    
    * Importing Dan's README
    * Reintroduce etcd's pr

commit 05b7c1138bc059aeb0ba7ff2c1a6d52b82ea06df
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 13 18:45:18 2017 -0400

    Fix memory._ceil, Fix linux.load (#134)
    
    * Reimplement ceil so page aligned addresses are unaffected
    
    * Lingering fix
    
    * Fixup users of _ceil
    
    * Correct memory tests

commit bbfb234cca87ff985ca532594eea2900c3a02e38
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Apr 13 19:22:04 2017 -0300

    Dev fix amd64 emulation bugs (#136)
    
    * Failing tests
    
    * Tha Fix
    
    * Fix auto test
    
    * PSLLDQ for 32b python?
    
    * More descriptive temporary variable

commit 43d766925292353ecbcc4d162898a5e1dd613e64
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 11 14:21:18 2017 -0400

    Create stderr file, also watch sys_writev (#129)

commit ebd0a8be72d6e52c1baead07bb80c9028eb844fe
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 11 09:47:05 2017 -0400

    Fix linter bugs from model (#122)
    
    * liux
    
    * easy
    
    * fix
    
    * more
    
    * import

commit b02b551911db14ca9ca20217468192b722687e59
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 10 17:22:02 2017 -0400

    Update README/travis (#126)
    
    * Update travis install to match README
    
    * Fix README error
    
    Placement of the -e is important, apparently

commit 5870211b1eff13ddb397095e499d2f837feda800
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 10 17:10:40 2017 -0400

    More gracefully handle uninstalled z3 (#127)
    
    * More gracefully handle uninstalled z3
    
    * Use better error

commit 801e20aa4cfa997ee85603d654f23e528cfd2b1f
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 10 17:06:47 2017 -0400

    Update docstrings to sphinx format (#119)
    
    * Update docstrings to sphinx format
    * Update various docstrings
    * Add more docstrings and update sphinx docs
    * fix trailing colons on returns

commit 5c112e56f3352224beb25c6625e52816c7a4f045
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 10 14:31:51 2017 -0400

    Add brief example descriptions to README (#120)
    
    * Added brief example descriptions to README
    * Update config script
    * Update sym.py API usage
    * Remove individual example descriptions
    * fix mcore init
    * consistently document examples
    * make basic_sym runnable
    * More path fixes
    * cleanup; update api

commit a41eb6febaf4705a607ec934c7ffc73050f17389
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Apr 10 12:40:45 2017 -0500

    Fix typo in linux.py (#116)

commit 99a3327b8d10fa9b6c6fd96b39483ced891d2491
Author: Dan Guido <dan@trailofbits.com>
Date:   Sat Apr 8 16:24:45 2017 -0400

    Condense some of the instructions, add slack badge

commit 1bcadfed4d1038a6e9b2ca81a4b8cf2606885cf4
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Apr 6 10:39:45 2017 -0500

    Add memory corruption example (#124)
    
    * add memory corruption example
    
    * put binary in proper folder

commit ccd473b88e0e79294eb82ba26cd73b14013527af
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Apr 6 09:39:07 2017 -0500

    add partial solves for multiple-styles (#123)

commit 0b850dba406a49dbb388394dd04a36540b33ed8b
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 3 16:00:49 2017 -0400

    Make unicorn be pull-based (#97)
    
    * Enable simple ARM register concretization for Unicorn
    
    * Add canonical_registers property to abstractcpu
    
    * cpu to self
    
    * Check for regs_access better
    
    * Emulate a single instruction
    
    * Bypass capstone 3.0.4 arm bug
    
    * Dealing with capstone
    
    * Temporary disable ASR and remobe BitVec.Bool from test
    
    * WIP WIP debug prints WIP WIP
    
    * Unicorn fallback working (using unicorn master)
    
    * HAck to support unicorn 1.0.0
    
    * WIP
    
    * Unicorn hack to handle PC updates
    
    * [WIP] do not do anything with this commit; for debugging only
    
    * Adding before clean up
    
    * emulation more or less works; need to work out more unicorn bugs
    
    * clean up emulate() caller code
    
    * move hooks to methods; cleanup
    
    * Concretize memory when emulating
    
    * Re-add Bool()
    
    * Update tests to start at offset 4
    
     When an instruction branches to the previous instruction,
    Unicorn attempts to dereference that memory. We'd like to use
    unit tests to also make sure Unicorn emulation is in line with
    our own semantics. If we start all tests at offset 4, we can
    jump to a previous instruction and not fault when Unicorn
    dereferences it.
    
    * Fix concretization
    
    * Clean up test imports; upper-case Cpu
    
    * Unicorn tests
    
     * Add tests for all the ARM semantics, but make sure they're equivalent
       on unicorn.
     * Add a few tests to make sure unicorn correctly concretizes the memory
       it references
    
    * Fix broken import
    
    * Add symbolic register tests
    
    * Re-introduce the unicorn hack
    
    * Add the 'ONE' concretization policy
    
    * Rm unused function
    
    * Update concretization; add comments
    
    * Add ONE policy test
    
    * Create a base class for all concretization exceptions
    
    * Remove Armv7Cpu._concretize_registers
    
    * Check for enabled logging in a more idiomatic way
    
    * [wip] intermediate testing commit
    
    * Reimplement hooks and execution with unicorn
    
    * Add a DMB (mem barrier) instruction; nop
    
    * simplify instruction resolution
    
    * improve unicorn error handling
    
    * explicitly delete emu
    
    * Handle ARM helpers inline
    
    * map fetched memory
    
    * Narrow exception handling
    
    * Update DMB docs; make __kuser_dmb match real implementation
    
    * Fix typo; add comment; remove extraneous parameter
    
    * typos++

commit 0ad327522bc8b4c3bfca0d34d7b3d53d47d5b5a8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 3 14:41:06 2017 -0400

    Update readme (#117)
    
    * Update readme
    
    - eliminate duplicated install instructions
    - document pip version
    - explicitly add capstone/keystone workarounds
    
    * Update
    
    * spelling

commit ffe758f5f37a2bed71a0c9069a5779acc6427760
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 31 13:22:59 2017 -0400

    Fix interpreter loader (#115)
    
    * Correctly compute total interp size
    
    * Rename
    
    * Make staticmethod
    
    * Add basic loading test

commit 83cb4de82535f51aca452ef9f26aea174b4c036c
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 28 15:45:08 2017 -0300

    Dev fix load interpreter (#96)
    
    * Fix interpreter load
    
    * turn off some debug
    
    * cuack
    
    * Correct loader condition (#111)
    
    * Rm unnecessary condition
    
    We always want to run this code if there is an interpreter present, not
    just if the exe is ET_DYN
    
    * Add correct interp header type check

commit dbb63cfa344148f02ad2f883bbec85668358f1bb
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 28 14:48:23 2017 -0300

    Dev stoping criteria (#108)
    
    * no-mp not uset and redundant
    
    * Add timeout
    
    * Unused args reremoved timeout readded
    
    * no-mp not uset and redundant
    
    * Add timeout
    
    * Unused args reremoved timeout readded
    
    * Move import to the top op op op

commit db6370bf87a06864c012f077a35e360b433c92c3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Mar 28 12:16:41 2017 -0500

    Remove redundant pstats import (#113)

commit 1ad9a8803249f2c217085a1095a192b0900ad6ff
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Mar 28 11:12:36 2017 -0500

    Add basic benchmarking script (#83)
    
    * add basic benchmarking script
    
    * add results class, collect more information, and fix check for no args
    
    * fix indentation
    
    * we don't have logger here
    
    * use argv[0] for name of program
    
    * allow dumping of stats from the API and use .format()
    
    * add ProfilingResults class
    
    * bugfixes

commit e3f6c8e4baa9569a9b567db1f72ac550991e4b5c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 27 17:52:36 2017 -0400

    Force uninstall Manticore in case of cache (#112)

commit 1047fa42e3d862ede862238409ff8723739d136b
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 27 15:03:42 2017 -0400

    Document state, cpu, issymbolic (#101)
    
    * Add unstable warning
    
    * verbosity docs
    
    * Add State and Cpu to docs
    
    * Add State docs
    
    * Add cpu docs
    
    * Add select cpu docs
    
    * Add issymbolic helper doc
    
    * Rm double docstring
    
    * Update write_bytes docstring
    
    * Update Cpu docstr
    
    * Document cpu reg interfaces
    
    * Fix rebase mistakes

commit 6b1c69cb28251e540b2b46185d96a264d953945e
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Mar 24 19:10:33 2017 -0300

    Dev fix decree (#98)
    
    * Re enable skipped test
    
    * Re enable skipped test
    
    * Hack so we can use upstream Elftool
    
    * pr comments
    
    * pr comments - staticmethod
    
    * pr comments - implicit > explicit

commit f0a6f66d77ad2db3e648bf0601c2846b4a7381e0
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Mar 24 17:55:24 2017 -0400

    Update MOV implementation (carry) (#105)
    
    * Update MOV implementation wrt carry
    * Remove intermediate flags dict
    * Fix register reference
    * Document MOV to conform with current standard

commit 7dd08799180501315580f827641a6d124e5ef75b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Mar 24 14:44:24 2017 -0300

    Dev arm regfile refactor (#57)
    
    * RegisterFile refactor everywhere
    
    * Update arm_rf tests
    
    * Refactor Operand in both x86 and arm
    
    * Add APSR support (#53)
    
    * Add APSR support
    
    * #issuecomment-284826572
    
    * APSR tests
    
    * cspr to aspr
    
    * RegisterFile refactor everywhere
    
    * Update arm_rf tests
    
    * Refactor Operand in both x86 and arm
    
    * Rebased and NotImplementedError fix
    
    * ARM register initialization compressed
    
    * Fix merging bugs
    
    * Assimilate PR comments
    
    * Assimilate PR comments2
    
    * The new style. future is now
    
    * WIP
    
    * Improve quick start ,add asciinema (#58)
    
    * Towards a helloworld world
    
    * Rm requirements.txt (#56)
    
    * Print workspace dir by default (#55)
    
    * Print workspace dir by default
    
    * Change initial cli output
    
    * refactor or or or
    
    * WIP
    
    * Add arm rf testcase
    
    * ARM aliases fix
    
    * debug print removed
    
    * fix tests
    
    * Remove unicorn script from travis build (#64)
    
    * remove unicorn script from travis build
    
    * remove unicorn script entirely
    
    * Rename test -> tests (#66)
    
    * rename test -> tests
    
    * re-add ignored tests
    
    * Switch instructions to prefer virtualenv (#65)
    
    * switch instructions to prefer virtualenv
    
    * document use of virtualenvwrapper
    
    * Make cpuid more forgiving (#67)
    
    * Make cpuid more forgiving
    
    * error() to warning()
    
    * Add CPUID EAX=0xd ECX=0,1
    
    * Let logger handle the format string iff needed
    
    * to hex
    
    * Rm unused files (#76)
    
    * Move state into own file (#75)
    
    * Move State from executor.py
    
    * Fix import
    
    * relative import
    
    * Rm unnecessary code (#80)
    
    * Add example crackme (#77)
    
    * add example crackme
    
    * make filename and directory structure more accurate
    
    * Fix state.branches (#74)
    
    * init
    
    * rm old code
    
    pretty sure it's wrong
    
    * Clean
    
    * rm
    
    * Rename record_fork, move to ConcretizeRegister exception handler
    
    It doesn't need to be in fork() because it's only relevant for when
    we fork due to PC.
    
    * Add test for record_branches
    
    * Add back record_branches which got removed in rebase
    
    Rebase went oddly because State got moved to a new file
    
    * unnecesary tuple()
    
    * necesary tuple
    
    * remove unnecessary keys()
    
    * Use OrderedDict (#84)
    
    It can be useful to know elements in `branches` towards the end are
    more recently discovered branches
    
    * arm: Fix broken dynamic APSR (#78)
    
    * Refactor Register (#82)
    
    * Fix register read bug
    
    If we store a BitVec, we do NOT want to return bool() of it, which
    returns True, which is totally incorrect. We do however, want to return
    a symbolic Bool of it, if it is a 1 bit register (flag).
    
    * Improve
    
    * Raise error
    
    * Fix register tests
    
    Changed the interfaces:
    - removed nbits param (never used)
    - no longer raise AssertionError when overflowing a flag reg, just
      truncate
    - rename test funcs to be more descriptive
    
    * rm unused import
    
    * Add symbolic tests
    
    * Rm no longer applicable test
    
    * Add docs (#61)
    
    * Add sphinx-quickstart generated docs
    
    * Add api.rst
    
    * Edit index.rst
    
    * Add autodocumenting Manticore class
    
    * Update Manticore docstring
    
    * Doc verbosity
    
    * Doc hook and add_hook
    
    * More docs
    
    * Add Sphinx dev dep
    
    For building docs
    
    * RegisterFile refactor everywhere
    
    * Update arm_rf tests
    
    * Refactor Operand in both x86 and arm
    
    * RegisterFile refactor everywhere
    
    * Refactor Operand in both x86 and arm
    
    * Rebased and NotImplementedError fix
    
    * ARM register initialization compressed
    
    * Fix merging bugs
    
    * Assimilate PR comments
    
    * Assimilate PR comments2
    
    * The new style. future is now
    
    * WIP
    
    * Towards a helloworld world
    
    * refactor or or or
    
    * WIP
    
    * Add arm rf testcase
    
    * ARM aliases fix
    
    * debug print removed
    
    * fix tests
    
    * unnecesary tuple()
    
    * necesary tuple
    
    * remove unnecessary keys()
    
    * rebased
    
    * Remove test
    
    * https://github.com/trailofbits/manticore/pull/57#pullrequestreview-27971778
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107820815, https://github.com/trailofbits/manticore/pull/57#discussion_r107820331
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107821090
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107821066
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107821919
    
    * OOps search and replace
    
    * (invalid) -> None
    
    * The (invalid) -> None
    
    * None vs. invalid
    
    * In armpy we know that STACK is SP so lets try to eliminate cpu.STACK in favor of x.SP
    
    * remove ugly hex
    
    * Removed redundant import and comment

commit a12aae80d10c59cd39a88bbffd78ee9c45b60e24
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 23 14:25:46 2017 -0400

    Move stats.py to scripts/ (#100)

commit 053cc5ff8d9f07dde5c250d614333ae6c7a470b6
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Mar 23 09:52:39 2017 -0500

    Fix run_simple.py (#102)
    
    `Manticore(None, path)` throws an error

commit f016b7635a61f0c91daa0143731063493b886ba5
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Mar 22 20:45:14 2017 -0300

    Heads removed (#99)

commit ebe7f8268b14e6cceacc5485dddbd01734dd44aa
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 22 15:44:03 2017 -0400

    Add docs (#61)
    
    * Add sphinx-quickstart generated docs
    
    * Add api.rst
    
    * Edit index.rst
    
    * Add autodocumenting Manticore class
    
    * Update Manticore docstring
    
    * Doc verbosity
    
    * Doc hook and add_hook
    
    * More docs
    
    * Add Sphinx dev dep
    
    For building docs

commit d0f2c0116e44d08b4f397ceb764d328792e97dfa
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Mar 21 16:50:39 2017 -0400

    Refactor Register (#82)
    
    * Fix register read bug
    
    If we store a BitVec, we do NOT want to return bool() of it, which
    returns True, which is totally incorrect. We do however, want to return
    a symbolic Bool of it, if it is a 1 bit register (flag).
    
    * Improve
    
    * Raise error
    
    * Fix register tests
    
    Changed the interfaces:
    - removed nbits param (never used)
    - no longer raise AssertionError when overflowing a flag reg, just
      truncate
    - rename test funcs to be more descriptive
    
    * rm unused import
    
    * Add symbolic tests
    
    * Rm no longer applicable test

commit d50b3da9a8ee0194ed38d4efc859c74404b6ad3f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Mar 21 16:47:52 2017 -0400

    arm: Fix broken dynamic APSR (#78)

commit ca396d8d1368aa76790552ab4d0792b0c5ab1aea
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Mar 21 16:47:40 2017 -0400

    Use OrderedDict (#84)
    
    It can be useful to know elements in `branches` towards the end are
    more recently discovered branches

commit 5368716e424c2e950b6e0fae3a6eaf1c5d574587
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 20 17:56:25 2017 -0400

    Fix state.branches (#74)
    
    * init
    
    * rm old code
    
    pretty sure it's wrong
    
    * Clean
    
    * rm
    
    * Rename record_fork, move to ConcretizeRegister exception handler
    
    It doesn't need to be in fork() because it's only relevant for when
    we fork due to PC.
    
    * Add test for record_branches
    
    * Add back record_branches which got removed in rebase
    
    Rebase went oddly because State got moved to a new file

commit e77628bfe7ab0bf54f1b0fa5e70f4549eaab4443
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Mar 17 14:43:06 2017 -0500

    Add example crackme (#77)
    
    * add example crackme
    
    * make filename and directory structure more accurate

commit 7742df6b67cac21914bde41239fff03e893c59f7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 17 14:10:48 2017 -0400

    Rm unnecessary code (#80)

commit e920b73e146b1e888344be83e80ef3546651cb04
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 16 14:43:17 2017 -0400

    Move state into own file (#75)
    
    * Move State from executor.py
    
    * Fix import
    
    * relative import

commit 4464b2e8423a992999dcaed74a6ca3cdaf46a37c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 16 12:02:29 2017 -0400

    Rm unused files (#76)

commit 963669f3f2216ee41ae7e89a5a18b8563eff5055
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 14 13:39:06 2017 -0300

    Make cpuid more forgiving (#67)
    
    * Make cpuid more forgiving
    
    * error() to warning()
    
    * Add CPUID EAX=0xd ECX=0,1
    
    * Let logger handle the format string iff needed
    
    * to hex

commit 5d2ca049577244ea18f00edd31f17315202887df
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Mar 13 16:14:18 2017 -0500

    Switch instructions to prefer virtualenv (#65)
    
    * switch instructions to prefer virtualenv
    
    * document use of virtualenvwrapper

commit ca0bee23774e6855f9b8efbc486d6aeeeba53811
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Mar 13 14:06:36 2017 -0500

    Rename test -> tests (#66)
    
    * rename test -> tests
    
    * re-add ignored tests

commit dd24878724c60946f3e213499ce2249b527b45c0
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Mar 13 10:51:49 2017 -0500

    Remove unicorn script from travis build (#64)
    
    * remove unicorn script from travis build
    
    * remove unicorn script entirely

commit 296f4abb34c20c5ea33076124491e9b74c89410b
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 10 10:49:31 2017 -0500

    Print workspace dir by default (#55)
    
    * Print workspace dir by default
    
    * Change initial cli output

commit 88456a4ef8fef338587f112a1229493f57d651d8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 9 13:01:26 2017 -0500

    Rm requirements.txt (#56)

commit d527d9239bfdf4520206246d2aab0e34b67e498e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 8 17:51:07 2017 -0500

    Improve quick start ,add asciinema (#58)

commit 1cc66f16ca33f96dbfd6503019a3f88dd3c3c66b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Mar 8 17:17:05 2017 -0300

    Add APSR support (#53)
    
    * Add APSR support
    
    * #issuecomment-284826572
    
    * APSR tests
    
    * cspr to aspr

commit ef6e21b86570598bea5eb5aaf202847f499af7ee
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 6 18:39:31 2017 -0500

    Fix stdin/stdout linux file generation, add test (#50)
    
    * Support linux read/write in stdout/stdin files
    
    * Add basic binary
    
    * Add basic integration test
    
    * Skip
    
    * Update skip message
    
    * Add github issue

commit be59812a891f495de2a4d1dbff528e3ecbaa13ac
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 6 16:08:49 2017 -0500

    Support linux read/write in stdout/stdin files (#51)

commit 1f838736a57bfd2eb64d07bcfc8b87967a6d8194
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Mar 6 15:31:24 2017 -0300

    Add capstone ASR special case (#42)
    
    * Add capstone ASR special case
    
    * Fix capstone install (#43)
    
    * Add arm asr, abstract SR type insns (#44)
    
    * tmp
    
    * Fix bug
    
    * test m.hook typerror (#41)
    
    * Use setuptool extras for dev deps (#40)
    
    * Add extra deps to setup.py
    
    * Fix nose dep
    
    * lol wrong keystone
    
    * Fix readme
    
    * Update travis
    
    * Workaround capstone install bug
    
    * Use --no-binary in only pip install line
    
    * Fix another readme regression
    
    * Not again
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md
    
    * Update travis token, reformat (#46)
    
    the travis cli tool auto reformatted the yaml
    
    * Remove embedded ply (#47)
    
    * rm ply
    
    * add ply dep
    
    * Refactor `new_symbolic_value` (#48)
    
    * Use default params instead of dict, add taint
    
    * Update docstring
    
    * Add capstone ASR special case

commit ab0abf7f72ad2b80dab37a7b1c912650bcc1a02c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 3 18:22:04 2017 -0500

    Refactor `new_symbolic_value` (#48)
    
    * Use default params instead of dict, add taint
    
    * Update docstring

commit e49341c5065d023e56d4d2bec291276f83e9afeb
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 3 17:21:33 2017 -0500

    Remove embedded ply (#47)
    
    * rm ply
    
    * add ply dep

commit ad3a438e053151a2960dc35eab62566a952bf5b2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 3 15:39:28 2017 -0500

    Update travis token, reformat (#46)
    
    the travis cli tool auto reformatted the yaml

commit bff9376308eaa5dcbaa17d2fa949482b4947966a
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:53:18 2017 -0500

    Update README.md

commit 2cbac6b424d186a49bb1f7ab1588a46a3dfe81b5
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:50:20 2017 -0500

    Update README.md

commit 8e2bab90ff6104861c07de3d7ad30e6274624216
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:48:19 2017 -0500

    Update README.md

commit 96d08cef2dc1030ec65280d66859f30150b96acc
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:33:35 2017 -0500

    Update README.md

commit d2a01659589a5a9b581f98819ade8e72f592a0c0
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 17:31:06 2017 -0500

    Use setuptool extras for dev deps (#40)
    
    * Add extra deps to setup.py
    
    * Fix nose dep
    
    * lol wrong keystone
    
    * Fix readme
    
    * Update travis
    
    * Workaround capstone install bug
    
    * Use --no-binary in only pip install line
    
    * Fix another readme regression
    
    * Not again

commit 7412b2a374870d612027081fefb54e360766b2bb
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 17:19:36 2017 -0500

    test m.hook typerror (#41)

commit fed00af160a3665e79b4ef26e9f12bfe31d5ddde
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 16:33:04 2017 -0500

    Add arm asr, abstract SR type insns (#44)
    
    * tmp
    
    * Fix bug

commit 259eab71e04c8b9ed0760e252ded1bb5938952ab
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 15:35:45 2017 -0500

    Fix capstone install (#43)

commit 61ccfc1b1423862acf097d87f986aa0ba0cad6be
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Mar 2 16:37:25 2017 -0300

    OOps

commit f5515df4ff016e145b8439a611becde81ed3c311
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Mar 2 16:33:58 2017 -0300

    Add capstone ASR special case

commit 04d95735ac77d063fd9b315abf18bc9271e19cc7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:47:55 2017 -0500

    Fix empty trace file (#39)
    
    * Improve .trace generation
    
    * Rm unused self.trace stuff

commit f0069792c386a6f53d92fa63b908fd563e3fe6be
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:47:46 2017 -0500

    Misc cleanup: Rm old script, unused executor hooking functions (#38)
    
    * Rm old irrelevant example script
    
    * Make this easier to copy and paste
    
    * Rm old unused executor hooking

commit 275a85e08eec9caf1fb9538fd6c074b2a9a0f282
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:47:35 2017 -0500

    Clean CGC artifacts from linux model (#36)
    
    * Use errno instead of CGC constants for linux
    
    * Rm linux.sys_allocate
    
    * Rm linux.sys_deallocate
    
    * Rm linux.sys_fdwait
    
    * Rm comments
    
    * Clean sys_read
    
    * Clean sys_write
    
    * Fix syscall trace spots
    
    * Clean exit_group

commit 16f9bba9b58a89eb95d0f642e3ac626870c8eb0b
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Wed Mar 1 13:44:50 2017 -0500

    Add readme for devs

commit a6b81c0464545b7dc93be0687472e5eba63560d2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:30:37 2017 -0500

    Update README.md (#33)
    
    * Update README.md
    
    * Add quick start
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md

commit ca158dd5b41a11dfaf1aab8ebaf3308cc2fbe88c
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Mar 1 11:06:32 2017 -0600

    remove alternate solver support (#35)

commit a4576009de02871ad5b1c7c966cb625222b15b24
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Mar 1 11:06:25 2017 -0600

    switch pse_ prefix to mcore_ (#34)

commit b591f2a83a3066581124cbb9f4d7f07fe33f1563
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 11:22:04 2017 -0500

    Add unicorn to required deps (#31)
    
    * Add unicorn to python deps
    
    * Update readme
    
    * Add deps to setup.py
    
    * test letting pip install install deps in travis

commit d052d3b2d7ce09ba9283d3a42796ee2dc9edbd62
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Feb 27 14:45:12 2017 -0600

    Fix the --stats flag (#26)
    
    * start re-integrating profiling functionality
    
    * profiling works
    
    * rename X class
    
    * make profile a private attribute
    
    * nomenclature fixes
    
    * profiling -> profile
    
    * remove _dump stats
    
    * always initialize self._profile
    
    * remove extra setting of profiling

commit d6393cc8a6522b7960cfc94d737fbcf7e802829c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Feb 27 15:44:33 2017 -0500

    Add hook decorator (#28)
    
    * Add m.add_hook test
    
    * Add @m.hook test
    
    * Add `hook` decorator for convenience
    
    * Update readme and examples
    
    * Update run_callback
    
    * Improve `add_hook` docstring
    
    expound on callback structure
    
    * Rm debug print
    
    * Improve docstring

commit 98567efeaaf7ebd167621e56a2bd272c4ec1ebd4
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Feb 27 14:25:18 2017 -0600

    Force pc argument to add_hook to be an int or None (#30)
    
    * force pc to be an int or None
    
    * follow pep8 more closely
    
    * change debug message to an error
    
    * use format and isinstance

commit bbc36a2b2e1be545f138be44c9c1be1764f2551d
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Feb 24 15:56:46 2017 -0500

    Use issymbolic() throughout Manticore (#22)
    
    * Use issymbolic() throughout Manticore
    
    * Add a missed import
    
    * absolute -> relative import
    
    * Import issymbolic from helpers
    
    * Missing import

commit 103d32c0a7ea14ee50937a1e9fcb90ed5248e1e1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 24 15:21:37 2017 -0500

    Make m.verbosity=2 work (#24)
    
    * Make each model get "MODEL" logger instead of unique name
    
    This makes implementing `manticore.verbosity` actually work for level
    2
    
    * Replace model names with 'MODEL'

commit 9d3dfec08bd99c17428c4fc2b55c2a29434fcac5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 24 15:21:28 2017 -0500

    Rm helloworld in `make clean` (#27)

commit 44bf8745a1e5d1627137de089e22ac429112cb70
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 22 10:08:35 2017 -0500

    m.start -> m.run (#25)

commit f51227acd55991b07bba706fcb35253743cd580f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 21 11:41:15 2017 -0500

    Control memory logging with `verbosity` (#23)

commit 065266ba7f767fcf18da53c6f09b82d484eeeafd
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Feb 16 16:41:24 2017 -0500

    Refactor symbolic syscall handling to be arch indep (#19)

commit 5a432b8957e4499a971a50ec2e518b1ca0d33caa
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Feb 15 17:25:56 2017 -0500

    Update README snippet (#17)

commit 724db789072da4ae71f58c321771aeef582e99b0
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Feb 15 14:48:55 2017 -0500

    Assign context object to Manticore itself (#13)
    
    * Make Manticore behave like a dict; slim callback
    * Update all sample scripts to not take a context
    * Add a sample script (count_instructions.py)
    * We no longer need to close over Manticore state; add callback directly
    * Move Manticore's context to a public attribute

commit da81e355b80a613aa843ca00ad61ed28cbbd1b42
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Feb 15 13:35:40 2017 -0500

    Fix symbolic argv (#12)
    
    * Proxy ArrayStore's 'name' property to the underlying Array
    * Make setup_stack() repeatable
    * Re-initialize the stack if any of the environment was symbolicated
    * Encorporate name proxy test to ArrayStore
    * Use issymbolic()

commit b86808777e46ae3760468016f850b27e8d0aa2ff
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 15 13:06:49 2017 -0500

    Replace travis opt in with travis opt out (#11)
    
    * Use `wip` branch prefix to opt out of travis, instead of dev- to opt in
    
    * Add dash

commit 6577df9f0dd3c0a63b5948d137b1f026f163cbb3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 15 13:00:33 2017 -0500

    Fix travis cache (#14)
    
    Travis seems to have updated their python version

commit 05f5fcf045b0ca3bf83a222743d13b6886be8054
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 15 12:32:08 2017 -0500

    Port to real python package structure (#6)
    
    * Initial moving
    
    * Initial package __init__.py
    
    * Use relative imports
    
    * Correct imports for tests
    
    * Rename main.py -> __main__.py
    
    * Use relative imports in main
    
    * Refactor cli to be used with setuptools
    
    * Add basic setup.py
    
    * Fix test_memory import
    
    * Fix test_cpu_manual imports
    
    * Correct iterpickle import
    
    * Use manticore console_script installed by setuptools
    
    * Make travis install our package for integration cli tests
    
    * Refactor model hooks dynamic import for being in pkg
    
    * Correct import
    
    * Rm empty line
    
    * Fix coverage test paths

commit 8f51362734ddfba140efd94a93bcc534d274445a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 14 16:42:09 2017 -0500

    Port @japesinator's dynamic FLAGS refactor from old repo (#10)

commit e539ae4139a0e7b97b78642033f855df3c1bd165
Author: Yan <yan@users.noreply.github.com>
Date:   Tue Feb 14 16:06:10 2017 -0500

    Bring in tests to symbolicate PR (#3)

commit dde79a0babdb255ef9ac78d4b113170d41973d44
Author: Yan <yan@users.noreply.github.com>
Date:   Tue Feb 14 14:54:52 2017 -0500

    Remove ManticoreControl object [#180] (#4)
    
    * Remove ManticoreControl object
    * Some changes were brought in from dev-symbolicate-api
    * Add Manticore.terminate()
    * Add State.abandon()
    * Update sample scripts
    * Remove ctl from README
    * Fix tests
    * Bring in changes from dev-symbolicate-api
    * Lower-case wildcard
    * string -> cstring
    * abandon() docstring
    * Rename "name" to "label"
    * Remove obsolete comment
    * Make NUL a possible value for the last byte of a cstring
    * Fix AbandonState and add example binary&script
    * name -> label in tests, manticore.py
    * Ignore .DS_Store
    * Update symbolicate_buffer docstring

commit 406918a9fc52fb9af437fabe5e46ef437f5aece7
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Feb 13 18:30:25 2017 -0500

    Add LICENSE file (#5)
    
    * Add LICENSE [ASL2]
    
    * Bump year

commit 77c4905cbc76287ad3ee43b7d330e1694a9e58cc
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Feb 13 16:57:55 2017 -0500

    Update README.md (#2)
    
    * Update README.md
    
    * Remove deps list

commit 38141ee006f5e8a68ce6c1b3af3ad0a9ada49139
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Feb 13 14:51:05 2017 -0500

    Remove embedded elftools, use proper dependency (#1)
    
    * Import elftools properly
    
    * Add pyelftools as dep
    
    * Use elftools dep
    
    * Rm embedded elftools
    
    * Make travis use requirements.txt
    
    * Workaround capstone install bug
    
    https://github.com/aquynh/capstone/issues/445

commit badf1ab28ee3b6dce39b1ebd1de9036dc13146f0
Author: yan <rottled@gmail.com>
Date:   Mon Feb 13 12:04:15 2017 -0500

    Initial import
======================: FILES :======================
======================: BRANCHES :======================
======================: LOGINFO :======================
commit f17410b8427ddbd5d751d8824bdf10ce33c9f3ce
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Wed Jan 6 10:41:45 2021 -0500

    Concretize only those registers that are used by an unimplemented instruction

commit b835624a0a51ab042f3020cffee99bc047c37098
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Thu Dec 26 17:19:10 2019 -0500

    Add printk patching functionality

commit f31c9c8b69c377d6e70340c2fc3f06fc317a3ecb
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Sun Jul 28 21:22:58 2019 -0400

    Fix the bug with two consecutive B instructions
    
    In case there were two consecutive branch instructions with a symbolic
    conditions, the second instruction was skipped

commit 4a2760b1c1f6dd9f1763fbe0bc42c5fbcd577e38
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Sat Jul 13 14:18:06 2019 -0400

    mmap, mumap, debug printint

commit 7f7171bf9ea578a1f43640fa66b8bedca17dedac
Author: Ivan Pustogarov <ivan@ipust.net>
Date:   Wed Jun 27 03:24:20 2018 -0400

    Add barebones mode
    
    Add a mode in which on can symbolically executed arbitrary code
    snippets wrapped as ELF file that provides memory mappings.
    This is similar to Unicorn engine but with symoblic execution

commit 24e46889f65b713ee184f0801be0d71357a2f422
Author: James Wang <jameswang9909@hotmail.com>
Date:   Tue Jun 26 13:38:36 2018 -0400

    Allow users to specify path to solc and solc import remappings (#945)
    
    * Allow users to specify path to solc and solc import remappings

commit 66afb1f011d70f722bc00809d4eef355df39e35e
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 25 22:31:02 2018 -0300

    Fix #947 (#948)
    
    * Fix #947
    
    * Fixed code climate

commit 63ac45c26915d805546edda7d8b11252cb2978ff
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 22 19:10:41 2018 -0400

    Manticore 0.1.10 (#941)
    
    * Bump version number
    
    * Add changelog skeleton
    
    * Add changelog
    
    * Add missing detect-all flag
    
    * Don't forget --avoid-constant

commit e2f25839a4808e1fbc883a6682a162a52823cc59
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 20:09:09 2018 -0300

    Change EVMAsm offset by pc (#938)
    
    * Change offte by pc
    
    * EVMASM offset -> pc
    
    * Keep refactoreing offset -> pc (evmasm)
    
    * The forgotten offset 1
    
    * New format()

commit 5c14e47d8be1ce1d01113079957b248bad73b436
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 20:08:44 2018 -0300

    Better temporary expression handling (#944)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * Better int overflow detector (expensive)
    
    * Added a few more IO reg tests
    
    * CC
    
    * CC
    
    * CC
    
    * Fix io tests. Remove dead code. Improve Transaction.set_result
    
    * Account names, New ABI, user level constraining, state persistence
    
    * merge bugfix
    
    * Merge fix fix
    
    * fix docstr
    
    * Better type checks
    
    * Fix minimal.py example
    
    * CC and symbolic address
    
    * CC
    
    * CC
    
    * CC
    
    * CC
    
    * Add bytearray-Array concatenation/ Fix ABI tests
    
    * CC
    
    * CC
    
    * This fixes EVERYTHING!
    
    * Fixing truly everything, maybe
    
    * Review 1/10
    
    * A few extra ABI serialization tests
    
    * Better default arguments for constructor in multitx
    
    * CC
    
    * CC
    
    * Exception EthereumError
    
    * review
    
    * Improve normal/contract_account filters. Move some ABI stuff to auxiliary funcs(CC)
    
    * CC
    
    * ABI.serialize smallfixes
    
    * Catch parsing exceptions (review)
    
    * Add comment to BitVec.cast()
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * CC
    
    * cs.migrate and bette temporary handling
    
    * CC
    
    * typo
    
    * A Bugfix(tm)

commit e0f5bce7ade63249a4451c1563c89f66ceabf9ab
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 17:58:49 2018 -0300

    Account names, ABI, and state persistence... (#926)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * Better int overflow detector (expensive)
    
    * Added a few more IO reg tests
    
    * CC
    
    * CC
    
    * CC
    
    * Fix io tests. Remove dead code. Improve Transaction.set_result
    
    * Account names, New ABI, user level constraining, state persistence
    
    * merge bugfix
    
    * Merge fix fix
    
    * fix docstr
    
    * Better type checks
    
    * Fix minimal.py example
    
    * CC and symbolic address
    
    * CC
    
    * CC
    
    * CC
    
    * CC
    
    * Add bytearray-Array concatenation/ Fix ABI tests
    
    * CC
    
    * CC
    
    * This fixes EVERYTHING!
    
    * Fixing truly everything, maybe
    
    * Review 1/10
    
    * A few extra ABI serialization tests
    
    * Better default arguments for constructor in multitx
    
    * CC
    
    * CC
    
    * Exception EthereumError
    
    * review
    
    * Improve normal/contract_account filters. Move some ABI stuff to auxiliary funcs(CC)
    
    * CC
    
    * ABI.serialize smallfixes
    
    * Catch parsing exceptions (review)
    
    * Add comment to BitVec.cast()
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * manticore/platforms/evm.py
    
    Bugfixes and review
    
    * CC

commit 0e8c9b0bf2b7e9b8145254f86522867b67c8947f
Author: aditi-gupta <aditi100gupta@gmail.com>
Date:   Fri Jun 22 16:26:18 2018 -0400

    Improve Ethereum command line flags (#943)

commit 55c86544b1828571eb04969efd11cf1803cc57a1
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jun 22 15:48:16 2018 -0300

    Remove dead code (#942)

commit dc3bbd421b5657b92d60fdf5cad3a4dc2db119aa
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri Jun 22 17:34:40 2018 +0200

    Inode number is encoded with 64 bits (#897)
    
    * Inode number is encoded with 64 bits
    
    Fixes #824
    
    * typo fix for interpreter
    
    * Use of stat64 linux kernel structure
    
    See https://code.woboq.org/linux/linux/include/uapi/asm-generic/stat.h.html

commit d3edfa56a767e9ed6eaa80555c456715bb62e503
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Wed Jun 20 23:53:14 2018 +0200

    Add UTXH to arm instructions (#935)
    
    * Add UTXH to arm instructions with tests

commit ccbf9bce7c52c26877a64b30b7a4dea7b17266ba
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Wed Jun 20 23:17:51 2018 +0200

    Raspberry hello world (#914)
    
    See #514
    
    Adds ARM UQSUB8 instruction

commit e29ee087162637f929a84d766f56cfee148c3e21
Author: Lee Azzarello <lee@rockingtiger.com>
Date:   Tue Jun 19 10:40:31 2018 -0700

    Dockerfile updates (#882)
    
    * Dockerfile updates
    
    * no blockchains, no masters
    
    * Stylistic README changes
    
    * Revert back to manticore user

commit 88bf2f68f98715ce5404e1f85f15956571a21532
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 18 19:58:45 2018 -0300

    Fix  evm SDIV/SMOD (#933)
    
    * Fix #930 evm SDIV/SMOD
    
    * Fix ABS :)

commit fbd3865f9056eb2d001901e9c713d32b9aa40240
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 18 11:17:35 2018 -0300

    Fix Taint on Ct Eq (#934)

commit e12b57b032b280bca5c1bde6f916ea9bdd58cac5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 15 19:32:42 2018 -0400

    Make SymbolicFile testcase generation work for closed files (#929)
    
    * Track closed files so we can generate concretized SymbolicFile data for closed files
    
    * Update test to close file too

commit cca85ef84749db8081f469988ead03b79a505d71
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 15 16:55:33 2018 -0400

    Generate symbolic file testcases (#928)
    
    * Export concretized symbolic files in testcase
    
    * use a warning
    
    * add unit test
    
    * Rm unnecessary new attr

commit 8c5e25f5552a5cb1e80d41b62753dab3a7169817
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Jun 14 17:52:26 2018 -0300

    Initial doc to storage evm functions (#915)
    
    * Initial doc to storage evm functions
    
    * CC
    
    * Make evm.world_state private so access is _restricted_ via methods
    
    * Add forgotten import for get_storage_items
    
    * Minor doc improvements

commit b4b4bb76c04d523c1f4349d8cbed016c55c95954
Author: James Wang <jameswang9909@hotmail.com>
Date:   Wed Jun 13 13:51:08 2018 -0400

    Use p.communicate() to read stdout and stderr (#920)
    
    Use communicate() instead of `stdout.read` and `stderr.read`, as they can result in deadlocks. This can occur if manticore tries to compile a solidity contract that has enough errors.

commit e9576604db76e36d29518e2da4dbb52547921572
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Jun 12 15:17:46 2018 -0400

    Fix test to use correct variable (#925)

commit cf6cd0eaf2bd4f38b16c6ee2027e1c219e5eafe8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Jun 7 17:45:07 2018 -0400

    Fix z3 install regression (#923)
    
    * Add back z3
    
    * Rm manual install

commit b184f4e91612a83d3bac294d2f5bf32ec2594958
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Jun 6 15:44:53 2018 -0300

    Integer overflow detector improvements (#913)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * Better int overflow detector (expensive)
    
    * Added a few more IO reg tests
    
    * CC
    
    * CC
    
    * CC
    
    * Fix io tests. Remove dead code. Improve Transaction.set_result
    
    * CC
    
    * Fix wrong  merge
    
    * relax bench test
    
    * Remove Remove
    
    * Reviewed

commit adf010e4f35e882f743c7bae2a1513734d549093
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Jun 6 10:04:18 2018 -0300

    Add regression test for posCAll bug (#918)

commit 49478b1f366b1f0369126fbc0fb0645b9b45788b
Author: Pierre Pronchery <khorben@defora.org>
Date:   Wed Jun 6 01:34:24 2018 +0200

    Add support for NetBSD as a host OS (#893)
    
    With these changes, I am able to run Manticore on Linux (static)
    binaries from a NetBSD host.
    
    Tested with NetBSD/amd64 (7.1_STABLE XEN3_DOM0).

commit 21c1ea5265ce8d5aea94343e969010c520000688
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jun 5 12:05:35 2018 -0300

    Fix pos CALL/DELEGATECALL/STATICCALL/CALLCODE (#917)
    
    * Fix pos CALL/DELEGATECALL/STATICCALL/CALLCODE
    
    * CC

commit 5d7c7f1237847256a16321e1692c03be12e46cdd
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 4 20:02:53 2018 -0300

    Dev evm INVALID detector (#910)
    
    * Rearrange Detectors closer to ethereum. Fix Detector reporting for each state.
    
    * codeclimate
    
    * codeclimate
    
    * Move detectors back to __main__. Commandline argument added
    
    * Codeclimate
    
    * Findings and global_findings for each detectot. Move global findings to its own file on reports
    
    * Codeclimate
    
    * Better commandline arguments. Better report on failing constructors
    
    * Codeclimate. All assertion bench done
    
    * Convenience evm stack function. Doc improvements
    
    * Explicit reference in ded_evm_execute_instruction
    
    * Assembler to solidity line number fixed
    
    * Better variable names
    
    * CC
    
    * CC
    
    * Regression tests
    
    * CC
    
    * Reviewed

commit 1fcb249ac76aeedf2b9f90d213ecbb6976d9b8fd
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Mon Jun 4 22:52:04 2018 +0800

    incremental py3: print statements, octals, and more (#908)
    
    * incremental py3: automated conversion work
    
    print statements, octal literals, and various small changes to support
    identical calling between py2 and py3. Plus a few missed exception
    syntax, etc.
    
    * more print function imports, fix a syntax issue
    
    * revert an import change for the moment
    
    * different absolute import

commit 72039584fb225dd0234f2f18b7a926411c62f86b
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Sat Jun 2 02:35:31 2018 +0800

    Incremental Linting (#911)
    
    * flake
    
    * start removing * imports
    
    wildcard imports make it so we can't easily reason about what is
    available in scope and limit the utility of linting tools
    
    * a wide variety of pep8 related changes
    
    Also adds a tox.ini entry for flake8 experimentation right now.
    
    * fixes

commit 058943763b6aa44ee834538b60593667cf4f1070
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 23:06:06 2018 +0800

    absolute imports (#907)

commit 78df0e9ab9de970656011ae6a0cc0a0e79e68a38
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 21:42:04 2018 +0800

    install z3-solver in our install script so it's available (#906)

commit 69c9d9bf1fc4445de6f0d0a594652a261cd0b2a9
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 21:38:42 2018 +0800

    py3 incremental: remove long literals (#905)
    
    * py3 incremental: remove long literals
    
    * install z3-solver in our install script so it's available

commit 2d2ba9068caf1f80695cfc2df207c43f4fdd50bb
Author: Paul Kehrer <paul.l.kehrer@gmail.com>
Date:   Wed May 30 11:16:59 2018 +0800

    switch the exception syntax to py3 compatible (#904)

commit c29c3cc7e8bdccc721af21fbd192370d851620a4
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri May 25 19:22:49 2018 -0400

    [WIP] Large EVM refactor (#843)
    
    * Array value configurable. 8,16,32..256 bits (not prefixed to 8)
    
    * Test Array256->256
    
    * Remove old 8 bit assumptions
    
    * Add arrayProxy copy constructors and remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * Better ArrayProxy special case handling
    
    * WiP-research Use raw no-optimized smtlib generic arrays as memory and storage
    
    * remove pdebug print:
    
    * Fix tests
    
    * Review fixes
    
    * review fix
    
    * fix gas variable
    
    * Review fixes
    
    * git hell
    
    * fix asm_to_smtlib
    
    * Fix vm.gas access
    
    * getvalue hack
    
    * Improve internal API
    
    * solver.can_be_true(cs, True) must check that cs is feasible
    
    * Simpler callstack code
    
    * Fix merge and tests
    
    * Fix copy.copy
    
    * Move state ids to private
    
    * New internal add_transaction api
    
    * Fix tx.return_data
    
    * Remove comments
    
    * Do not rely on .last_exception
    
    * Fix evm tests
    
    * peping
    
    * peping
    
    * Peping +test fixes
    
    * Peping +test fixes
    
    * Peping +test fixes
    
    * Fix endTx pop vm
    
    * Improve speed and simplifications. Remove internal_transaction mess
    
    * Change test_eth.EthTests test a bit
    
    * Fix some tests and CALLDATALOAD
    
    * Add CALLCODE and reachability test frame
    
    * Fix calldataload, msize. Add reachability test frame
    
    * Fixlog
    
    * Clean reachability test
    
    * Fixe CODECOPY concrete
    
    * Some style sdded
    
    * peping
    
    * Remove origin and price from EVM as it can be retrieved from human tx
    
    * Added current_human_transaction and last_human_transaction
    
    * peping
    
    * Refactor tests
    
    * Increased argument count  allowed CC
    
    * Initial automatic library loading (no toposort)
    
    * pep8
    
    * Accepts any number of libaries on any ordering
    
    * pep8 and relaxed codeclimate
    
    * Simple library test
    
    * merge libraries in
    
    * Solve https://capturetheether.com/challenges/math/mapping/
    
    * Remove debug print
    
    * More robust path creation for test files
    
    * DELEGATECALL support
    
    * generate testcases only at finalize()
    
    * Add functools32 as dependency for lru in py2
    
    * Manticore Library PoC
    
    * Favor bytearray
    
    * Favor bytearray
    
    * config
    
    * Fix concolic and sha3 arraybyte-> str
    
    * Fix concolic
    
    * Fix typo
    
    * remove absolute path from tests so it fits in link placeholders
    
    * Shrink path spec for solc
    
    * Hopefuly Fix solc invocation bug
    
    * FFFFFFFFFIIIIIIIIIIIIX ITTTTTTTTTTTTTTT
    
    * Better performance on visitors cache, and new ArraySlice
    
    * better os joining, evm library link, and tx based events
    
    * Fitering solidity functions plugin
    
    * add itereator capabilities to ConstarintSet
    
    * Some solver functions exported to state
    
    * bye bye metaclass dynamic check
    
    * extra simplification
    
    * Improved symbolic gas and other bugfixes
    
    * Better visit_BitVecExtract
    
    * Default initial timestamp and block number
    
    * 99 typos
    
    * Re-enable account.named_func() trick
    
    * typo
    
    * Better stronger
    
    * Added default symbolic arguments to constructor..
    
    * Remove constant marked functions from multi_tx
    
    * Add default 16G memory cap to z3
    
    * concretized_args now supports concretizing address arguments to all possible accounts
    
    * Fix coverage calc
    
    * reset fails sometimes
    
    * PEP8 ROA (#900)
    
    * pep8 formatting
    
    * Code Climate updates
    
    * cyclocomplexity--
    
    * Refunds moved from the instruction to the the exeption catching
    
    * merge
    
    * merge
    
    * accept both bytearray and str
    
    * doc
    
    * blockhash changed and returns a symbolic value now, so these tests are wrong
    
    * A bugfix
    
    * pep8/complexity updates
    
    * remove more questionable tests
    
    same thing as with the blockhash thing. we're doing things a little more symbolically now so comparing to concrete will not work
    
    * Accomodate our chubby State class
    
    * Keep moving the refunds
    
    * Disble reachability test for now
    
    * Remove double declaring log for now
    
    * Fix coverage calculation
    
    was prev creating a generator, which you can't do `in` on??
    
    * require 1 tx for int overflow test
    
    * Fix path tests
    
    * Remove debug print in tests
    
    * Only enable gas when necessary
    
    * codeclimate fixes
    
    * Fix concretize_args
    
    * only 1 tx
    
    * Disable max/min support in solver

commit f73fc40e326414a30d2c61d811108a28046d70f0
Author: Matias Bordese <mbordese@gmail.com>
Date:   Fri May 25 14:58:18 2018 -0300

    Install capstone from next branch, optional via pip --process-dependency-links. (#896)
    
    * Install capstone from next branch, optional when passing --process-dependency-links to pip.
    
    * Alter readme wording

commit b9af9bf0185a47ed25d3b1c8de03f872cf42dfb1
Author: Kirwan <kirwan.elmsly@gmail.com>
Date:   Sat May 26 00:35:24 2018 +1000

    Fixed variable name typo. Issue #898. (#899)

commit b5d9d1da278ed281bbda7e8c0dac2c7010fc5e57
Author: Pierre Pronchery <khorben@defora.org>
Date:   Sat May 19 00:01:09 2018 +0200

    Khorben/479 assert brk (#890)
    
    * Remove assertion on brk()
    
    Manticore assumed that new calls to brk(2) were always increasing the
    size of the data segment. This is not always true, since programs may
    decide to reduce it as well.
    
    Tested with a static Linux/i386 program on macOS/amd64.
    
    * Minor optimization
    
    Only compute perms if actually needed.
    
    * Avoid creating memory mappings with a negative size
    
    This should completely fix #479 this time.
    
    * Update sys_brk() implementation
    
    * Add regression tests for brk
    
    * Added brk test binary src

commit 68c471687223397d5f352319c87a28f781e3005d
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri May 18 18:14:34 2018 -0300

    Remove solidity in minimal.py example (#895)
    
    * Remove all needs for solidity in minimal.py example
    
    * Separate evm only minimal example

commit f4c4c9ae277688ec386083a6a817b2f7e7e9f654
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri May 18 18:19:11 2018 +0200

    Add LD_LIBRARY_PATH type feature (#878)
    
    * Add LD_LIBRARY_PATH type feature
    
    Use of environment variable MANTICORE_LD_PATH
    instead of LD_LIBRARY_PATH which is protected on MacOS
    
    Fixes #93
    
    * Comments taken into account
    
    Commit to be squashed afterwards
    
    * Codeclimate fix
    
    * Support LD_LIBRARY_PATH in the loader

commit 71c90c38c1dd0bedf97a126dedeaf0a7e4f606b5
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Fri May 18 17:40:15 2018 +0200

    Add dedicated files for ARGV/ENVP in report (#863)
    
    * Add dedicated files for ARGV/ENVP in report
    
    Fixes #169
    
    * Add unit test for argv/env reports
    
    * Code review taken into account

commit cb1f244d3197dcad3e2d551edee59f6251fd137b
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri May 18 11:36:05 2018 -0400

    Fix Linux initialization (#894)
    
    * Move _open() outside of assert
    
    * Make a few tests aware of assert-less exec
    
    * Use the __debug__ builtin instead of sys flags

commit efbcd084fd1c924c8b0ca4b57ea7deaeb3592add
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed May 16 11:39:23 2018 -0300

    Rollback to old mini assembler only example (#889)
    
    * Rollback to old mini assembler only example
    
    * Rollback reordering and remove comment
    
    * Ah no. We need to keep the states in the lists until the end
    
    * Update ethereum.py
    
    * Use calculate coverage funciton

commit 79d90ae6a6d03377b185cf16678556d3df9cbae5
Author: Daniel James <dwhjames@gmail.com>
Date:   Tue May 15 12:29:43 2018 -0400

    Typo in ManticoreEVM#last_return (#886)
    
    Encountered the following trace:
    
    ```
    Traceback (most recent call last):
      …, in <module>
        m.last_return()
      File "…/manticore/ethereum.py", line 906, in last_return
        return state.platform.last_return
    AttributeError: 'EVMWorld' object has no attribute 'last_return'
    ```
    
    It appears this bug was introduced in commit ed29a22f
    
    The same bug was also lurking in `EVMWorld#run`
    https://github.com/trailofbits/manticore/pull/886#issuecomment-386626556

commit 6747c437b19e162f639259b4d12867d09bbf2ddf
Author: Pierre Pronchery <khorben@defora.org>
Date:   Fri May 11 17:52:07 2018 +0200

    Partially implement fork(2) (#892)
    
    * Partially implement fork(2)
    
    Really this return ENOSYS (not implemented), which allows sub-processes to
    detect the condition and continue to run (or crash on their own if they did not
    expect fork() to fail).
    
    * Move sys_fork to correct class; add a basic docstring

commit f6d0cd4e8e9c386ed48e1bbb30af88f801b8ae3a
Author: Pierre Pronchery <khorben@defora.org>
Date:   Fri May 11 17:43:27 2018 +0200

    Partially implement chroot(2) (#891)
    
    * Partially implement chroot(2)
    
    Really this return EPERM (permission denied), which seems to be absolutely fine
    since a non-privileged user is currently assumed. This is what would normally
    be returned in this scenario.
    
    * update chroot implementation

commit 44ef97ec6c804ae641738366e077c44aa38cf109
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Tue May 8 20:15:03 2018 +0200

    Loads shared ELF to analyze a function (#861)
    
    * Loads shared ELF to analyze a function
    
    See #69
    
    * Bring in recent changes to concolic.py
    
    * Loads shared ELF to analyze a function
    
    * Fix the 'linux' class method prototype

commit b9a515ccfed8b68a2ff7bcaaa8fe07f3ec655433
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Mon May 7 10:23:40 2018 -0300

    Added optional message parameter in ConcretizeMemory (#885)
    
    * Added optional message parameter in ConcretizeMemory
    
    In some files (e.g. manticore/core/cpu/abstractcpu.py), ConcretizeMemory is invoked with a message but it is interpreted as the "policy" value now, causing a crash. This commit should fix that issue.
    
    * Small code refactoring to address code review

commit 109180fc155fd5a4c06473b89f52e726ca7d6d40
Merge: 9c258bd 23a1412
Author: feeb <feeeb@protonmail.com>
Date:   Fri May 4 16:03:35 2018 -0400

    Merge pull request #888 from trailofbits/dev-019
    
    Manticore 0.1.9

commit 23a1412e15dccafb74cc7db913773bf7a9b5552d
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Fri May 4 14:27:41 2018 -0400

    Finish changelog

commit 66640c8ed881dd8cd3724ae654a3f90c2604670f
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Fri May 4 14:17:47 2018 -0400

    Initial changelog

commit 5c9e63555eba27288d6b32592c42a6cdba7eed53
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Fri May 4 14:07:20 2018 -0400

    Bump version

commit 9c258bd68d386fb1c7c19ae589ede27e8da0d3b1
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu May 3 18:52:29 2018 -0400

    Update concolic.py (#887)
    
    * Update concolic.py
    
    * update what evt we subscribe to

commit 9307475af5f52d641e97b8208ac53ea4812e5940
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Tue Apr 24 12:36:06 2018 -0400

    Raises exception for Solidity compiler not installed. Issue #867 (#877)

commit fb3c01fe1ca78453920c3c2e4d245de4e0ebd40d
Author: Catena cyber <35799796+catenacyber@users.noreply.github.com>
Date:   Tue Apr 24 12:32:18 2018 +0200

    Sign extends x86 AND operand (capstone bug) (#852)
    
    * Sign extends x86 AND operand (capstone bug)
    
    Fixes #560
    
    * Regression test for X86 AND with sign extension
    
    For issue #560

commit 4a98110f4a74916305231a0a2fabc076e6218462
Author: Daniel James <dwhjames@gmail.com>
Date:   Fri Apr 20 11:05:04 2018 -0400

    Support Solidity compilation of a file handle (#873)
    
    This preserves the current behavior of using a string value as Solidity
    source code, but now also supports instances of the `file` type, and
    will use the `name` property of the file object to pass to the
    subprocess invocation of solc.
    
    This implementation also now ensures resource cleanup for the stdout and
    stderr pipe handles.
    
    Make use of compiling via file handles in multi_tx_analysis
    
    This will enable import statements in Solidity code to work for the
    Manticore CLI out of the box
    
    Note, Manticore still wants the source code, so if we compiled using a file
    handle, rather than a source string, we need to read in the source
    
    fixes #705

commit 92cfab3a429d1ed32f5ac4448c53518db467b0ef
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Apr 17 18:58:58 2018 -0300

    Fix check of solc metadata tail (#848)
    
    * Fix check of solc metasata tail
    
    * Remove debug print
    
    * fix metadat tail removal
    
    * Yet another loose end - fixed
    
    * Better version parsing and review fixes
    
    * Remove debug print
    
    * pep8

commit 71bf5d4f1118318341ec0900c24f1b22aa617a74
Author: Pierre Pronchery <khorben@defora.org>
Date:   Tue Apr 17 23:25:40 2018 +0200

    Remove assertion on brk() (#860)
    
    Manticore assumed that new calls to brk(2) were always increasing the
    size of the data segment. This is not always true, since programs may
    decide to reduce it as well.
    
    Tested with a static Linux/i386 program on macOS/amd64.
    
    (https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/mm/mmap.c?h=v4.17-rc1#n226)

commit 2814723cc841e5494d3e3d35f940630071ad4a5d
Author: Daniel James <dwhjames@gmail.com>
Date:   Mon Apr 16 20:44:29 2018 -0400

    Support ABI parsing of specs that use function types (#874)
    
    See http://solidity.readthedocs.io/en/v0.4.21/types.html#function-types
    This is a special case of `bytes24`, 24 bytes are right zero padded in
    a 32 byte word.

commit bfffa78b5fdece3a18b87d205e130701efc9d243
Author: Daniel James <dwhjames@gmail.com>
Date:   Fri Apr 13 16:32:17 2018 -0400

    Fix Issue #869 (#872)
    
    * Add testcase for empty types bug
    
    * Fix Issue 869
    
    Bug introduced in
    https://github.com/trailofbits/manticore/commit/0fc4bba9ad8ef61f9e1f23bc6d0a88b7a05aa385#diff-6cf4568b5e8712514d226faa04e417fbR450
    
    - Move empty string up to the beginning of the if-else chain.
    - Correct test for bool type case
    
    fixes #869

commit aa792588fe3a883276ea30ba543ec8822cf44db0
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Tue Apr 10 10:34:38 2018 -0300

    Added --txnocoverage option to manticore cli (#849)
    
    * added txnocoverage option to manticore cli
    
    * improved code readability

commit d5a692fc59fad1b24ee021f4daa3561068cae0c5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 9 10:01:12 2018 -0600

    Rm the slow solver code (#859)

commit 0fc4bba9ad8ef61f9e1f23bc6d0a88b7a05aa385
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Thu Apr 5 17:43:15 2018 -0300

    Added all the uint types supported by Solidity (#811)
    
    * added all the uint types supported by solidity
    
    * fixed some incorrect indentation
    
    * Added missing space around "+"
    
    * added some proper exceptions and included all the integer parameter types
    
    * improved exception handling
    
    * missing check
    
    * added preliminary version of unit test for ABI
    
    * x
    
    * half finished
    
    * tes
    
    * fixes
    
    * docstr
    
    * Raise exception only once
    
    * cc
    
    * Fix merge bug
    
    * fix merge bug in tests
    
    * Fix bugs introduced in merge

commit 6616b9e05c3669c143be0af65234a89187c1c0fc
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 5 13:31:16 2018 -0600

    Ethereum ABI and misc fixes (#855)
    
    * Port most of the less invasive/controversial changes from dev-evm-dynamicarguments
    
    * Port section of fixes from ethereum.py
    
    * Port tests unrelated to concretizing dyn args
    
    * Add remaining changes from evm.py
    
    * clean, fmt, code climate
    
    * rm unnecessary setup
    
    * disable??
    
    * fmt
    
    * remove all the returns
    
    * lol cc
    
    * Rm unused code
    
    * port to .format
    
    * don't use map (for py2/3 compat)
    
    * simplify slicing
    
    * Rm dyn arg code, since it doesn't really even work
    
    and will be included when dev-evm-dynamicarguments is totally resolved
    
    * add address/get_uint test
    
    * Revert "Rm dyn arg code, since it doesn't really even work"
    
    69188da4caf1ff74288b6398e8140f627dc495c4

commit af779d8baad19fa91f1007366bf877403f59f9bc
Author: cclauss <cclauss@bluewin.ch>
Date:   Tue Apr 3 22:47:47 2018 +0200

    Do not forget self (again) (#854)

commit bda9c091b58acf3ea19de876a75cd0e49e1ec5ea
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 30 18:26:26 2018 -0400

    Manticore 0.1.8 (#851)
    
    (thanks for 1k)
    
    * Bump version numbers
    
    * initial changelog update
    
    * Add changelog content
    
    * add contribs

commit 2f382a9d1c8bdefd667b233ce4d1807682bc8804
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Fri Mar 30 10:44:34 2018 -0400

    Added KeyError Exception for offsets not in srcmap. Issue #832 (#839)

commit 03af65e55f7db8b418f79ab250b3a10a7fee668c
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Thu Mar 22 09:40:51 2018 -0300

    A more complete example to initialize and explore a smart contract with manticore (#827)
    
    * A more complete example to initialize and explore a smart contract with manticore
    
    * Removed outdated comments

commit 9c19014e4b7f16a62b913016fb9572504874aa10
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Thu Mar 22 02:34:19 2018 +0700

    Fix duplicated armv7 test name (#833)
    
    * Fix duplicate armv7rf test name
    
    * Small refactor of armv7rf
    
    * Proper test classes names

commit d1051f6c8406e2a25467c8dc20b8b86adfa045d8
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 20 14:30:09 2018 -0300

    Push 0 on internal revert (#830)

commit 2eb002593e894d97b5fc9f214d84d9b1d56e3d9a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 19 14:22:08 2018 -0400

    evm: add per state trace file (#817)
    
    * Add trace file
    
    * Make ethersplay compatible trace format
    
    * Small cleanup
    
    * Record separate init and rt traces, emit separate trace files
    
    * add todo
    
    * More pythonic
    
    * Add test for end insn in trace file
    
    * Fix test
    
    * Move trace accumulation into will_evm_execute callback
    
    here, we can easily and correctly check the .last_exception field
    to see if we were in init code or rt code. from the did_evm_execute hook
    the last instruction (end instruction) had a different .last_exception
    so this was causing the last instruction to not be recorded in the trace.

commit 8acd2293b833ced86d6b20849d1acee591a2b3a7
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Mon Mar 19 15:08:22 2018 -0300

    Added --txaccount parameter to control the caller of the symbolic exploration of smart contracts (#819)
    
    * added --txaccount parameter to control the caller of the symbolic exploration of smart contracts
    
    * Use of the new EthereumError exception

commit e97e631d8e9656ce514d04065d1182f3e686219e
Author: Matthew Roll <mproll@protonmail.com>
Date:   Mon Mar 19 09:24:04 2018 -0400

    port ethereum tests to individual files (issue #809) (#820)
    
    * Add contract keyword arg to IntegrationTest._simple_cli_run
    
    * Remove inline tests from test_eth
    
    * Refactor IntegrationTest.test_eth_regressions to support multi-contract files

commit fb79127bc2c6dafec0c1eea909eedf053a032ffe
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 16 17:48:36 2018 -0400

    Graceful exit when no states to run (#815)
    
    * rm unnecessary return, change assert to graceful handle
    
    * Add regression test
    
    * Add regression test
    
    * Correct logic
    
    * Rm unnecessary check
    
    This branch is unnecessary, if this condition is true, then ultimately
    the executor will do nothing, and we'll simply return anyway.
    
    * Raise NoAliveStates if no alive states to execute
    
    * docstr update
    
    * Update mult_tx_analysis to handle NoAliveStates
    
    * Fancy
    
    * Update test
    
    * Codeclimate fmt
    
    * fmt
    
    * better readability
    
    * add docstr

commit a21c8b6012ec6d657a45f7459635c979bdb5de8e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 16 13:32:32 2018 -0400

    Improve evm docs (#816)
    
    * Add docstr for finalize
    
    * prune unnecessary stuff from docs
    
    * Add trace file
    
    * Revert "Add trace file"
    
    4687810e15c2bc6cc3e729c32bdad2f617679d77

commit eaa0e524b44cbdb4a7bcf3ba6808bbd86c2a16c3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 15 16:41:29 2018 -0400

    Fix off by 1 error in codecopy (#812)
    
    * Fix off by 1 in codecopy
    
    * Add regression test
    
    * Improve formatting

commit fb3938bb3ea70e67ebf7daf64adbe92fd5bcd5ed
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Mar 15 16:31:18 2018 -0400

    Raises exception for contract with a function without code. Issue #789 (#797)

commit cf789a429198f058df8ad2ebc95a1fe64ce3f9b3
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Wed Mar 14 16:45:12 2018 -0400

    Introduce concretized_args decorator (#803)
    
    * Introduce concretized_args decorator
    
    * Add docs
    
    * Cleanup
    
    * Add basic expression counter
    
    * Please codeclimate
    
    * pep8
    
    * update docstring
    
    * Use default concretization policy when not provided
    
    * Add concretizer tests

commit 61babdbe21b99c93c74d7ccecbf520108071761a
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Mon Mar 12 15:27:18 2018 -0400

    Fix evm RETURN implementation (#808)
    
    * Fix write_buffer issue (#807)
    
    * Add test for write_buffer fix
    
    * Use Operators.ORD instead of ord (even though were assuming concrete vals)
    
    * Cleanup

commit bb4a7966a82d1145f010672c78eca86a1a42f32d
Author: Dan Guido <dan@trailofbits.com>
Date:   Mon Mar 12 14:40:06 2018 -0400

    Add codeclimate, tox, and pycodestyle configs (#772)
    
    * pep8
    
    autopep8 -r -i -a -a manticore
    
    * tox for testing py3k
    
    * minimal codeclimate
    
    * Add correct Code Climate ID
    
    * unignore max line endings since it's set to 160
    
    * more badges
    
    * turn off pep8 in code climate
    
    * need to remove for codeclimate to work right
    
    * re-enable most checks with looser thresholds
    
    * remove unused imports
    
    autoflake --in-place -r manticore
    
    * revert the autoflakes changes
    
    * set tox to only py27 for now
    
    * cache is hardcoded to python 2.7.13
    
    * Comment cleanup
    
    * Try autoflake again
    
    * Add dev environment dependency management to tox.ini
    
    * Remove count/statistics options from tox.ini
    
    Per Dan, these crash pep8 analysis on codeclimate at present
    
    * Revert setstate initialization
    
    * Re-introduce explicit compare for flags
    
    * add back structural comment
    
    * rm unneeeded ` as e`
    
    * bump py tox

commit fceb48ce0cff29b5af31f0784c031574ff9e23e5
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Mon Mar 12 12:19:38 2018 -0400

    Update Create (evm exception) arguments (#805)
    
    * Update Create arguments
    
    * Add integration test
    
    * Dial back the procs

commit fbf0823cb61aa7f3b417839a4e2e7e3f58352f10
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Wed Mar 7 14:57:59 2018 -0300

    Very quick fix to avoid STOP instructions to return random values (#792)

commit f4118f4f0f0db9ebcb97c08b103b04224bc795ee
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Tue Mar 6 18:35:19 2018 -0300

    Added a function to generate evm testcases without using callbacks (#791)
    
    * Added a function to generate evm testcases without using callbacks
    
    Possible fix for #782
    
    * The 'message' parameter in generate_testcase should be optional
    
    Requested by @montyly

commit fe2538f6bc7aa82656771aa586fb258d2680c592
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Tue Mar 6 06:42:48 2018 +0700

    Add docstring for ARM's operand.is_shifted (#788)
    
    So that people don't have to google that by themselves! lolo

commit 328b62350a87932dc6469356c1926469e1630d05
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Sat Mar 3 03:55:13 2018 +0700

    Change assertion->exception and add msg when target file is not present (#778)

commit 7349a0b13d74958e67b45152eb09e302146a22e9
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Fri Mar 2 21:52:56 2018 +0100

    Fix out-of-bound index in EVMWorld._process_pending_transaction (#786)

commit 03ecb3fd9f8ecaed21f2daae7414831585d5f51e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 1 18:48:10 2018 -0500

    Fix cli --data parameter (#781)
    
    * Actually use args.data
    
    * Update decree

commit 17e90986b896ff7c66a20aa2e5d6bac286503596
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Mar 1 18:27:52 2018 -0500

    Used a namedtuple for pending transaction. Issue #689 (#775)
    
    * Used a namedtuple for pending transaction. Issue #689
    
    * Changed field names in namedtuple. Issue #689

commit 9b75a1f0fe247fa0317a46ff91270c5e34eb1054
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Fri Mar 2 06:24:27 2018 +0700

    Unicorn emulator: get uc_arch & uc_mode values just once (#779)

commit 20cb97f7aec84707436cc61115ef33107dbd32e4
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Fri Mar 2 01:40:51 2018 +0700

    Fix Cpu.execute's improper reporting of `Unimplemented instruction` (#777)
    
    When particular instruction's implementation raised an `AttributeError` it was catched by `Cpu.execute` and we just saw "oh this instruction is not implemented" while it was, but its implementation was broken.

commit 48f88be7590c7b15ff27cfd8c2da883d71e98190
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Feb 28 20:11:54 2018 -0300

    Dev fix solver getvalue (#739)
    
    * Increment default gas
    
    * Do not solve concrete values
    
    * Do not solve concrete values
    
    * Do not solve concrete values
    
    * Remove comment
    
    * Make solver get_value return concrete values untouched - wip
    
    * Handle solver.get_value integers
    
    * fix reporting
    
    * Make solver.get_value return the expression untouched when concrete
    
    * Remove hack; we know `c` can't be an int type
    
    * Revert "Remove hack; we know `c` can't be an int type"
    
    0849094525d7e4cea0295d4be13552dea9c8ad72
    
    * Fix cli --data argument
    
    Previously, it was being ignored :/
    
    * Fix linux output generation
    
    solve.get_value returns back an int, if it concretized the sym var
    
    * Revert "Fix cli --data argument"
    
    2ee740acb20a9d393e1a7984d7ec0e0fe64dbfaf

commit 39370ccf3c9f74c3bb67eb7413b41993377a0948
Author: Pierre Pronchery <khorben@defora.org>
Date:   Tue Feb 27 18:33:25 2018 +0100

    Let the Python interpreter be specified externally (#774)

commit 461da57ea3a9b30c20b52d7bcded863d680f3fcd
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Feb 26 21:09:34 2018 -0300

    Array value configurable. 8,16,32..256 bits (not prefixed to 8) (#732)
    
    * Array value configurable. 8,16,32..256 bits (not prefixed to 8)
    
    * Test Array256->256
    
    * Remove old 8 bit assumptions
    
    * Add arrayProxy copy constructors and remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * remove old 8 bit assumptions
    
    * Better ArrayProxy special case handling
    
    * Fix tests
    
    * Review fixes
    
    * review fix
    
    * fix gas variable
    
    * Review fixes
    
    * Fix vm.gas access

commit a3ee31e6e69d974bc3a4cd39760c70c666e19867
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Feb 23 18:31:31 2018 -0500

    Manticore 0.1.7 Release (#764)

commit 394401e3f45fe23ba32af7f49b1332f35a067933
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Feb 23 18:07:49 2018 -0500

    Fix ARMv7's ADD (#769)
    
    * Fix armv7's ADD

commit b9aa4837450aaf278e44b6bcccababe7c45fe1bb
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 23 12:42:15 2018 -0800

    evm: Fix MUL overflow false positive (#767)
    
    * initial
    
    * Add test for mul checker
    
    * clean
    
    * Rename and clean
    
    * Rm testing
    
    * Better comment, and clean
    
    * Split tests, add more tests
    
    * Clean up stuff, remove unnecessary masking
    
    * fmt
    
    * Add back constrain to make it match the originall buggy situation
    
    * Clean up surrounding code, make it unit testable
    
    * Correct name
    
    * Use individual arguments for helpers

commit 3f1c51fa913adfa0c6bece264fa2d2fdd39ea1f5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 23 08:13:55 2018 -0800

    Improve solc error output (#765)
    
    * Improve err handling when there's a solc error, print the error
    
    * Fix bug, don't merge stdout/err
    
    * Simplify
    
    * Add more space

commit d0f69c755cc0bd6f53b93a9487d4dc9b0579b400
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Feb 22 13:04:01 2018 -0800

    Add ethereum regression tests (#763)
    
    * Clean some unused variables
    
    * Add basic infrastructure
    
    * Add real eth regression tests
    
    * Use check_call
    
    * Suppress stdout
    
    * Make 705 work
    
    * Less error prone way of testing

commit 8e47a6ebe9be706f8cc97f8fec902588b5fd7c2f
Author: Jean Jordaan <jean.jordaan@gmail.com>
Date:   Thu Feb 22 20:17:49 2018 +0700

    Drive-by typo correction ;-) (#762)

commit ebe0baa178c2fce672d30096d62ee39dfa4c8456
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 20 12:10:29 2018 -0800

    Emit events for exception raising evm instructions (#722)
    
    * Create EVMInstructionException, properly emit did_evm_execute_instruction for insns that trap to the platform
    
    * Emit event before execution of platform handlers. This is because many of the
    platform handles actually destroy the cpu (platform.current) via pop_vm.
    Clients that receive the event may want to access the cpu though, for example
    to see the current PC. so we emit the event right before, so they can do this
    
    * simplify
    
    * move closure below result decl
    
    * Add comment to explain
    
    * Fix typo
    
    * Revert back to pythonic style
    
    It was this way to test emitting the did execute signal here, rather
    than in the evm cpu
    
    * Remove inline function definition from critical path
    
    * Add test for events for exception instructions

commit 9f0d25c5d93d9af0a16af8619d159f6f677e59ae
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 20 04:57:07 2018 -0800

    Fix evm state handling regression (#741)
    
    * Revert breaking change
    
    * Add assertion to verify states being queued

commit 105a7d3aee8d324c778467278332e6a2c2a3a305
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Tue Feb 20 08:48:26 2018 +0700

    Speedup x86 execution by caching AMD64RegFile.all_registers (#755)
    
    * Cache `all_registers` for AMD64RegFile

commit 680fc8f17e267394e6770e6b0d09a82afdddd346
Author: Disconnect3d <dominik.b.czarnota@gmail.com>
Date:   Sat Feb 17 17:51:58 2018 +0100

    Armv7 code refactor (#749)
    
    * Armv7 code refactor
    
    Removes dead imports, makes code style more consistent and a bit more compliant with pep8 (yeah i seems we don't enforce any particular style, but this seems to be a reasonable default for me).
    
    * Review fix: add comment for armv7 _shift

commit c6f457d72e1164c4c8c6d0256fe9b8b765d2cb24
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Thu Feb 15 14:47:36 2018 -0600

    Updates for thumb mode (#610)
    
    * WIP. issues with setting PC correctly via POP are corrected. issues with pc relative addressing in thumb mode corrected. Still a memory access error, but getting there
    
    * WIP - PC relative addressing in thumb mode now aligns the value for PC per the spec before applying offset
    
    * General thumb mode fixes:
    * ldr pc, <operand> now swaps modes and sets pc correctly
    * the bl instruction sets the lr appropriately for the current mode
    * the two operand forms of the ORR, EOR, and BIC instructions now exist
    * tests added for these updates
    
    * comment cleanup
    
    * WIP :more thumb mode instructions, a special case for the sys_brk handled, and a really ugly solution to an internal plumbing problem
    
    * First attempt at concretizing ARM mode
    
    * Handle symbolic mode for ARMv7
    
    * Clean up imports
    
    * Make comment more accurate and use instruction.size
    
    * Collapse _Shift and _Shift_thumb
    
    * Make ARM mode handling more Pythonic
    
    * Improve comment on arm shift register handling and capstone behavior

commit fca3179dd0814dfea8ab38321ba485f750b971bf
Author: Srinivas P G <spg349@nyu.edu>
Date:   Wed Feb 14 16:52:54 2018 -0500

    System calls addition - sys_getrandom and sys_openat (#640)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * getrandom system call - Initial commit
    
    * openat system call initial commit
    
    * getrandom system call fixes
    
    * openat and getrandom system call
    
    * Update sys_getrandom
    
    * Make BadFd more generic as FdError
    
    * Resolve mode inside File
    
    * Support opening directory with open(2)
    
    * Fix fd leak
    
    * add sys_openat tests

commit 843a4f399e274ba405e60184f03f19f8a977b498
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Feb 14 18:28:50 2018 -0300

    Fix finalize (#738)
    
    * fix finalize
    
    * Document the state id -1

commit 2f2de29d36cd0b59314d07eb0120ea9ddcad05d9
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Feb 14 17:13:40 2018 -0300

    Better plugin context management. (#730)
    
    * Better plugin context management. Example UseDef logging plugin for evm
    
    * Example plugin to log use-def
    
    * Better plugin name checking hints
    
    * Better plugin name checking hints2
    
    * Fix uninititalize-plugins (found via the warning)
    
    * Remove redundant variables in example
    
    * Typo
    
    * Better warning print (class name)
    
    * better safety check + context fix
    
    * better variabke naming
    
    * Update manticore.py

commit 84aca4ac1b7746607cb1d14cfd8729de2cfbec6e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 13 19:15:54 2018 -0500

    Add docs on symbolic input (#750)
    
    * Change tagline
    
    * Not sure socket support is a gotcha exactly
    
    * initial docs
    
    * Better docs
    
    * Code blocks
    
    * Links to the api docs
    
    * Improve language
    
    * Doc add_symbolic_file in public API
    
    * Rm stray init

commit f8587ff13e3e3b44d47897a9803b562a014da693
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Feb 13 20:55:52 2018 -0300

    Bump default gas budget (#740)

commit 4d84551375fc79c5cbfc0d06fcdd51cc13c521cd
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Feb 8 15:25:40 2018 -0500

    Fixed Issue #723 - changed _pop() to _pop_vm() (#745)

commit 5a38737edea4684cf4080c9dda4fe35c7caf43fc
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Feb 5 15:00:05 2018 -0300

    Fix sha3 (#703)
    
    * the fix
    
    * Add default example sha3 when unknown
    
    * Review
    
    * Remove IF statement on potentially symbolic value

commit 2f2b081aa989f12e257af53b9d412ce19735c6a7
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Feb 2 15:37:24 2018 -0300

    Added multiprocessing support to generate testcases in finalize (#697)
    
    * Added multiprocessing support to generate testcase in finalize
    
    * Improve the code using @feliam suggestions
    
    * Fixed multiprocessing code. Now it really seems to work!™

commit 97307906c5e4d4a89d9631628e6d58f1a19b7e82
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 2 13:23:04 2018 -0500

    Fix incorrect number of transaction in certain states (#724)
    
    * privatize Executor.put, use in evm
    
    * better typeerror
    
    * Simplify execute(), directly raise exception in _process...

commit 9f7b87d0b8e047d26f24ed9e5ddddb0068069ae9
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Wed Jan 31 11:47:46 2018 -0500

    Use the 'force' flag for bss zeroing (#719)
    
    * Clean up bss trailer zeroing

commit a1f809732d0a1bfedb0bd09c1115bb1857635385
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jan 30 17:31:28 2018 -0300

    Quick evm header fix (#679)
    
    * Quick evm header fix
    
    * Fix BLOKKHASH

commit c0068431c9eb754678aa6a7ef7bb70ac9523a34d
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Tue Jan 30 12:17:27 2018 -0500

    Introduce a 'force' parameter to memory access functions (#632)
    
    * whitespace cleanup
    
    * Remove access check from COWMap.__setitem__/__getitem__
    
     * Access checks happen via read/write, so these checks are unecessary.
    
    * Add force parameter to read/write functions
    
    * Introduce  to AbstractCpu's accessors
    
    * Add mem force tests
    
    * Apply force param to symbolic operations
    
    * Add symbolic force write tests
    
    * Clean up test
    
    * Fix symbolic write behavior; add tests

commit faf1d16b99e9a5ecf842b0dce07a2c0873c66ea4
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jan 29 20:28:31 2018 -0300

    Allow importing solidity files from current folder (#717)

commit 60d2b61fb36ddb1c0079647a3ceebfb6f9d0c84f
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu Jan 18 15:50:13 2018 -0500

    Run linux examples in Travis (#668)
    
    * Update makefile; add a list target for testing
    
    * simplify nostdlib example
    
    * Make sendmail example return success
    
    * Add tests to run all examples
    
    * Add some targets to exclude
    
    * Run example scripts; temporarily add a workspace accsesor to mcore
    
    * Optionally read end of main from argv
    
    * Make concolic test more robust
    
    * Clean up Makefile
    
    * Be better with phony targets
    
    * Add run_simple and state_control tests
    
    * verbosity++
    
    * Make sure we fail when we intend to
    
    * Simplify travis_test.sh
    
    * Remove multi_arch_sym

commit 7907d0179dbc0a2a0c8161d9bf6c746d499b50cd
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Wed Jan 17 16:11:13 2018 -0300

    Added support to analyze solidity source code with multiple contracts using the --contract command line option (#712)

commit aeb3b99f7dcc90cbf4fa6f76d62087dc294a357a
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jan 16 13:53:01 2018 -0300

    the fix (#702)

commit 000ef094f9694e1f07a996146d8364fb81f9365c
Author: Alexander Holman MBCS AMIAP <alexanderholman@users.noreply.github.com>
Date:   Tue Jan 16 16:26:07 2018 +0000

    Update state.py (#709)
    
    replace `\0` with `NULL` as per issue #699

commit 03f92a7f0ba105666ccc7f982854e31b174ffcd5
Author: Alexander Holman MBCS AMIAP <alexanderholman@users.noreply.github.com>
Date:   Tue Jan 16 16:25:16 2018 +0000

    Update manticore.py (#710)
    
    Removed first of twice declared function `enqueue` as per #706

commit 465c926a2e39d5daf1405711dac61b6ddd0a2527
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jan 8 20:34:27 2018 -0300

    Fix metadata setting race (#675)
    
    * Set the sol metadata before building the contract account
    
    * EVM account lazy hashes
    
    * new_address now public
    
    * Micro-optimization more readable
    
    * Arithmetanic

commit 7b2607b0a6c1ebf2b3d56a34ecbea840d73b56d5
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Mon Jan 8 14:09:27 2018 -0300

    Improved readability of .tx files using repr to print function call arguments (#694)

commit 98712cf4264dd724b0cc5b5d9acc9a3eebbf2015
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Jan 5 18:04:35 2018 -0300

    Adds support for unmarshaling bytes32 type (#680)
    
    * Adds support for unmarshaling bytes32 type
    
    * Review fixes

commit 976f31446d5719895735db599db2e36d83cab61c
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Jan 5 16:06:00 2018 -0300

    Add missing DivideByZeroError import and replaced DivideError by DivideByZeroError (#692)

commit 743d479cbf10f40e3079d56e3f26b2d1f4e34893
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Jan 5 12:39:25 2018 -0300

    Added missing **kwargs to ManticoreEVM constructor (#686)

commit 3b796091c257248d671f86aa8abc661613f50834
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Dec 29 12:49:50 2017 -0300

    NotImplemented(x) -> NotImplementedError(x) (#677)

commit b6753a34ae4e6c43f6c5a51b573fa8e791ab4fd5
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Dec 29 12:48:07 2017 -0300

    Adds support for unmarshaling uint8 type (#681)

commit 4c0f4bc6cf7509eb0f3399327fb494188b137671
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 19:11:25 2017 -0500

    Trick rtd into thinking we don't need z3 (#671)

commit a9be273c2e81dc661e05b5fb320a6ecd45ac7c39
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:44:09 2017 -0500

    Update README.md (#670)

commit 8a588c70f4a4ddc12e98cbbff0190988723961bc
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:30:16 2017 -0500

    Manticore 0.1.6 (#662)
    
    * Update CHANGELOG.md
    
    * Add external contributors
    
    * add categories
    
    * Update CHANGELOG.md
    
    * initial rough notes from commit log
    
    * Update CHANGELOG.md
    
    * Update CHANGELOG.md
    
    * Bump version numbers
    
    * Update CHANGELOG.md
    
    * readme 2.0
    
    * update tagline

commit a7fb995aa184d6695e7b315fe5cf94d084557d04
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:27:40 2017 -0500

    Update __main__.py (#669)

commit 6499c0e281badb8fbe55cc8add4be98d4a1097e1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 18:11:14 2017 -0500

    Add --tx flag to control symbolic tx (#667)
    
    * Add --tx argument that must be a positive int
    
    * Add simple tx_count mode
    
    * Help updates
    
    * Add None default arg
    
    * Implement as upper bound, rather than absolute tx num
    
    * rename to positive

commit 2e578acf9d11a71b21f8ec05d18a402ea6b9afee
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Dec 22 16:24:56 2017 -0500

    Fix Unicorn exception handling; add a symbolic wrapper for exit(2) (#616)
    
    * Fix unicorn tests and exception handling; add a sym wrapper for sys_exit
    
    * Add debug output when solving for exit() arg
    
    * Update how sys_exit(expr) is handled

commit 8413f7e9477dd66c59fa6e1433f68d09eda2ce6b
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 16:24:21 2017 -0500

    Rm unused evm workspace function (#666)
    
    * Rm unused function
    
    Since this func was added, _generate_testcase_callback was overrided
    in ManticoreEVM totally bypassing this function, which is now unused
    
    * add comment

commit 7875aaf5fd6c4f8fecbacef5bf58b4794733454f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 14:05:37 2017 -0500

    Rename manticore.seth to manticore.ethereum (#665)
    
    * Rename file
    
    * Fixup refs
    
    * update logging
    
    * Update docs
    
    * Update docstr
    
    * Clean docs

commit c200aeefec5c307cb5ab5c65b1cba18b24897d4e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 13:14:09 2017 -0500

    output the actual exit status when finalizing evm states (#664)
    
    * Instead of 'Still Running' use the actual state exit status
    
    * Throw states are terminated now
    
    * More accurate phrasing, since 'throw' and 'not enough funds' are here too

commit 7aa85f13bbe5f0b340f7177a77b39c87ebcc1f08
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 22 12:23:17 2017 -0500

    Clean examples/evm (#661)
    
    * Clean examples/evm, add a new one
    
    integer_overflow.py -> simple_int_overflow.sol
    simple_functions.py -> simple_multi_func.sol
    simple_transaction.py -> simple_value_check.sol
    
    * Add umd example

commit 6896c227ef1d015ae15b67755efd3942d1c6853c
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu Dec 21 17:02:44 2017 -0500

    Initial implementation of concolic algorithm (#653)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Initial concrete trace follower
    
    * Add extended (json) trace support
    
    * More stubs for condition gather
    
    * Update trace saving to new format
    
    * Produce trace regardless of contents
    
    * Record register deltas in trace
    
    * Move initialization to _start_run so we can call run() multiple times
    
    * Re-fix multiple workspace bug
    
    * Fix it correctly
    
    * Add extended trace and accessors
    
    * make sure did_execute_instruction is always published
    
    * Produce a consistent version
    
    * move extended tracing to separate class
    
    * Reorg of extended tracing plugins
    
    * Add concolic tracing script
    
    * Clean up old hooks
    
    * Sync memory as well; cleanups
    
    * Revert binary tests
    
    * simplify concolic follower
    
    * Move trace follower to plugin.py
    
    * Simplify follower
    
    * Add skip ranges to Follower
    
    * Update concolic.py
    
    * Remove redundant state init
    
    * Clean up driver script
    
    * Update header line
    
    * Move trace follower
    
    * Move Follower to follow_trace.py
    
    * rm unused import
    
    * Remove unnecessary property
    
    * rm ConcreteTraceFollower
    
    * Revert start_run behavior
    
    * Initial implementation of concolic algorithm (#574)
    
    * Fix coverage calculation vs. metadata (#529)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * Various bug fixes. (#530)
    
    * Fixes #503
    
    * Fixes #515
    
    * Fixes 272. Concretize data written to a fd.
    
    * Revert debug hack and fix overly broad exception
    
    * Update did/will_exec_instr semantics
    
    * Clean up imports
    
    * Update logging and improve sys_open return
    
    * Update variable names+doc for consistency
    
    * Remove win32 support (#535)
    
    * Remove Windows support files
    * Remove Windows test files
    
    * Localize log formatting changes (#547)
    
    * Don't add custom format string to root logger
    
    * Fix handler propagation
    
    * Move inline function definitions out of the AbstractCPU's execute method (#538)
    
    * This change moves from inline function definitions out of the critical path of AbstractCpu's execute method.
    
    * Raise a mcore exception if we fail at emulation
    
    * Fix all integral type checks that forget long (#555)
    
    * [fix] Issue #550: generates extra workspace folder (#557)
    
    * [fix] Issue #550: generates extra workspace folder
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Slight workspace and store refactor
    
    * Handle file.tell() error, which will happen for special files (/dev/tty) (#559)
    
    * Fix SLOAD invalid memory access (#562)
    
    Check global_storage includes an entry at address before trying to load
    storage.
    
    * New API for EVM analysis (#551)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Add PCMPXSTRX Instructions (#507)
    
    * Add PCMPXSTRX Instructions
    
    * bug fixes
    
    * unittest related fixes
    
    * Full test of pcmpxstrx
    
    * Move tests
    
    * Fix typo per issue #552 - s/arm64/amd64/ (#561)
    
    * Added missing syscalls in decree syscall trace (#545)
    
    * added missing syscalls in decree syscall trace
    
    * added missing parameter in callback of BranchLimited policy
    
    * progress
    
    * can flip constraint set
    
    * hack around double decl issue
    
    * can gen input
    
    * what is this, a coding interview?
    
    * did it?
    
    * clean
    
    * finish
    
    * pretty log messages
    
    * comment, clean
    
    * more cleaning
    
    * cmt
    
    * Only really fork when there's multiple solutions (#569)
    
    * Update comment and path
    
    * Add UMD simple assert example (#573)
    
    * Manticore prints linux ret code as uint instead of int (#578)
    
    * Fixing raise issue #435
    
    * syncing git
    
    * Fix Bug #570
    
    * syncing
    
    * removed all binaries
    
    * missed one file
    
    * Updates travis cache to python 2.7.13 (#576)
    
    * Updating README with solc binary requirements (#575)
    
    * Updating README with solc binary requirements
    
    * Update README.md
    
    * Assert valid operand length (#558)
    
    * Assert valid bytecode and operand length
    
    EVM bytecode comes in 32-byte chunks, and contracts require at least one
    segment to be created. An example, originally written by @ggrieco-tob in issue #546, is included.
    Unsure what expected behavior should be, but initial state has a problem when a contract is
    created with a single byte.
    
    Also added some exception handling in `parse_operand()` to catch invalid
    instructions, e.g. a PUSH1 instruction followed by no bytes.
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Fix SLOAD invalid memory access
    
    Simple check to ensure address storage is in global_storage before
    attempting to load data.
    
    * Remove invalid assertions
    
    * Fix for issue 556 and 591 (#590)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Fix Issue: 597 - Remove unused policy argument in function State.solve_n (#598)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * Fixes to thumb mode instruction implementations
    
    * Thumb specific fixes to the SUB, BX, and MOV instruction implementations
    * implemented hardcoded result for gettid syscall
    
    * Trace following mode (#513)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Initial concrete trace follower
    
    * Add extended (json) trace support
    
    * More stubs for condition gather
    
    * Update trace saving to new format
    
    * Produce trace regardless of contents
    
    * Record register deltas in trace
    
    * Move initialization to _start_run so we can call run() multiple times
    
    * Re-fix multiple workspace bug
    
    * Fix it correctly
    
    * Add extended trace and accessors
    
    * make sure did_execute_instruction is always published
    
    * Produce a consistent version
    
    * move extended tracing to separate class
    
    * Reorg of extended tracing plugins
    
    * Add concolic tracing script
    
    * Clean up old hooks
    
    * Sync memory as well; cleanups
    
    * Revert binary tests
    
    * simplify concolic follower
    
    * Move trace follower to plugin.py
    
    * Simplify follower
    
    * Add skip ranges to Follower
    
    * Update concolic.py
    
    * Remove redundant state init
    
    * Clean up driver script
    
    * Update header line
    
    * Move trace follower
    
    * Move Follower to follow_trace.py
    
    * rm unused import
    
    * Remove unnecessary property
    
    * rm ConcreteTraceFollower
    
    * Revert start_run behavior
    
    * Centralize system call logging (#602)
    
    * Remove per-syscall logging
    
    * Make Cpu.read_string() stop reading at first symbolic byte
    
    * Centralize syscall logging
    
    * Update helper docstring
    
    * Update arg/ret expansion
    
    * Check for issymbolic first
    
    * Tiny hex format change
    
    * Log unimplemented instructions (issue 163) (#599)
    
    * Remove double printing of exception.
    
    * Pretty print the unimplemented instruction raised by unicorn (UcError).
    
    * Raise exception after unimplemented instruction error logging.
    
    * Ensure the raised exception is actually a unicorn invalid instruction error.
    
    * Resolve conflict
    
    * EVM assembler/disassembler doc and cleanup (#563)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * EVMasm refactor
    
    * EVM api refactor (#589)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Fixed Issue #533 (#606)
    
     * Remove Platform._path
    
    * Amend pr guidelines (#615)
    
    * Fixed Issue #619 (#623)
    
    Add newlines in .trace file generation
    
    * Hide legacy cli flags from cli help (#622)
    
    * Fixed Issue #533
    
    * Removed --replay argument from cli help. Issue #617
    
    * Update help description
    
    * Remove unused --size flag
    
    * Emit .input instead of .txt files in workspace (#625)
    
    Related: #612
    
    * Update workspace.py
    
    Changed extension to .input
    
    * Update test_workspace.py
    
    * changed key value pair in test_workspace bc of change of extension to .input in workspace.py, fixed issue #618
    
    * removed unwanted directories
    
    * Update seth.py
    
    * Update seth.py
    
    Change in Documentation issue #612
    
    * EVM refactor and simple UI (#629)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Initial eth cli based on solidse.py (#633)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * initially evm cli from solidse.py
    
    * rm prints, make import work
    
    it's just `import seth` because this file runs from the perspective
    of being inside the package. `from manticore.seth` doesn't work
    because manticore.py gets priority over the manticore package, and
    there is no seth entity inside manticore.py
    
    * rm wip cli file
    
    * add excess printing as a big comment
    
    * print minimal report
    
    * require .sol only
    
    * rm solidse again
    
    * rm fluff
    
    * evm: Make 'not enough funds' states finalized states (#636)
    
    * print on every
    
    * terminate not enough fund states
    
    * Better check
    
    * revert debug change
    
    * Implement initial evm workspace, fix small bugs (#638)
    
    * print on every
    
    * save the bytecode to look at later
    
    * update tuple
    
    * wip workspace files
    
    * wip
    
    * generate tx files
    
    * rm unused event handler
    
    * clean up solving for tx.data
    
    * Revert "print on every"
    
    0caaae3658a169c9763c51544aa3c79a4e3940ca
    
    * Detectors () (#637)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review
    
    * Refactor concolic implementation (#601)
    
    * Refactor concolic.py
    
    * make arg name more descriptive
    
    * A few cleanups
    
    * Keep track of traces
    
    * Added perm() description
    
    * Rm meaningless paths variable
    
    * little comment
    
    * rm bug comment
    
    trace set is the correct solution; we need to filter out satisfiable but
    redundant paths that are generated by the dumb permuter
    
    * clean comments, debug stuff
    
    * Better EVM workspace output (#641)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review
    
    * New workspace output
    
    * Fix examples
    
    * wrog merge fix
    
    * Fix examples/new api
    
    * Fix examples/new api/output
    
    * More output
    
    * More doc
    
    * Broken examples deleted
    
    * Debug code removed
    
    * Wrong docstring
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Fix TODO
    
    * Fix for issue #642 (#643)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * fix issue 642
    
    * Fix z3 oddity: reset vs optimization (#627)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Mitigates the wrong objectives print in z3 4.4.x
    
    * Exception to SolveException
    
    * Fix compilation bug (#645)
    
    * fix for #608 using a local definition (#644)
    
    * refactor logs files content (#646)
    
    - if no logs just print nothing
    - output any printable bytes in the memlog as a convenience in case they logged strings

commit b8ea5226d732edf7b7145d07d2a178438d5b98b0
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Thu Dec 21 14:18:09 2017 -0500

    0.1.6-related cleanups (#659)
    
    * rename .runtime_bytecode to .bytecode
    
    * init_bytecode -> init.bytecode
    
    * clearer language
    
    * Consistent returns, arguments; added address property
    
    * docstring cleanup
    
    * Fix spelling; remove extra result capture

commit 6b794fecaa65e38d56ca7bd7e6ea2a9156842f35
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Dec 21 12:54:24 2017 -0500

    eth int overflow: tests, mul support (#656)
    
    * Move algorithm into ManticoreEVM
    
    * Rm buggy unused line
    
    * Initial eth testing setup
    
    * Check for overflow in mul also
    
    * clarifying comment
    
    * Install solc for travis
    
    * Add sudo
    
    * x
    
    * Rm travis_retry, since we rarely actually use it, and it's not available in this script for some reason
    
    * Check for specific findings
    
    * Fix test
    
    * Clean up transaction firing logic
    
    * Use less strict check, better for floating point

commit aac83ada10c4426f0a0a570255fb73421339840d
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Dec 20 13:55:17 2017 -0500

    Add error handling to solc wrapper (#651)

commit cc8ee5685e3c3c6bb2a2302926228e53de82b6a3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Dec 20 13:54:56 2017 -0500

    Improve evm cli output (#652)
    
    * Replace starting text
    
    * Use warning logger for detector warnings!
    
    * Uniformity bt linux and evm
    
    * clean up suppress hack
    
    * Prettify output
    
    * minor

commit 95967f84dfd9e9dd5b255f2f9b25aae2361dadb9
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Tue Dec 19 18:47:10 2017 +0100

    Seth: Fix uninitialized address in _generate_testcase_callback (#650)

commit 591d7b81d56dae88c441975e955fece9f489ff58
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Mon Dec 18 16:06:44 2017 -0500

    EVM logging cleanup (#647)
    
    * make init_logging() idempotent
    
    * Update logger names; add plugin logger
    
    * Add logging support to main
    
    * Start tracking completed transactions as part of ManticoreEVM
    
    * Make evm and non evm output more consistent
    
    * Remove redundant start_workers
    
    * make debug output conditional in Manticore
    
    * Improve seth logging
    
    * Add seth to logger lists and make sure new loggers are initialized
    
    * Make completed_transactions not lie during the processing of one
    
    * Print coverage after processing a transaction
    
    * Demote starting msg to debug

commit 6dd50da350b1d71fd0a685a31173af70b4dfa2d1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Dec 18 12:00:01 2017 -0500

    refactor logs files content (#646)
    
    - if no logs just print nothing
    - output any printable bytes in the memlog as a convenience in case they logged strings

commit 833ef4af2f2b25a009aac7cc102e8c86c7a26cee
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Fri Dec 15 18:57:02 2017 -0300

    fix for #608 using a local definition (#644)

commit 670076c8559b24b1c91e1cf999c6464668dfa040
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Fri Dec 15 21:53:54 2017 +0000

    Fix compilation bug (#645)

commit 9839cbdbb0d1d94fd062da9d3504371ff411a8ef
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Dec 15 16:45:30 2017 -0300

    Fix z3 oddity: reset vs optimization (#627)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Mitigates the wrong objectives print in z3 4.4.x
    
    * Exception to SolveException

commit aabfecfe77c05670c953121f48f1855266aa6b38
Author: Srinivas P G <srinivas@ginger.io>
Date:   Fri Dec 15 12:13:00 2017 -0500

    Fix for issue #642 (#643)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument
    
    * fix issue 642

commit db80685758c4192a6a0ce96b8cbd0eee1cd4ebce
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Dec 15 02:17:41 2017 -0300

    Better EVM workspace output (#641)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review
    
    * New workspace output
    
    * Fix examples
    
    * wrog merge fix
    
    * Fix examples/new api
    
    * Fix examples/new api/output
    
    * More output
    
    * More doc
    
    * Broken examples deleted
    
    * Debug code removed
    
    * Wrong docstring
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Update evm __main__
    
    * Fix TODO

commit 4b79711b92e9959f2fda4da548c09d6298de0e89
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Dec 12 14:56:39 2017 -0300

    Detectors () (#637)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Code review
    
    * Initial detector plugin. integer overflow and unitialized mem
    
    * Better metadata handling and new events for detectors
    
    * detectors wip
    
    * Better name for internal findings context
    
    * Explicit detector register
    
    * review

commit df9af1fd12f9bbe944f801a6ade2fddbf0b6f6a7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Dec 11 16:14:06 2017 -0500

    Implement initial evm workspace, fix small bugs (#638)
    
    * print on every
    
    * save the bytecode to look at later
    
    * update tuple
    
    * wip workspace files
    
    * wip
    
    * generate tx files
    
    * rm unused event handler
    
    * clean up solving for tx.data
    
    * Revert "print on every"
    
    0caaae3658a169c9763c51544aa3c79a4e3940ca

commit 7ea30192a144d465d814b3c97d2f71bbd714f632
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Dec 11 11:36:30 2017 -0500

    evm: Make 'not enough funds' states finalized states (#636)
    
    * print on every
    
    * terminate not enough fund states
    
    * Better check
    
    * revert debug change

commit 3f0441148fa490d4a38de013c8f66bccebca3fc8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Dec 8 11:15:03 2017 -0500

    Initial eth cli based on solidse.py (#633)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review
    
    * initially evm cli from solidse.py
    
    * rm prints, make import work
    
    it's just `import seth` because this file runs from the perspective
    of being inside the package. `from manticore.seth` doesn't work
    because manticore.py gets priority over the manticore package, and
    there is no seth entity inside manticore.py
    
    * rm wip cli file
    
    * add excess printing as a big comment
    
    * print minimal report
    
    * require .sol only
    
    * rm solidse again
    
    * rm fluff

commit ed29a22fceb0c187e1ee97ae230f5d9524bd0b48
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Dec 7 20:19:16 2017 -0300

    EVM refactor and simple UI (#629)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor
    
    * Various refactors. Auxiliar for calculating % coverage
    
    * Change report in examples
    
    * Detailed transactions and reporting accessible to the user2
    
    * Fix on Expression Array
    
    * Some documentation
    
    * Get full ABI from solc compiler
    
    * evm/examples -> bugfixes
    
    * Clarify try/except blocks
    
    * Code review
    
    * Code review

commit 764151de7158ac3d3f4c8e8570d1fa584c94e7fc
Author: Daniel Bolognino <dbolognino425@gmail.com>
Date:   Wed Dec 6 18:51:20 2017 -0500

    Emit .input instead of .txt files in workspace (#625)
    
    Related: #612
    
    * Update workspace.py
    
    Changed extension to .input
    
    * Update test_workspace.py
    
    * changed key value pair in test_workspace bc of change of extension to .input in workspace.py, fixed issue #618
    
    * removed unwanted directories
    
    * Update seth.py
    
    * Update seth.py
    
    Change in Documentation issue #612

commit c6902d7265e66e8cd07a5a6b0e8c6e0e72c48cfa
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Tue Dec 5 10:41:38 2017 -0500

    Hide legacy cli flags from cli help (#622)
    
    * Fixed Issue #533
    
    * Removed --replay argument from cli help. Issue #617
    
    * Update help description
    
    * Remove unused --size flag

commit e63838d204e83112fe2a20e2ddae776243a2a97a
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Mon Dec 4 17:53:19 2017 -0500

    Fixed Issue #619 (#623)
    
    Add newlines in .trace file generation

commit be0141e501d3f40b77b111f9451cb2be8a2d33d4
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Fri Dec 1 16:14:56 2017 -0500

    Amend pr guidelines (#615)

commit 77b0542b83bce9695aa79d7447aa58f5c056b111
Author: Arun John Kuruvilla <arunjohnkuruvilla@gmail.com>
Date:   Thu Nov 30 10:16:08 2017 -0500

    Fixed Issue #533 (#606)
    
     * Remove Platform._path

commit 9c777e6d2b34db29e137a049a46a0355eda73660
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Nov 29 19:00:49 2017 -0300

    EVM api refactor (#589)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Initial seth in place refactor
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * refactors
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * WIP seth doc
    
    * WIP move seth
    
    * seth moved to manticore module
    
    * Fixed DUP and typo
    
    * Slightly better evm reporting
    
    * review
    
    * review
    
    * Removed unfinished refactor

commit 3a63402ae55c22d0624c2e6de89abb337c3e89d9
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Nov 29 13:22:16 2017 -0300

    EVM assembler/disassembler doc and cleanup (#563)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes
    
    * Doc and cleanups in evm assembler
    
    * EVMInstruction -> Instruction
    
    * cleanups
    
    * typo
    
    * deepcopy in Constant
    
    * Better EVM-asm api and doc
    
    * some docs
    
    * More evm asm docs
    
    * Fix import *
    
    * typo
    
    * newline between text and param
    
    * similar phrasing to all the other flags
    
    * typo
    
    * typo
    
    * fix function name in comment
    
    * sphinx newline
    
    * documentation fixes
    
    * documentation fixes
    
    * EVMAssembler to EVMAsm
    
    * Fix evm @hook signature
    
    * EVMAsm
    
    * EVMasm refactor

commit e50cc6b9b2a451a6f2eedb94ed3d85bbc4d5bf83
Author: awr|arr <arr@watson.org>
Date:   Tue Nov 28 19:18:12 2017 -0500

    Log unimplemented instructions (issue 163) (#599)
    
    * Remove double printing of exception.
    
    * Pretty print the unimplemented instruction raised by unicorn (UcError).
    
    * Raise exception after unimplemented instruction error logging.
    
    * Ensure the raised exception is actually a unicorn invalid instruction error.
    
    * Resolve conflict

commit 481e41991d4ffff2909e2d6fbd0eb24c38ac6744
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Tue Nov 28 18:36:33 2017 -0500

    Centralize system call logging (#602)
    
    * Remove per-syscall logging
    
    * Make Cpu.read_string() stop reading at first symbolic byte
    
    * Centralize syscall logging
    
    * Update helper docstring
    
    * Update arg/ret expansion
    
    * Check for issymbolic first
    
    * Tiny hex format change

commit 3c7d92bfcdbb82996c59f197fdaa3b6ced6fb5b7
Author: Yan Ivnitskiy <yan@users.noreply.github.com>
Date:   Tue Nov 28 18:14:03 2017 -0500

    Trace following mode (#513)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Initial concrete trace follower
    
    * Add extended (json) trace support
    
    * More stubs for condition gather
    
    * Update trace saving to new format
    
    * Produce trace regardless of contents
    
    * Record register deltas in trace
    
    * Move initialization to _start_run so we can call run() multiple times
    
    * Re-fix multiple workspace bug
    
    * Fix it correctly
    
    * Add extended trace and accessors
    
    * make sure did_execute_instruction is always published
    
    * Produce a consistent version
    
    * move extended tracing to separate class
    
    * Reorg of extended tracing plugins
    
    * Add concolic tracing script
    
    * Clean up old hooks
    
    * Sync memory as well; cleanups
    
    * Revert binary tests
    
    * simplify concolic follower
    
    * Move trace follower to plugin.py
    
    * Simplify follower
    
    * Add skip ranges to Follower
    
    * Update concolic.py
    
    * Remove redundant state init
    
    * Clean up driver script
    
    * Update header line
    
    * Move trace follower
    
    * Move Follower to follow_trace.py
    
    * rm unused import
    
    * Remove unnecessary property
    
    * rm ConcreteTraceFollower
    
    * Revert start_run behavior

commit 88b213de7e25ca7d6d9e12b010cf50cdc9b0593e
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Tue Nov 28 16:46:19 2017 -0600

    Fixes to thumb mode instruction implementations
    
    * Thumb specific fixes to the SUB, BX, and MOV instruction implementations
    * implemented hardcoded result for gettid syscall

commit d98ef2225137aae3f5a230b42a829d077bae105c
Author: Srinivas P G <srinivas@ginger.io>
Date:   Mon Nov 27 18:13:13 2017 -0500

    Fix Issue: 597 - Remove unused policy argument in function State.solve_n (#598)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler
    
    * Issue 597 - Remove the unused policy argument

commit ce888766cd5a7947f250c0733d2429aac4587d8d
Author: Srinivas P G <srinivas@ginger.io>
Date:   Wed Nov 22 16:18:45 2017 -0500

    Fix for issue 556 and 591 (#590)
    
    * version argument in manticore
    
    * Fix 591 - Exception Handler

commit fccf451406139b5bba213d20ee2b697e85464ba6
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Tue Nov 21 11:56:00 2017 -0700

    Assert valid operand length (#558)
    
    * Assert valid bytecode and operand length
    
    EVM bytecode comes in 32-byte chunks, and contracts require at least one
    segment to be created. An example, originally written by @ggrieco-tob in issue #546, is included.
    Unsure what expected behavior should be, but initial state has a problem when a contract is
    created with a single byte.
    
    Also added some exception handling in `parse_operand()` to catch invalid
    instructions, e.g. a PUSH1 instruction followed by no bytes.
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Fix SLOAD invalid memory access
    
    Simple check to ensure address storage is in global_storage before
    attempting to load data.
    
    * Remove invalid assertions

commit fbe70f1bc52def0297aaa7151f9e036f221a56c5
Author: Sidhant Gupta <guptasidhant004@gmail.com>
Date:   Tue Nov 21 04:14:19 2017 +0530

    Updating README with solc binary requirements (#575)
    
    * Updating README with solc binary requirements
    
    * Update README.md

commit 5c52fcaf543db31533a263ebc0fb840c8aec012f
Author: Sidhant Gupta <guptasidhant004@gmail.com>
Date:   Tue Nov 21 02:36:57 2017 +0530

    Updates travis cache to python 2.7.13 (#576)

commit 652c99b471ebb2d2624b7605cb0292d8c21ae9a9
Author: Dushyanth Chowdary <dnc295@nyu.edu>
Date:   Mon Nov 20 16:04:34 2017 -0500

    Manticore prints linux ret code as uint instead of int (#578)
    
    * Fixing raise issue #435
    
    * syncing git
    
    * Fix Bug #570
    
    * syncing
    
    * removed all binaries
    
    * missed one file

commit 1dbf40ea8e13ad60bf4deb43f73caef87ad21eee
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Nov 20 15:35:32 2017 -0500

    Add UMD simple assert example (#573)

commit 35d8fce9df21f3fa645f24174589df84061fe0c1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Nov 17 12:40:30 2017 -0500

    Only really fork when there's multiple solutions (#569)

commit 0e4e9a49e2dcab5651d74fbbd8de4649428efa4c
Author: ggrieco-tob <31542053+ggrieco-tob@users.noreply.github.com>
Date:   Tue Nov 14 17:18:31 2017 -0300

    Added missing syscalls in decree syscall trace (#545)
    
    * added missing syscalls in decree syscall trace
    
    * added missing parameter in callback of BranchLimited policy

commit 352b9ba48d7553f7c14e5358ccabdaec38faa1b2
Author: awr|arr <arr@watson.org>
Date:   Tue Nov 14 15:10:14 2017 -0500

    Fix typo per issue #552 - s/arm64/amd64/ (#561)

commit 8002a1d682a14c857f687754b754dabdee1d12c8
Author: HighW4y2H3ll <tonyhu@sjtu.edu.cn>
Date:   Tue Nov 14 14:39:51 2017 -0500

    Add PCMPXSTRX Instructions (#507)
    
    * Add PCMPXSTRX Instructions
    
    * bug fixes
    
    * unittest related fixes
    
    * Full test of pcmpxstrx
    
    * Move tests

commit 94d2e94bf1554ffa0eccaefec6f1587d9a1be84b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Nov 14 12:06:08 2017 -0300

    New API for EVM analysis (#551)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code
    
    * New solidity biased API and reporting
    
    * Updated examples to new api WIP
    
    * simple_mapping FIXED. new api
    
    * Simple transaction example added. msg.value can be symbolic now
    
    * Reentrancy symbolic now updated to new API + bugfixes

commit b13a8c0c249ca5dcd3df0cc60d22f532d19177e8
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Tue Nov 14 13:34:18 2017 +0000

    Fix SLOAD invalid memory access (#562)
    
    Check global_storage includes an entry at address before trying to load
    storage.

commit d9b54675c53b4d5b41834a762e305615ed48cb49
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Nov 13 18:30:23 2017 -0500

    Handle file.tell() error, which will happen for special files (/dev/tty) (#559)

commit 08f86cc8923c5ed86c70329ba7e1d613fbdbbb9f
Author: cole-lightfighter <cole@onicsla.bz>
Date:   Mon Nov 13 17:20:57 2017 +0000

    [fix] Issue #550: generates extra workspace folder (#557)
    
    * [fix] Issue #550: generates extra workspace folder
    
    Signed-off-by: Cole Lightfighter <cole@onicsla.bz>
    
    * Slight workspace and store refactor

commit 9535ec8fd31b18e9f865b82bc54893516e877db4
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Nov 9 11:28:24 2017 -0500

    Fix all integral type checks that forget long (#555)

commit d341bc94ff1cd015aa3fffc96c155aeab166a910
Author: Peter Goodman <peter.goodman@gmail.com>
Date:   Wed Nov 8 14:48:23 2017 -0500

    Move inline function definitions out of the AbstractCPU's execute method (#538)
    
    * This change moves from inline function definitions out of the critical path of AbstractCpu's execute method.
    
    * Raise a mcore exception if we fail at emulation

commit 7c1e5e16fc147a55528fe0c7aa45e3f44557deca
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Nov 6 18:00:26 2017 -0500

    Localize log formatting changes (#547)
    
    * Don't add custom format string to root logger
    
    * Fix handler propagation

commit 82d1621bfe04b82a818d97b4d8cf6ea28ac5fdea
Author: car bauer <hugin@mimisbrunnr.net>
Date:   Mon Nov 6 16:51:43 2017 -0500

    Remove win32 support (#535)
    
    * Remove Windows support files
    * Remove Windows test files

commit baf2d769a624306f91fcca44bcff0b087f1bba69
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Oct 25 10:53:11 2017 -0400

    Various bug fixes. (#530)
    
    * Fixes #503
    
    * Fixes #515
    
    * Fixes 272. Concretize data written to a fd.
    
    * Revert debug hack and fix overly broad exception
    
    * Update did/will_exec_instr semantics
    
    * Clean up imports
    
    * Update logging and improve sys_open return
    
    * Update variable names+doc for consistency

commit 08e8c3b7d886f03b5c4cf16592b96bb2b3fc6db6
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Oct 23 17:45:01 2017 -0300

    Fix coverage calculation vs. metadata (#529)
    
    * Fixes symbolic reentrancy example
    
    * Fix coverage Issue# 527
    
    * Remove  debug unused code

commit a9ad183354cbeda0780e5b8cc8c652d1a27803f3
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Oct 20 16:43:22 2017 -0300

    Fixes symbolic reentrancy example (#528)

commit 5aa681dc762cf15be6fe987755f5f42e276a0edf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Oct 19 15:46:22 2017 -0400

    0.1.5 Release (#501)
    
    * Update CHANGELOG.md
    
    * Update 0.1.5 README
    
    * Bump version/release date

commit 23218d724ea08338f67400d078d4216505ef5eed
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Oct 18 19:17:26 2017 -0300

    Simple event signature fixes (#525)
    
    * dev-evm-event-bugfixes
    
    * Better stringifierer

commit 8591bff45f67b2ae1cf6c2f7011d01267e6a8fd7
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Oct 17 19:47:20 2017 -0300

    EVM support (#521)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * EVM support - Wip
    
    * EVM support - dependencies fixed
    
    * EVM support - fix decree merge
    
    * fix decode instrucion event
    
    * Fix small bugs in evm opcodes (too many arguments + wrong LOG name) (#380)
    
    Fix wrong call parameters + typo
    
    * Fix Create/Call
    
    * Fix depth
    
    * Default fixed point in arithmetic simplifier
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * wip wip
    
    * Auto tests for evm
    
    * New EVM tests
    
    * Ran 9556  FAILED (failures=166, errors=8, skipped=62)
    
    * Fix some arithmetic instructions
    
    * Ran 9556  FAILED (failures=136, errors=8, skipped=62)
    
    * More instructions - Optimizing symbolic memory
    
    * Added gas to opcodes description - FIX DELEGATECALL POPS
    
    * Add wip wallet example
    
    * The tests
    
    * Solidity constructors need argument after bytecode
    
    * Simple integer overflow working
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * context now working
    
    * Fix context serialization
    
    * Fix test models.  Can not set a state constraints
    
    * typo
    
    * A few typos (constraints setter) and use of public properties in internal methods
    
    * Fix init wallet example
    
    * State __init__ needs to initialize platform constraints
    
    * Internal methods use internal properties
    
    * Better attack modeling
    
    * Better example layout
    
    * Storage backup on CALL is now faster .. and correct
    
    * Add LOG support
    
    * Minimal SE test
    
    * Added examples
    
    * Send ether bugfix
    
    * EVM: Fix wrong balance destination on CALL + decrease caller balance on CREATE
    
    * New balance management
    
    * Trying to maintain known hashes
    
    * Known hash concretization policy
    
    * CALLDATA max size bugfix
    
    * Minimal SE example
    
    * Remove evm tests
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Fix visitors oddity
    
    * setup merged
    
    * remove duplicates and add pysha3
    
    * Remove EVMTests import
    
    * Refactor platform specific code out of ManticoreOutput (#505)
    
    * Initial moving work
    
    * Clean
    
    * Make linux.generate_workspace_files work
    
    * Fix
    
    * clean
    
    * Add test
    
    * Test workspace for platform files
    
    * Skip EVM cpu pretty print
    
    * Remove bad import
    
    * Fix coverage.py for testing
    
    * Clean comment
    
    * Comment hack
    
    * Print evm cpu
    
    * pretty print evm world instead of platform
    
    * delet old scripts/examples
    
    * delet old tests
    
    * Remove z3 install script
    
    * Array.max_size can be None, include check for that
    
    * Rm unused _symbolic_files
    
    add_symbolic_files was moved to linux, so this is not needed
    
    * Rm unused args
    
    * Import evm
    
    * Rm dup function
    
    * Rm stray prints
    
    * Add docs for new classmethod apis
    
    * minimal
    
    * minimal example
    
    * fix minimal
    
    * Fair symbolic SHA3 handling
    
    * Simple mapping example
    
    * coverage example
    
    * fix tests
    
    * fix minimal
    
    * Some eko fixes
    
    * New SETH
    
    * integer_overflow refactored
    
    * Fixing the examples
    
    * init_bytecode -> init
    '
    
    * Concrete reentrancy exampole
    
    * concrete reentrancy selfdestruct
    
    * Update minimal.py
    
    * It's a new Minimal
    
    * Integer overflow example
    
    * New minimal
    
    * minimal fix
    
    * Examples last minute fixes
    
    * Remove debug print
    
    * add plugin.py
    
    * Fixing event subscription
    
    * remove temp params
    
    * Remove param
    
    * Update uncovered will_exec callback prototype
    
    * Clean up debug output
    
    * Automatically generated intruction tests
    
    * Uninplemented instruction test removed
    
    * Unused concretization policy removed
    
    * Fixes enabling default bplugins
    
    * solc from PATH
    
    * Removed unused import
    
    * Logger name updated

commit e84c0513a2d850e3fe63bd23425d7ba67a88c7dc
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Oct 4 15:51:37 2017 -0300

    Manticore plugins (#506)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Experimental plugin system
    
    * tests fixed
    
    * Fix plugins
    
    * Some reporting moved to plugin
    
    * Fix assertions test
    
    * Add published events to classes that publish them
    
    * Update how we verify callbacks
    
    * Update Eventful._publish
    
    * Dev plugins (#512)
    
    * Yet another flavor for event name checking
    
    * really it's a bunch of minimal bugfixes
    
    * Remove get_all_event_names from Plugin
    
    * Update where we get all events
    
    * Use new metaclass-based event registry
    
    * Define prefixes in one place
    
    * remove debug print
    
    * remove debug print

commit 1edee15e5f56001728057865de1981f2dcbfc3ff
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Sep 25 18:09:18 2017 -0400

    Pythonic logger naming (#511)
    
    * More generic logging
    
    * Clean up logger name gen
    
    * Refactor name summarization

commit b9333838ad8973df8d99923b406cde709b26ac2f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Sep 14 11:52:15 2017 -0500

    install z3 with pip in Dockerfile (#502)

commit 0efa37933ac07cb8f83af3baf5f619d03ce1bd73
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Sep 13 19:17:13 2017 -0500

    Fix stderr file creation and test for it going forwards (#495)
    
    * fix stderr file creation and test for it going forwards
    
    * consolidate tests
    
    * clean up imports

commit 58cdee814c594202afa6ac9bab1d31dec94890cf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Sep 13 18:34:45 2017 -0400

    Update test_workspace.py (#497)

commit 23c2585316678db1c421289ea2d3fa9fc7450114
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Sep 13 18:37:42 2017 -0300

    Refactor platform details out from Manticore (#421)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * WIP manticore refactor
    
    * Fix default old-style initial state
    
    * add -> enqueue
    
    * @m.init
    
    * Fix workspace url
    
    * Some test skipped
    
    * Ad Fixme to platform specific stuff in State
    
    * add -> enqueue
    
    * Enqueue created state
    
    * Fix m.init
    
    Use a messy hack to adhere to the spec (callback func receive 1 state argument)
    
    * Add _coverage_file ivar to Manticore
    
    * Fix symbolic files
    
    * remove extra enqueue
    
    * Fixing __main__
    
    * comments
    
    * Refactor CLI, and Manticore high level interfaces (#498)
    
    * Refactor main,
    
    - classmethod for linux
    - refactor manticore ctor - compat with old linux behavior
    - changed verbosity API (to allow for this use case: what if you want to set verbosity for the stuff manticore does in its ctor?)
    
    * rm old verbosity
    
    * small
    
    * Add decree classmethod
    
    * Rm checks ; they are redundant anyway
    
    * Misc
    
    * Move add_symbolic_file to linux platform
    
    * rm redundant checks
    
    * Rm explicit args for deprecated interface
    
    * Fix cli bug
    
    * Allow for both linux and decree from cli
    
    * Add back argv positional param for deprecated api compat

commit f6fea10376d7c4ddd46c9225e39d8ef45b32ea9d
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Sep 12 15:21:48 2017 -0400

    Use z3-solver package (#494)
    
    * Add z3-solver pip dep for z3 install
    
    * Update readme for z3

commit 50923974e253fd81ba1522a15f3d12ab5aa53030
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Sep 12 15:08:53 2017 -0400

    Fix logger verbosity and test (#491)
    
    * something liekt his
    
    * `will_store_state` does not exist
    
    * slightly better cli verbosity test
    
    * Fix variable
    
    * Rm unused callback fun

commit a8ef3ecd9f2bd3913c78ed6cb33d53c77f851218
Author: John F.X. Galea <johnfxgalea@users.noreply.github.com>
Date:   Tue Sep 12 20:03:01 2017 +0100

    Added implementation for sys_dup and sys_dup2 (#490)
    
    * Added implementation for sys_dup and sys_dup2
    
    * Fixed bug in close functionality.
    
    * Removed unwanted white-space
    
    * Updated implementation of sys_dup and sys_dup2
    
    * Fixed is_open function.
    
    * Handle a newfd in dup2 that extends beyond existing fd table size
    
    * Add a minimal sys_getrlimit() implementation
    
    Thank you @johnfxgalea!

commit f8a8373e57ab7e6634d6910e1df0b360baecb455
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Sep 11 13:05:51 2017 -0400

    Request binaries that cause bugs in contributing.md (#486)
    
    * Request binaries
    
    * Update CONTRIBUTING.md

commit 8b66e58c7b1922e218c9536ad620ce2811950d80
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Sep 7 20:15:31 2017 -0400

    Document cli better (#482)
    
    * Update README.md
    
    * Rewrite -h
    
    * Clearer cli usage
    
    * Fix forgotten variable name changes
    
    * Fix more forgotten variables

commit 60c6813a809b534afbb4eb1df063dc2c1f3a5346
Author: John F.X. Galea <johnfxgalea@users.noreply.github.com>
Date:   Thu Sep 7 21:30:55 2017 +0100

    Implemented getcwd sys call, along with a new helper function that wr… (#483)
    
    * Implemented getcwd sys call, along with a new helper function that writes a NULL terminated string to memory.
    
    The reason for this commit is that the sys call was not implemented.
    
    * Fixed logging string for sys_getcwd imp
    
    * Removed semicolon in sys_getcwd function
    
    * Fixed logging string for sys_getcwd imp. The problem was that size is unsigned and the incorrect format symbol was used
    
    * Fixed the following:
    1) Included the string param in the doc of the write_string function.
    2) Added less verbose code to append a NULL to a string in the write_string function
    3) Removed the assert to check if the written string to memory matches with one that is read at a given address in the sys_getcwd function
    4) Fixed bug in the return values returned by sys_getcwd
    
    * Fixed error logs in the getcwd function.
    
    * Fixed return values of sys_getcwd function.
    
    * Fixed string format symbol in sys_getcwd function.
    
    * Removed dir exists check from the sys_getcwd function.
    
    * Arranged memory block check in the sys_getcwd function.
    
    * Removed new line after write_string function.
    
    (Thank you @johnfxgalea!)

commit d83fa737a79937fc8ee639aab601743c38707b54
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Sep 6 18:11:22 2017 -0400

    Create CONTRIBUTING.md (#481)
    
    * Create CONTRIBUTING.md
    
    * Update CONTRIBUTING.md
    
    * Update CONTRIBUTING.md

commit 76797730886f58f7fe526945c66f294d63967c1d
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Sep 1 17:05:43 2017 -0400

    Update examples (#477)
    
    * Use locked_context() in count_instructions example
    
     * We use this example on the front page, and it currently generates
       a flood of warnings.
    
    * Update example indeces
    
    * Remove dump_stats()
    
    * Remove extra comments
    
    * Remove redundant comments

commit 9b8ef3cd762bfd2a1200be81e25577d53686d3b5
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Sep 1 16:31:50 2017 -0400

    Concretize stdout in state summary (#478)

commit 0cd2560138683d396651355b4351d5ae96171149
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Sep 1 11:43:29 2017 -0500

    Update Manticore docstring (#476)
    
    * update Manticore docstring
    
    * fix type docstring

commit d5d22a8aaf2b90ee254995d5c2b8c078bba77d03
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Aug 31 16:44:43 2017 -0500

    Allow Manticore initialization with State object (#475)

commit f9b02bd194f77d30d2e2ec0a7a5a08094197bfc9
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Aug 31 13:48:55 2017 -0300

    New Policy class (#368)
    
    * New Policy class
    
    * Move visited to Policy - Fix contexts
    
    * Add BranchLimited
    
    * signals -> events for branchlimited

commit c6f8fd12918336472bcd8fb8a7ef7220d9041e1f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Aug 31 10:16:52 2017 -0500

    initialize executor at manticore initialization (#471)

commit ca0d7b60d206a7f159694721317034ad49eae666
Author: Yan <yan@users.noreply.github.com>
Date:   Tue Aug 29 17:00:17 2017 -0400

    Add basic socket support (#428)
    
    * Add a descriptor class for socket(2) return values
    
    * Add basic socket(2) and bind(2)
    
    * Basic accept(2)
    
    * Basic recv(2) support
    
    * Debug statements and accept(2)
    
    * Add check for symbolic arg to open(2)
    
    * Fix an example warning
    
    * send/sendfile
    
    * debug->info for some mcore output
    
    * Produce socket data as part of state serialization
    
    * Clean up SLinux.sys_open()
    
    * Document socket(2) peculiarities

commit a025bda97a8d76bda2bbecabdb53220fc7746b08
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Wed Aug 23 17:47:23 2017 -0400

    Updated visualization plugin with coverage info & live update option (#444)
    
    * plugin rearrangement and UI options
    
    * Live update and clear options
    
    * coverage stats
    
    * added check for xref address
    
    * coverage in separate option as BackgroundTaskThread
    
    * license cleanup

commit 60a99d2f81226886fefe0eb083912ab2389ee09a
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Aug 23 16:37:26 2017 -0500

    Seed random on policy init to make results deterministic (#466)
    
    * seed random on policy init to make results deterministic
    
    * document new random behavior

commit 1b653be9b3174a5a2f821ed333e527a01595492b
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Wed Aug 23 14:46:17 2017 -0400

    Basic Caching for Binja IL (#467)
    
    * basic caching (wip)
    
    * moved execute in binja and cleanup of self.instruction refs
    
    * did_emulate_insn and get_current_llil_func renaming
    
    * refactor for hasattr

commit b32379d3d407c3ac348e0252efbe0400bc62aa33
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Mon Aug 21 23:03:47 2017 -0400

    did_execute_instruction nit (#468)

commit d3d1e9c924a69e3e312d74365a2a9e2a418c5bac
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Aug 18 13:48:33 2017 -0400

    Manticore 0.1.4 (#462)
    
    * Bump version number
    
    * Changelog updates
    
    * Include changes to undocumented functionality, but mark as experimental
    
    * Function notation
    
    * Update CHANGELOG.md
    
    * thanks!!!

commit 604de56cfde6e4ec8904986b5d390f97468680f7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Aug 18 11:12:14 2017 -0400

    Update readme (#461)
    
    * No more partial arm
    
    * windows unmaintained :(( and bye pip
    
    * Move dev install insns to wiki, no need to clutter README

commit 715cc436c7b01f514f745b0b574a730c5f3a74aa
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Thu Aug 17 17:43:27 2017 -0400

    Abstract Disassembler classes and Binja CPU + Platform (#364)
    
    * adding abstract disasm class
    
    * before adding abstract insn
    
    * explicit capstone use
    
    * (wip) removing capstone
    
    * debugging nose
    
    * removed disassembler from constructor
    
    * nits
    
    * capstone->cs and nits
    
    * basic memory (wip)
    
    * tmp
    
    * added binja dissasm
    
    * fixed execution pipeline - calling LLIL instructions
    
    * updated parseargs to select disassembler
    
    * unstable (disassembler at CPU constructor breaks tests)
    
    * disasm fix for tests
    
    * nit for aliases in x86
    
    * added a flag to differentiate disassembly and IL-disassembly for binja
    
    * before merging
    
    * merging with dev-events master
    
    * fixed signal forwarding for binja
    
    * cleaner initialization
    
    * Binja RegisterFile. Dropped Platform
    
    * address fixup
    
    * properly incrementing PC
    
    * some work on XOR, SET_REG, REG, CONST, AND, PUSH, POP
    
    * adding first CALL, JMP, LOAD (wip)
    
    * JUMP fix
    
    * GOTO and misc fixes in PC handling
    
    * adding instructions (wip)
    
    * fixing flags and sizes (wip)
    
    * loading database if exists for faster analysis
    
    * fix for register debug
    
    * fixes for register sizes and flags
    
    * FIX for multiple IL instructions sharing the same PC
    
    * removed CONST_PTR and misc fixes
    
    * RET, SHR, shift left & misc instructions, fixing insn sizes (wip)
    
    * flag fixes
    
    * ctypes 2's complement parsing
    
    * JUMP_TO, SYSCALL
    
    * syscall fixups and flag computation using binja il only
    
    * FLAG, NEG, CMP(family) of LLIL, some unimplemented methods
    
    * MUL, DIV
    
    * cmpxchg
    
    * MUL, IMUL, ROR, ROL
    
    * fallback to capstone for all LLIL_UNIMPL and LLIL_UNIMPL_MEM
    
    * fixes for registers and memory when switching CPUs
    
    * check for binja to disable multiprocessing
    
    * merging
    
    * nit
    
    * hack for serialization
    
    * moved check for disassembler to Manticore from __main__
    
    * removing __class__ refs
    
    * cleanup from __class__.disasm
    
    * size calculation from get_instruction_low_level_il
    
    * fix for NEG, check for empty queue, execute refactor
    
    * fixes for LLIL functions
    
    * removal of redundant regfile writes
    
    * nit fixes
    
    * function overrides in Cpu classes and orphan printf cleanup
    
    * nit
    
    * incomplete merge
    
    * verbosity temp mod
    
    * cleanups of FIXMEs
    
    * 2-stage constructor for disassembler
    
    * cleanup binja refs in abstractcpu
    
    * serialization for platform_cpu
    
    * check for UNIMPL in all the il queue
    
    * typo fix
    
    * fix for arm
    
    * typo correction and starting caching implementation
    
    * restored register printing and fixed import in x86.py

commit f9489d324985e6a070f6c3295d6a168800bef59c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 17 16:50:21 2017 -0400

    Document `Manticore.locked_context` API (#460)
    
    * Add locked_context to documented APIs
    
    * Initial

commit 22974ca65e6b6015e8b82583a93227ede87ff440
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 17 16:48:59 2017 -0400

    Add gotchas docs (#459)
    
    * Add gotchas docs
    
    * always

commit 5d87fc83b36c1405cffff7fb7193eb1359f077d3
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Thu Aug 17 10:02:44 2017 -0500

    Instructions and tests to support issue binary for issue #182 (#403)
    
    * orn instruction plus unit test
    * uadd8 and it instructions implemented
    * SEL instruction implementation
    * GE flag set by UADD8
    * IT instruction condition code properly no longer prevents its execution
    * support for multiple instruction tests added to testing setup
    * unit test for SEL instruction
    * cleaned up the tests for thumb instructions
    * implemented sxth and rev instructions
    * implemented tests for sxth and rev instructions
    * updated the add implementation to support two operand variant (i.e., add r4, #4)
    * added test for itete ne instruction

commit 7bb64fe26e0ce43d33211e73e1ebf9f4e81c60be
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Aug 15 10:50:46 2017 -0500

    fix trace-saving behavior (#454)

commit 09bb702fac6273faaf8e0f0bbba0bcae593361c1
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Mon Aug 14 16:05:29 2017 -0400

    Implement logging presets (#445)
    
    * logging template nits
    
    * moved logging outside Manticore
    
    * naming fix and exposed API call
    
    * logging -> log renaming
    
    * fix for verbosity test
    
    * restored setter/getter for verbosity
    
    * fixes for warnings in 0 mode and exteneed test_cli_verbosity
    
    * removed print
    
    * relative import, fork message to executor, init function
    
    * verbosity docstring fix
    
    * docstring nit

commit 1d8e05152237a8a3b27c67b130b7de035628c805
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Aug 14 14:44:53 2017 -0400

    Fix state.generate_testcase (#451)
    
    * Use correct event name
    
    * Add test for state.generate_testcase
    
    Test merely tests that this function publishes the 'will_generate_testcase' event
    
    * Properly test; make sure the callback executes and error if not
    
    This is the most convoluted unit test I've ever written.
    
    * "better"

commit 36a58810f905e299ff63a6208dc4e08eeb891869
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Aug 10 15:07:53 2017 -0400

    Use the same workspace URI in Executor.__init__ (#443)
    
    * Make sure we're using the same workspace
    
    * create_store -> fromdescriptor
    
    * classmethod -> cls variable
    
    * Cache descriptor name
    
    * join -> format
    
    * Update Store docs

commit e78ae8904ed7a76528cf01cd2a4b99bcb1d5a268
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 10 15:06:51 2017 -0400

    Add Manticore version to issue template (#447)
    
    * Add Manticore version to issue template
    
    * Update ISSUE_TEMPLATE.md

commit eef3cd20e24d18980b9f4345c79249a8dcb85e71
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Aug 8 18:12:55 2017 -0400

    Implement state.generate_testcase (#438)
    
    * ran
    
    * Some dirty work
    
    * Rm unnecessary sanitization
    
    * Fix state.generate_inputs event publishing
    
    We don't need to manually pass `self` because State is automatically
    forwarded as an argument. Also correctly specify a message for the state
    and expose to the API
    
    * Rename
    
    * Update test for new save_testcase args, make test more robust
    
    * Simplify arguments related to generate_testcase_callback by removing default arg. Add test for this behavior
    
    * Minor test fixup
    
    * Add official API docs
    
    * Remove unnecessary new event type

commit 9ae76a44308d35c437f627136bc2225b07c03ce2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Aug 7 08:08:37 2017 -0700

    Fix testcase generation output (#436)

commit 68555f5234e39526774fa252a847c9485702da36
Author: Dushyanth Chowdary <dnc295@nyu.edu>
Date:   Fri Aug 4 21:27:15 2017 -0400

    Fixing raise issue #435 (#437)

commit af3020db957ff83b66e1474498bdb6be060ddab9
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Aug 4 17:18:45 2017 -0400

    log testcase generation (#430)

commit 7b832724a62aae83457950f182538b694c16cef1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Aug 3 14:13:40 2017 -0700

    Implement symbolic branch tracking in core, add new fork event (#433)
    
    * Add fork_state event for individual state forks
    
    * Rename to forking_state, add branch tracking to state
    
    * Remove unnecessary locking around event publishing

commit 5ad18e736c867f15a22887a0c65f67c3af3b616c
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Aug 2 17:31:29 2017 -0400

    Produce fork-related output at info level from mcore (#429)

commit 3b57c0d5027c4a92bd64a230812998c1eedae4f3
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Aug 1 14:08:54 2017 -0300

    Fix context serialization (#425)
    
    * Fix context serialization
    
    * Fix test models.  Can not set a state constraints
    
    * typo
    
    * A few typos (constraints setter) and use of public properties in internal methods
    
    * State __init__ needs to initialize platform constraints
    
    * Internal methods use internal properties
    
    * test_record_branches removed

commit 271400728c96193368b06bb5c785ccfcdd471062
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jul 31 14:39:47 2017 -0400

    remove state.generate_inputs (#385)

commit 51837df98b705149b814738aa6973321ab22a008
Author: Eric Hennenfent <ehennenfent@imsa.edu>
Date:   Fri Jul 28 10:58:25 2017 -0500

    Add Taint Parameters (#414)
    
    * Add taint args to buffer creation
    
    Allows the `new_symbolic_buffer` and `symbolicate_buffer` functions to take keyword args for tainting. Defaults to frozenset in both cases.
    
    * Add unit tests and ArrayProxy taint propery
    
    Adds simple unit tests for tainted buffers. Added a property to the ArrayProxy class in smtlib.expression so that it's possible to access the taint of the proxied ArrayVariable.
    
    * Updated docstrings

commit 76357216da6658842f952937798b0b71d360de40
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Jul 27 19:41:08 2017 -0300

    Pub-sub like events (#371)
    
    * WIP New Policy class
    
    * WIP pubsub
    
    * Update Signal tests
    
    * small fixes from github comments
    
    * Fix event decode_instruction signature
    
    * Good merge
    
    * Good good merge
    
    * Eventful class commented
    
    * The million typos
    
    * Code revision
    
    * Fix tests for new mor strict Eventful

commit a3cf6e7d2cf26eec1f55c9f967f1d7498451fca7
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jul 27 12:31:58 2017 -0400

    Fix warning during regular analysis (#420)
    
    * only make context warning appear when appropriate
    
    * implement felipe's suggestion

commit d1ead7a7be1727675dd0a311f843c7663da80d5c
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 21 16:03:26 2017 -0400

    remove naked print from executor.py (#410)

commit 8d19dc507dcc32999c6e1d10df95dc9ce0deeba6
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 21 15:34:33 2017 -0400

    Fix solver call in decree (#409)

commit d9c226b89d716205c3fa61f128cf468f1cac5e2c
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jul 20 16:02:13 2017 -0400

    Fix forking state from memory (#407)
    
    * import ForkState before use
    
    * Fix ForkState behavior

commit 7f54a4342c8833b37063ff5c19831c918a12f079
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jul 19 10:51:31 2017 -0400

    Make makeDecree conform to convention and fix --data (#402)
    
    * fix makeDecree to work with scripting
    
    * fix concrete_data

commit 74bd5ed832f0cbbf67d1bd489dfeb712a1595253
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 18 17:25:17 2017 -0400

    remove grr snapshot support (#400)

commit 344ade98ee73131d881e83a183c833762bae340e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 18 16:34:37 2017 -0400

    Add optional redis dependency to setup.py (#399)
    
    * add optional redis dependency to setup.py
    
    * update installation documentation
    
    * clarify docs and add redis to dev install

commit be2494df44eef91077368bf1c0daa2fab89c9d2a
Author: Frank Busse <f.busse@imperial.ac.uk>
Date:   Tue Jul 18 16:38:41 2017 +0100

    Expose symbolic files to command line interface, implement whence for symbolic seek (#394)
    
    * add --file <symbolic file> flag
    
    * fix seek argument count error, add rudimentary whence support
    
    * symbolic file seek: fix docstring and semantics

commit 47a5d9752f965d19af8c957cb946cb7dfb61de75
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jul 17 14:06:42 2017 -0400

    Make save_stream pass through kwargs (#396)
    
    * make save_stream pass through kwargs
    
    * make base save_stream ok with extra [kw]args
    
    * make key argument explicit

commit ddc3b128483b12c4ce8cab85d5905f15fda847d5
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jul 17 10:36:31 2017 -0400

    Fixed CHANGELOG.md typo (#395)

commit 97115212e1e0cf1bdfdc51ca55f43e369b5bfa37
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 14 18:01:14 2017 -0400

    add pypi badge to README.md (#391)

commit 4bb48af199f0cea8d8dce0cd15ed91c9dd7daedb
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 14 11:56:21 2017 -0400

    Manticore 0.1.3 (#390)
    
    * Manticore 0.1.3
    
    * fix compare URL

commit 13964d053b010395fd76be5cdad5d0565ebed33b
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jul 13 13:57:18 2017 -0400

    create workspace before running manticore to make memdump tests pass (#388)

commit 03ee8760052996fac5e5e23b11f50a5c23457cc1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Jul 13 11:57:07 2017 -0400

    Add basic documentation on function modeling (#386)
    
    * Add basic models docs
    
    * Phrasing
    
    * Minor fixes

commit 60fa4c223169384109c6e8187be643fb18f640f1
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jul 12 18:11:08 2017 -0400

    Fix memdump tests broken by dev-events (#377)
    
    * fix memdump tests broken by dev-events
    
    * switch to superset check to account for timeout differences

commit 45d5b9f6d24ea69ac2238821a99c068452ab4295
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Jul 12 17:50:24 2017 -0400

    New state serialization (#376)
    
    * Fix naming
    
    * Separate storage from workspace
    
    * Begin removing output generation from manticore.py
    
    * Split up workspace and output
    
    * Create a separation between output and workspace
    
    * Get it to a working (hacky) state
    
    * Start bringing state serialization into workspace
    
    * More mcore->workspace moves
    
    * Remove unused imports
    
    * Update serializers; add interface
    
    * move state saving to workspace
    
    * can now save/load states and testcases
    
    * Add redis as backend
    
    * Implement streams in terms of values and vice versa
    
    * Implement `ls` and move workspace loading to Workspace
    
    * Better workspace initialization
    
    * Fix how --workspace is parsed for tests
    
    * update tests to new workspace indexes
    
    * Fix state storage and handling
    
    * Doc updates and extra error checking
    
    * pep8 style changes
    
    * Add Executor's 'sync'
    
    * Remove previous workspace artifacts from Executor
    
    * Comment out constraints check assert
    
    * Centralize locking to new testcase ids
    
    * Fix testcase generation
    
    * pep8 updates
    
    * propagate descriptor instead of path
    
    * Add an in-memory state store
    
    * Make memory maps be sortable
    
    * Allow to produce an empty state
    
    * Add workspace tests
    
    * Make Memory.__cmp__() more robust

commit f134ad6fb4a8064aa3b942904671b1014fae9ef3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 11 16:02:32 2017 -0400

    Check for negative fds in fstat (#384)
    
    * check for negative fds in fstat
    
    * use _get_fd

commit c887fb160e05c5e9fd9e7317179363032f003a0e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 11 12:06:33 2017 -0400

    Fix script verbosity (#382)
    
    * fix script verbosity
    
    * show manticore logger
    
    * remove unused MAIN logger

commit b47f0cff14234d351971bc2cada2df206057be54
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jul 11 11:36:38 2017 -0400

    fix lowering verbosity (#383)

commit b6a71375cfc8e186d8ce4c9d9ba04f3e5ad5b664
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jul 7 15:43:52 2017 -0400

    Remove md5 tests and replace with set comparison (#374)
    
    * remove md5 tests and replace with comparison
    
    * fix directory path issue
    
    * remove exact check as test is not deterministic
    
    * fix argument assertion test and remove cdet_visited.txt
    
    * allow extra addresses in actual to account for inter-machine differences

commit e4102e50004ba4013e1a742ed9e4f0f8f6d2a869
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 30 17:47:55 2017 -0400

    Catch and refactor MemoryExceptions (#370)
    
    * initial
    
    * Clean, only store address in message if not symbolic
    
    If it's symbolic,it renders like
    
        Generating testcase No. 2 - Invalid symbolic memory access (mode:r) <<manticore.core.smtlib.expression.BitVecAnd object at 0x7fd6dcd14410>>
    
    which is not useful output to the user.
    
    * Format as hex
    
    * Fix tests
    
    * Rm comments

commit fcb375ac76f77b7875b0b389aa00770b0c32565f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jun 29 17:38:41 2017 -0400

    stop double-logging error traces (#369)

commit bd89bfed2494878bf3502d01e6def39e12035277
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Jun 29 16:03:10 2017 -0400

    Only iterate instance variables for forward_signals() (#367)

commit f58cac7451a21dc7d7b4fdb99ac69c3925ae2db4
Author: Corbin Riggs <corbintriggs@gmail.com>
Date:   Thu Jun 29 11:00:34 2017 -0700

    Fixes ConcretizeArgument Misspelling (#366)

commit fcf0024d5d515b4593daeac83bf22b38d982f4d7
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Jun 29 12:02:31 2017 -0400

    Fix capstone MOV issue (#365)
    
    * add temporary workaround for capstone bug
    
    * rename cs to rest

commit 7c00b44675808090eb12a9e918314867817554a6
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 28 14:58:23 2017 -0400

    Update docs (#360)
    
    * Update State docs
    
    * Update manticore docs
    
    * Document models
    
    * Doc models
    
    * Use sphinx link

commit b197a47f960dec925ae8d018b13436290e41442f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Jun 27 19:18:41 2017 -0400

    Adjust verbosity settings (#358)
    
    * Show "Generating testcase" message by default
    
    * Rephrase program finished to be less obtuse
    
    * Rm excessive debug print

commit 7d3d9a9ed1d242073d5f98d7d71919b4ecf866f7
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Tue Jun 27 13:52:20 2017 -0500

    lsl.w in thumb mode fixed, plus tests (#350)
    
    - blx <Rm> swaps mode appropriately
    - asr.w and lsr.w in thumb mode handle immediates for op2 correctly
    - unit tests for thumb mode behavior for shifting instructions
    - unit tests check for correct mode on BX and BLX instructions

commit e931992abbf5b9575d6cabe5e9846dec4f045880
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Mon Jun 26 17:22:59 2017 -0500

    Add ldrd and strd instructions and tests (#348)
    
    * LDRD and STRD implementation and tests

commit 520a9be47d4df0cdb4990c3b4f81318574bde8ed
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Jun 26 18:06:18 2017 -0300

    Dev - events (#341)
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * forwarding events wip
    
    * state setstate fix and setup_stack merge fix
    
    * will_terminate_state fix and tests skipped
    
    * Update all ConcretizeRegister and ConcretizeMemory
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * Wip refactoring
    
    * Executor and exceptions refactor wip wip
    
    * Fixing all_insts auto tests
    
    * Visited and generate testcase now at manticore api level
    
    * Aggregating state statistics into executor statistics
    
    * forwarding events wip
    
    * state setstate fix and setup_stack merge fix
    
    * will_terminate_state fix and tests skipped
    
    * Update all ConcretizeRegister and ConcretizeMemory
    
    * Exceptions are crazy crazy crazy
    
    * fix last merge
    
    * Merge merge until it pass
    
    * Instructions count default to 0
    
    * will/did execute/emulate
    
    * Delayed keybpoard interrupt now shutdowns nicely
    
    * fix auto test generator x86
    
    * Undo bad merge
    
    * utterly hopeless
    
    * basic working
    
    * Fix merge bugs and github comments
    
    * Remove unnecesary comment - github comments
    
    * trace_item not used there
    
    * model-platform and system.py fixed
    
    * backup/restore to store/load -- cpu.instruction property
    
    * Slightly better did/will naming and dynamic signal forwarding
    
    * platform.constraints and cpu.instruction as properties
    
    * Fix forward signals getattr
    
    * set las decoded pc at decode_instruction() / reenable instruction_cache
    
    * Signals name convention: did/will/on
    
    * Forward normal signals
    
    * Maintain last decoded pc in abstractcpu
    
    * Changed context manager so it just wont raise interrupt
    
    * Decree now forwards signals and sets constraints
    
    * linux.SymbolicFile does not need to maintain constraints
    
    * remove debbug print
    
    * Assimilating some PR commets
    
    * size_total == size
    
    * better merge of manticore.py
    
    * typo
    
    * Forwarding only specified objects in signal arguments
    
    * Fix few broken tests
    
    * revert + merge
    
    * remove some unused stuff from manticore()
    
    * manticore context <-> executor context
    
    * manticore context <-> executor context2
    
    * context context context
    
    * forgotten return
    
    * Fix basix.arm
    
    * arm bitwise fix
    
    * fix context
    
    * Comment 1
    
    * Comment 2
    
    * Comment 3
    
    * Comment 4
    
    * Comment 5
    
    * Comment 6
    
    * Fix (still needs refactor but it works) profiling
    
    * Fix (still needs refactor but it works) profiling
    
    * The forgotten bit
    
    * Update tests to reflect current output
    
    * Verbosity fix
    
    * Fix verbosity test

commit edbb6130459b993e04ffc534c5f9829271d861e3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 23 18:18:11 2017 -0400

    Add basic binja viz plugin (#347)
    
    * Add basic binja plugin
    
    * Inline lnk
    
    * Better instructions

commit e2c0414dcaa8cec29d3439b24cd73a19d2e6685c
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Fri Jun 23 17:53:19 2017 -0400

    added _multiprocess_can_split_ directive (#351)
    
    * added _multiprocess_can_split_ directive
    
    * renamed Readme

commit 6133a0e2ed98de6a58f3bf574498ec320ccbc43e
Author: Douglas Gastonguay-Goddard <douggard@users.noreply.github.com>
Date:   Thu Jun 22 10:13:21 2017 -0400

    Feature changes to support concrete execution. (#337)
    
    * Feature changes to support concrete execution.
    
    - Add ctypes to lseek for signed seeks. Pass whence to seek.
    - Move mmap and related functions from SLinux to Linux.
    - Introduce function _sys_open_get_file to isolate symbolic code in sys_open to SLinux.
    
    * Remove white space, use super(...)._sys_open_get_file, self.current.address_bit_size.

commit 9a2d19f4980816c8317bcc397582596f392b298f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 21 19:58:09 2017 -0400

    Update README.md to use pypi (#346)
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md

commit 3ec9043b2ec98aae13afbd98142291512a8773ab
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 21 17:48:37 2017 -0400

    Fix verbosity=1  (#345)
    
    * Only enable debug executor after verbosity 1
    
    * Add regression test for checking uniform cli output for nonverbose mode

commit 860d51ebf1f2f3f05bc0505e55f43e23f30666d3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jun 21 16:59:11 2017 -0400

    Fix simple abspath bug (#344)
    
    Fixes #343

commit a3f0d92393de8b162cbea56a64d1d46c0fb65975
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Tue Jun 20 18:14:24 2017 -0400

    Revert "rename getState to get_state (#338)" (#340)
    
    This reverts commit d0465b3f91ad344d0f97312a4b181ca4093c1caf.

commit d0465b3f91ad344d0f97312a4b181ca4093c1caf
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Jun 20 17:23:14 2017 -0400

    rename getState to get_state (#338)

commit 3bf529c371595dd36b411d73a4868cb16dff83dd
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Jun 19 16:50:11 2017 -0400

    Activate executor debug logging with verbosity=2 (#310)
    
    Currently, we no verbosity level do we activate debug level logging
    from the executor, however there is significant debug logging in the
    executor for state forking output.

commit 186fa9c8ca8b668e9bc4903d0a327935f1e20452
Author: Scott <scott.heidbrink@gmail.com>
Date:   Thu Jun 15 18:07:52 2017 -0600

    Changed Socket parameters to accept seek paramaters (#308)

commit 285aaf8258f5d1832cfdb5ee9caab7cb13816116
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Thu Jun 15 13:54:24 2017 -0400

    nits for common Socket/File FD operations (#301)
    
    * nits for common Socket/File FD operations
    
    * rev
    
    * _is_open changed to _assert_open throwing IndexError
    
    * reverted NotImplemented in File sync()
    
    * moved sys_fstat from SLinux to Linux & fixes for _assert_open
    
    * nit in sys_write
    
    * comment nits

commit 9abef20b6772710b9d30ae3c5bc184d39cd60dae
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 14 15:56:11 2017 -0400

    Manticore 0.1.2 (#306)
    
    * Manticore 0.1.2
    
    * Update changelog

commit 5109e2835f503904cc467d8864864a769c1ef32e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jun 14 11:23:55 2017 -0400

    Fix building linux examples and test for future failure (#284)
    
    * fix building linux examples and test for future failure
    
    * fix cd back and typo

commit b12224d8a60ad21026116d6dd928caf2ef9c7bc3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Jun 14 09:45:59 2017 -0400

    short circuit _getState when queue is empty (#302)

commit 7f550becc6a3ff105bfd57030e0582404557315c
Author: Garret Reece <GarretReece@users.noreply.github.com>
Date:   Tue Jun 13 13:21:19 2017 -0500

    Add mrc and movt
    
    * Add MOVT instruction
    
    * Add new ARM operand types for MRC
    
    * mrc implementation seems to work
    
    * UXTB inst implemented, provisional implementations of LDREX and STREX
    
    * Added unit tests for MRC, MOVT, and UXTB
    
    * Added mode swapping from blx instruction on arm cpu
    
    * Make tests pass

commit 5ea4a87ddb43e25b41642afe8a0bbeeb8ea9c9c1
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jun 12 15:28:57 2017 -0400

    Fix SymbolicMemoryException (#303)
    
    * fix SymbolicMemoryException
    
    * make simple_parse's visited.txt more correct

commit 1f8c4e18c668cc566e2caa868af9b31fd7c9a1f0
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jun 9 17:48:56 2017 -0400

    Move pretty printing into helpers (#299)
    
    * move pretty printing into helpers
    
    * switch to using __str__

commit aa798c652ec36caaa3ed4bfea3c19639fea4a663
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Fri Jun 9 17:35:42 2017 -0400

    make SymbolicFile inherit from File (#298)
    
    * make SymbolicFile inherit from File
    
    * Create linux.py
    
    Nit from merge (restore class to inheriting from File)
    
    * Fixes on file creation
    
    * revert of __stdin__ in assert
    
    * removed asserts in SymbolicFile init

commit 0533fe1d2d5df65e33af71cf3c389e47431fd119
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 9 13:42:49 2017 -0400

    Use global path for workspace (#295)
    
    Temporary hack around simple chdir OS model

commit 595a33d3e0020dd9962c93bf23002e07de0b9ef8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Jun 9 13:42:39 2017 -0400

    Add .sync to regular Files also (#297)

commit 31b39ccf9d560f4ef3eedbbf47c8c4b9a5a9f7d0
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jun 9 11:39:28 2017 -0400

    unskip win32 API test (#294)

commit c7f5600cd1804a3ac74bb8a6dae1bfdf83e5b069
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Jun 9 10:47:55 2017 -0400

    unskip basic stdin test (#293)

commit 584206f3f764c28bda51e1e40af873d7329fb77f
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Thu Jun 8 17:39:39 2017 -0400

    fixes #291 for incorrect syscall returns and some indent issues (#292)
    
    * fixes #291 for incorrect syscall returns and some indent issues
    
    * relative import fix
    
    * commented weakref removal

commit 776f6125ad2a8aaa60897c7c244f005b00959ad3
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Jun 8 15:57:20 2017 -0400

    fsync, rename, and a few cleanups (#290)
    
    * Add sys_fsync()
    * Add sys_rename()
    * Fix sys_write return value

commit 586dff2491647651947e077018ba4afcea0a115a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Jun 8 14:03:31 2017 -0400

    Make Linux write(2) work with Files (#289)
    
    * Add is_full() so sys_write can be generic
    
    * Refactor Linux.sys_write to use File/Socket.write
    
    Previously it used .transmit, which does not exist on Files. Remove
    .transmit from Linux.Socket as that's a Decree artifact and it is more
    linuxy to use write
    
    * Support list arguments in File.write
    
    * Revert accidental decree change

commit 22bfedf8bbea3a9aa25d64928c05129292893f23
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Jun 7 17:22:37 2017 -0400

    Fix signal_transmit crash (#286)
    
    * Check if fd is in self.rwait
    
    * Check if set is empty

commit f3a48f23b8d1d44895164a069520d986d2e8f956
Author: Theofilos Petsios <theofilos@cs.columbia.edu>
Date:   Tue Jun 6 15:27:01 2017 -0400

    removed duplicate type property (#283)

commit b0d967b687da543f1179c94a95c75ae543d1e47c
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Jun 6 12:16:30 2017 -0300

    remove callbacks (#282)

commit 45a5393a1bb5e65427456ccf84a3024e396e540f
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Jun 5 16:33:36 2017 -0400

    Remove obsolete ABI code (#281)

commit 2916d7e3aebd662ecbf6883eb280f6f31a9b1fb9
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Jun 5 16:16:54 2017 -0400

    Support tracing (#247)
    
    * Script for generating syscall tables
    
    * Add generated syscall table
    
    * Reintroduce tracing script
    
    * Add configuration options needed by verify.py
    
    * Clean up verify; remove dependency on experimental after_hook
    
    * trace experiments
    
    * reorg verify.py
    
    * Update after merge
    
    * Remove Manticore param
    
    * Remove unused vars
    
    * Use regfile api; redo last_instr check
    
    * Fix gdb->mcore name descrepancy
    
    * Move kwargs to explicit args for Linux/SLinux
    
     * Maintain options in makeLinux to not overcomplicate the Manticore
       class
    
    * Address merge issues
    
    * remove debug stmt
    
    * Reintroduce options
    
    * Revert linux.py/manticore.py from master
    
    * Use the qemu -s and -R flags
    
    * Import syscalls table from master
    
    * And import extract_syscalls.py script
    
    * Fix verify reference
    
    * Move syscall to arg
    
    * Update register references
    
    * Simplify last instruction check
    
    * Add logging filter to TRACE logger as well
    
    * Be consistent with state synchronization
    
    * Be explicit about gdb types
    
    * Improve mmap debug output
    
    * Return error if ioctl is not implemented
    
    * Fix syscall sync
    
    * Make logging more self-contained
    
    * Use errno const in ioctl impl

commit 14499f7ba84c492051a1d06ab4d7bb404bffa285
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Jun 5 14:49:39 2017 -0400

    Add solve_buffer to API (#280)
    
    * add solve_buffer to api and update google ctf script to use it
    
    * start adding push/pop_constraints functionality
    
    * remove push/pop constraints, just use with
    
    * add mark's changes
    
    * add solve_buffer to api.rst
    
    * fix typo

commit 573d17149147de8d5f65f3a50adbf454c71abf98
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Mon Jun 5 19:25:49 2017 +0300

    Add input-related features (#248)
    
    * Add input-related features
    * Add add_symbolic_file() function to Manticore
          -> Add symbolic file: m.add_symbolic_file('file.txt')
          -> 'symbolic.txt' is not longer a default symb file
    * Symb files are generated by Executor.generate_testcase()
    * Add generate_inputs() function to State
          -> can be called by an user-level script
    
    * Use of Executor._getFilename to generate symb files in the workspace
    
    * Consolidate the filename of generated symb files
    
    * - replace % with format in executor.generate_testcase / state.generate_inputs
    - replace file() with open() in executor.generate_testcase / state.generate_inputs
    - replace hasasttr with getattr in executor.generate_testcase / state.generate_inputs
    - use None as default arguments for symbolic_files
    
    * file -> open
    
    * Simplify symbolic_files param
    
    * Make filename uniform
    
    * Docstring clean

commit 5b5392e54dd3a653adfdae8c09198ceaf73042cf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed May 31 15:48:19 2017 -0400

    Implement user variadic model interface (#276)
    
    * Add variadic decorator
    
    * Add check for _variadic func attribute
    
    * Expose @variadic at top level
    
    * Use variable for the actual name of attr
    
    * Update naming
    
    * Use helper
    
    * Maybe more pythonic?
    
    * Add variadic to public API
    
    * Add variadic decorator tests
    
    * Clean
    
    * Remove variadic parameter
    
    * Add docstrings
    
    * Document parameter
    
    * Clean
    
    * Better use of autodoc
    
    * Update docstring
    
    * Add todo comment

commit aeca64285a4c6d73ce749ce3d6556d232d52f27e
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Fri May 26 22:28:22 2017 +0300

    Optimizations and bug fixes in smt formulas (#249)
    
    * Remove the use of the incremental mode in get_all_values
    
    * Improvement and bug fixes in visitor.py
    * PretyPrinter: Remove dupplicate printed information
    * TranslatorSmtLib: Remove dupplicate operands in the generated formulas
    * ConstantFolderSimplifier:
      * Add new operators (BitVecZeroExtand / BitVecExtract)
      * Add no-trivial operators into the operations dict
          -> users can known that these operators are handled
    * ArithmeticSimplifier:
      * Use of a recursive approach to visit expression (faster)
      * Fix the missing calls to no-trivial operators for constant folding
      * Add new operator (ArraySelect)
    
    * Fix issues on corner cases (tests/travis_test.sh ok)
    
    ArithmeticSimplifier: recursive approach less interesting in travis_test.sh
    Use a stack approach, which includes bugfixes of the original
    
    * - Call direclty constant_folder() in ArithmeticSimplifier
    - Remove None bindings in ConstantFolderSimplifier.operators
    - Move the fixed point thing direclty to the Visitors.visit (new parameter: use_fixed_point)
    
    * - Calling constant_folder only if all operands are constants
    - Add None default attribute to getattr

commit 0b710dd86a3dd5b0661074559231783d4a3a5411
Author: Yan <yan@users.noreply.github.com>
Date:   Fri May 26 11:50:39 2017 -0400

    Add basic syscalls (#270)
    
    * Add sys_umask and sys_chdir

commit 8354ded7e0ae0b2d439fa8b87afacd6a3f04f024
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 25 16:22:08 2017 -0400

    Test hook api (#274)

commit c2b0617f32d43984babcaa109b98b7a1f7fb9175
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 25 16:04:34 2017 -0400

    Check returncode of manticore (#273)

commit d87c983b9881362545fa3ce580b1bc4c4d07c1a4
Author: David Manouchehri <manouchehri@riseup.net>
Date:   Wed May 24 17:49:37 2017 -0400

    Added Dockerfile. (#240)
    
    * Added Dockerfile.
    
    * Changes as requested by @japesinator.

commit 124c9d6de5cf35fd42c445866635ea2d2613690e
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed May 24 16:09:48 2017 -0500

    Add manticore-examples to README and remove google challenge (#271)
    
    * add manticore-examples to README and remove google challenge
    
    * re-do usage section and add manticore-examples repo

commit 452c92a340e06574e22380931315943ae8daf516
Author: Yan <yan@users.noreply.github.com>
Date:   Wed May 24 15:15:50 2017 -0400

    Update fstat/fstat64, add few syscall wrappers (#261)
    
    * mmap; newstat; exit; sigprocmask syscall wrappers
    
    * Fix fstat and fstat64 implementations
    
    * use st_blocks/st_blksize
    
    * Experiment with fstat structs
    
    * Make uname more verbose
    
    * Fix uname implementation
    
    * Fix newfstat
    
    * Fix fstat64
    
    * Fix fstat
    
    * Refactor uname

commit 3c977719f0fb8f3efae2a60785f620c4ec333ebd
Author: Yan <yan@users.noreply.github.com>
Date:   Tue May 23 15:30:58 2017 -0400

    Linux platform refactoring (#264)
    
    * Clean up model syscall invocation
    * Move read_string to Cpu
    * move push/pop helpers to Cpu
    * Reorg Linux initialization
    * Update linux test
    * fstat64 test harness
    * assert read_string only considers concrete bytes
    * Ensure that correct aliases exist during ctor
    * Improve alias check

commit 475f786f219ca4a154b56f7ad0238a192542cc64
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue May 23 15:21:48 2017 -0300

    Fix x86.PUNPCKL emulation (#259)
    
    * Fix x86.PUNPCKL emulation
    
    * trace check wip
    
    * PUNPCKH/L and Readlink /proc
    
    * PUNPCK fixes
    
    * remove debug traceback
    
    * rename arguments insteag of commenting them
    
    * fix comment

commit ea4f8edfd4f716c8c4671e3ee4df1d401d50a11f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon May 22 14:14:27 2017 -0500

    remove default nsolves parameter from solve_n (#266)

commit 0029c8fdc5ffa5c414a31545f773b4f08c83c614
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon May 22 14:14:03 2017 -0500

    refactor the verbosity interface to look cleaner (#265)

commit b381c4e04d3b0e4b0bac1a438075859953e83aab
Author: Sascha Schirra <sashs82@gmail.com>
Date:   Fri May 19 21:49:22 2017 +0200

    VORPD and VORPS instructions added (#258)

commit 8840e31fc223de7275dc96e74424e0a19f0ad34a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 18 16:59:44 2017 -0400

    Add strlen model (#260)
    
    * add models
    
    * wip strcmp tests
    
    * t
    
    * Add some tests
    
    * Better asserts
    
    * More pythonic
    
    * Add effectivene null test
    
    * init strlen
    
    * pythonic range
    
    * clean
    
    * docstring
    
    * tmp
    
    * stuff
    
    * stuff
    
    * Complete test
    
    * Add another test
    
    * Doc
    
    * clean
    
    * Add symbolic arg check
    
    * Fix tests
    
    * Make arch generic
    
    * Clean comment
    
    * Add basic unconstrained test

commit 10f7531caee3c58c127aa2ecefe535c68df95a27
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu May 18 11:19:14 2017 -0500

    Use newer, less broken capstone version (#262)
    
    * use newer, less broken capstone version
    
    * fix documentation

commit 92eaf76236cfd3384656f5292325744539639f03
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed May 17 11:44:10 2017 -0400

    Add strcmp model (#251)
    
    * add models
    
    * wip strcmp tests
    
    * t
    
    * Add some tests
    
    * Better asserts
    
    * More pythonic
    
    * Add effectivene null test
    
    * Handle symbolic pointer arguments

commit e5aca50e1f725ae62f9c9c9af4b413dbc50c9c98
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon May 15 17:38:22 2017 -0400

    Don't use string=True for symbolic arg/env (#256)
    
    This very strictly constrains the arg/env to the length of the symbolic
    string which is too strict for many use cases.
    
    For example:
    
    manticore ./bin +++++
    
    that symbolic string would only be allowed to be strings of length 5,
    and no shorter.

commit 42c28e02568f14edd2c10d5046384a28bc776bbb
Author: Yan <yan@users.noreply.github.com>
Date:   Mon May 15 16:07:01 2017 -0400

    Handle missing syscalls with correct exception (#255)

commit 2202b0a27d0548e8a962597899489d20019d134d
Author: Yan <yan@users.noreply.github.com>
Date:   Mon May 15 15:11:54 2017 -0400

    Generate NRs for ARM-specific syscalls (#254)

commit 42955387a566042f36be8ca0d74724d6ee7144f4
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 12 17:31:59 2017 -0400

    Don't make concrete bytes symbolic, only wildcard bytes (#252)

commit 7700112d9e54880669c8c9dc04c9cc60b34547c6
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 12 11:35:59 2017 -0400

    Rm unused Slinux ctor params (#250)
    
    * Rm unused Slinux ctor params
    
    Fixes #109
    
    * Add back constraitns
    
    * Make argv and envp default params
    
    * Use ternary
    
    * nit
    
    * Clean test_unicorn
    
    * Correct envp and docstring

commit 1e76998eb78fd2b3240e1131c5480f02c2335620
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu May 11 13:25:43 2017 -0400

    Add infrastructure for core models (#244)
    
    * Rename libc.py to models.py
    
    * Clean old unused libc.py code
    
    * Make models top level importable
    
    * Add State level model invocation function
    
    So user is not required to pass in state at to a platform level func
    
    * Explicitly mark what is in the public API
    
    Protects against accidentally making something a public API just because
    it has a docstring
    
    * clean
    
    * Move models.py to top level
    
    * Rm models
    
    * Fix docstring typo
    
    * Add default param name, move comment
    
    * Update docstring

commit a0717aa661c0b04d5f73879b265da4da05756630
Author: Yan <yan@users.noreply.github.com>
Date:   Thu May 11 12:20:00 2017 -0400

    Syscall table rework (#245)
    
    * Script for generating syscall tables from Linux src (pulled from kernel.org)
    
    * Add generated syscall table
    
    * Update syscall names to match extracted entries
    
    * Move to new syscall dispatcher
    
    * Add machine def to x86 cpus

commit a10b7bae29ac84e3ce2679a12393abd280a62cbe
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed May 10 19:44:55 2017 -0400

    Update parallel processing api (#246)
    
    * Remove m.workers, add run(procs=), update docs
    
    * Update docs

commit e4a49165973f50354d0931f81f8e179dfa4e7a6d
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue May 9 19:25:32 2017 -0400

    Rename os model terminology from "models" to "platforms" (#243)
    
    * Rename
    
    * rename in manticore.py
    
    * rename in executor.py
    
    * big rename
    
    * big rename
    
    * update changelog

commit b8991e0c6415465bb4c9df36885295916324dff5
Author: Cory Duplantis <cld251@gmail.com>
Date:   Tue May 9 18:35:38 2017 -0400

    Add Google2016 unbreakable challenge to examples repo (#194)
    
    * Add Google2016 unbreakable challenge to examples repo
    
    * Add Google2016 unbreakable challenge to examples repo
    
    state.add instead of state.constraints.add
    
    * Update constraints API

commit 3c9653d1d7dcae8b8f31357e7c575f815f4471ca
Author: Yan <yan@users.noreply.github.com>
Date:   Tue May 9 16:13:08 2017 -0400

    Update syscall/funcall implementation (#213)
    
    * Wrap ABI semantics in its own class hierarchy
    
    * Define a model invocation for syscalls and function calls
    
    * Add unit tests for ABI
    
    * Add a common base class for Platform models

commit 3873c3eb5d4c583e42a3ed6663edb62133ec1890
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon May 8 15:39:18 2017 -0400

    Document m.context API (#238)

commit fca086ea458cd2b2ab31c174078bacebca461ff1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon May 8 15:14:37 2017 -0400

    Add hack for Unicorn YMM registers (#239)

commit 395a40a646bc1d7fb1e54a165c99aa0e7914125d
Author: Yan <yan@users.noreply.github.com>
Date:   Mon May 8 14:32:54 2017 -0400

    Add memory tracing (#203)
    
    * implement memory write tracing
    
    * Comment updates
    
    * Add memory trace tests
    
    * make sure we ignore erroring writes
    
    * Address comments
    
    * remove superfluous return annotation

commit 868bdd80cefbbb0865017c12d60257f7d2913fdf
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 5 15:21:52 2017 -0400

    Manticore 0.1.1 (#234)

commit 44d365ff4c50fb9ee829ef5f830dfb6dd421eb9c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri May 5 13:31:43 2017 -0400

    Formalize API for constraining a State (#232)
    
    * Rename state.add to state.constrain
    
    * Update all uses of state.constrain
    
    * Rm check param
    
    * Added changelog
    
    * Update changelog
    
    * Update
    
    * Minor clean

commit 50fd50ee1206d356d11864e08b4377cb99697960
Author: Yan <yan@users.noreply.github.com>
Date:   Fri May 5 13:11:59 2017 -0400

    Simplify linux model interfaces (#233)

commit aafc0e72849dbb1be3e072923642289355c1e3eb
Author: Tim Deeb-Swihart <chronoslynx@users.noreply.github.com>
Date:   Fri May 5 12:43:22 2017 -0400

    Fix handling of Z3 result in optimize due to nondeterministic output ordering (#226) (#227)

commit d9baedeeac1586e82a2f04de08db5f7f83977335
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Fri May 5 18:33:42 2017 +0200

    sys_sigprocmask: the second method parameter has to be the cpu instance (#229)

commit 64d1ed51f2d4f6e64c95461f74d4e083abf0b4e8
Author: Yan <yan@users.noreply.github.com>
Date:   Thu May 4 17:36:39 2017 -0400

    Decode instruction early (#205)
    
    * Move PC verification to decode_instruction
    
    * Decode instruction in executor
    
    * Fix unicorn tests
    
    * remove decoded_pc
    
    * use issymbolic()

commit 93f9d77f401d949d05e8c8683d1c0a9d7c5031ef
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu May 4 14:40:22 2017 -0500

    Switch to ssh-style verbosity CLI flags (#222)
    
    * switch to ssh-style verbosity CLI flags
    
    * add register logging to level 4

commit 538dfea8fe4144483a942ae99f6c5fb7574003d4
Author: Tim Deeb-Swihart <chronoslynx@users.noreply.github.com>
Date:   Wed May 3 14:05:03 2017 -0400

    Fix incorrect syscall arg regs for X86 (#224) (#228)
    
    i386 and amd64 had their register sets reversed. This fixes that.

commit af2676402c9821d5ebbfe77cc01452f111908377
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 23:33:29 2017 +0200

    Implemented sys_readv system call (#217)
    
    * Implemented sys_readv system call
    
    * sys_readv and sys_writev are now independent of the system bitness

commit b19a158b6f4e01b31c6b1f46504019fa4fb240e5
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue May 2 18:04:07 2017 -0300

    Clean and document some example/linux (#176)
    
    * Clean arguments.c
    
    * Increase query timeout from 30 to 120 seconds
    
    * Example documentation updated
    
    * Add ibranch comments
    
    * crackme.py, ibranch, sindex and typos
    
    * indexhell
    
    * visitad typo
    
    * typo
    
    * strncmp example
    
    * Typos

commit f4e5bcf53e6055f1de17066fd963a72e2694ac3e
Author: Manas George <manas3george@gmail.com>
Date:   Tue May 2 14:55:02 2017 -0400

    refactored will_execute_pc hooks (#214)
    
    * Refactored will_execute_pc hooks
    
    * Fixed typos
    
    * Figured out why the simple_parse test was failing
    
    * Figured out why the simple_parse test was failing
    
    * Figured out why the simple_parse test was failing
    
    * Figured out why the simple_parse test was failing
    
    Cleanup
    
    * Cleanup
    
    * removed TODO from executor.py
    
    * refactored line in forking handling in executor.py
    
    * removed extraneous space in manticore.py
    
    * removed --exe flag from nosetests command

commit 0061ee5c481ce7c6ec375a2f1f69bcd4a346d217
Author: Simon Bourne <simonbourne@enhedron.com>
Date:   Tue May 2 14:49:49 2017 +0100

    CPUID now reports that extended features are unsupported (as unicorn doesn't support them). (#211)

commit 05831621331c12c526571d2d7d524be74340398b
Author: Feist Josselin <josselin.feist@gmail.com>
Date:   Tue May 2 03:07:45 2017 +0200

    Fix wrong variable name in SymbolicFile (#220)

commit 9e87d1dfa65cdce3dba3e45ad088e1f26de13f8e
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 02:54:27 2017 +0200

    Added sys_ioctl to 64-bit syscall table (#218)

commit aabf5777ee70a7437db69253787ba3fe7aa6eaa7
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 01:03:52 2017 +0200

    Use correct value for AT_PHENT (#216)

commit 94e6e76919ed3a4dd67a558d2ce57ddbc92ab109
Author: Samuel Groß <dev@samuel-gross.com>
Date:   Tue May 2 00:23:00 2017 +0200

    Fixed wrong syscall number for sys_faccessat (#215)

commit f7598e53c004f24a2d351c69be79a34cd28f1ab6
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Apr 28 12:17:17 2017 -0500

    Only make registers appear on verbosity level 5 (#198)
    
    * make --verbose output more useful
    
    * refactor and rename rendering functions
    
    * refactor to use join
    
    * make sure str returns a value

commit 8d6bcadb3752010943fd6645a13e2c3457d69ac9
Author: Yan <yan@users.noreply.github.com>
Date:   Thu Apr 27 16:36:23 2017 -0400

    Fix RSB, VLDMIA; Add RSC (#197)
    
    * Fix RSB; Add RSC
    * Fix vldmia semantics
    * To trigger build

commit 7e46db52169ee1123728499d66b11184d7b9c39e
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:48:28 2017 -0400

    oops

commit 1836c2d266e9cbed18739bba10d1a8157c5a518c
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:37:38 2017 -0400

    no more sudo

commit d1b0abba6c41215dcb84a819319e3ad0a762abdf
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:37:20 2017 -0400

    try removing sudo

commit 788a5de23ce2ca64da64eac1e5f3a172507386e9
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Apr 27 15:37:15 2017 -0400

    .com -> .org

commit c78ea5c9109191654d26c7bfd2bedd662dafcdc5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 26 15:24:27 2017 -0400

    Use lowercase name in setup.py (#192)

commit e4506dc02993d8df1207e397b9f656db69ca3880
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 26 14:57:24 2017 -0400

    Add more fields for pypi (#191)
    
    * Add more fields for pypi
    
    * Add author

commit 44dff1745d2c5952fb947d13e26b0177bdd6221a
Author: Dan Guido <dan@trailofbits.com>
Date:   Mon Apr 24 17:24:29 2017 -0400

    Add readthedocs (#179)
    
    * Add readthedocs badge
    
    * Add rtd intro
    
    * Add API reference link
    
    * change the order
    
    wiki first, because that’s where the majority of the docs live

commit 8b973064d19cc04e4e39ef0714f894c1d4b6d278
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 17:06:47 2017 -0400

    Add read the docs mock (#180)
    
    * Add read the docs mock
    
    * Only mock if 'z3 in first arg to check_output

commit c2fb359b829237e25f46ab977d7670031f6621ba
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 15:09:15 2017 -0400

    Fix LDR/STR writeback (#175)
    
    if a ldr used the same reg for dest and writeback offset, we'd
    compute writeback wrong because we'd run the insn and then use the new
    value in computing writeback

commit fbe3a197ba23f0f9da74b59f660dd1c717010f5a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 12:19:10 2017 -0400

    Install instructions updates (#171)
    
    * Install instructions updates
    
    * Update README.md
    
    * also need pip
    
    * need to update, plus compact a few things
    
    * add -y
    
    * grammar?
    
    * typos
    
    * Add bountysource link
    
    * consistency
    
    * Point users to the examples dir and wiki
    
    I thought these links were cluttering things a bit, and 2 out of 3 of
    them aren’t official documentation yet we’re linking to them in the
    first line of the README. I updated the wiki to address these directly
    in a way I think is more clear.
    
    * link to Z3 releases
    
    * oops, don't know where that came from
    
    * ensure people run the latest pip
    
    * be more explicit
    
    * Add an Issue Template
    
    * be more explicit
    
    * no longer appropriate here
    
    * unnecessary
    
    * add note about 16.04
    
    * move issue template to hidden folder
    
    * Spelling
    
    * be explicit, makes copy/paste easier

commit fd3873f0a872c2e37a82adafee86822bb75e9967
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 24 11:31:11 2017 -0400

    Fix ARM bitwise (LSL/LSR) (#174)
    
    * Rm bogus asserts
    
    * correct lsl_c
    
    * Add test for lsl carry

commit fe9d4f0f6b8d9d6100a0a76d151569c5706e49e4
Author: Dan Guido <dan@trailofbits.com>
Date:   Sat Apr 22 19:30:00 2017 -0400

    Remove notifications to Slack (#167)

commit edf0ee299b08d3d7a44561f4e30f0d59d85990d4
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 21:31:12 2017 -0400

    Remove arch specific auxv (#173)

commit 87971cca1a3f8cd4e8ed2158508e3aec8baef65f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 20:08:30 2017 -0400

    Add arm LDCL (#172)

commit 04aa03c85eba7445442098fedbb8f7949ba95e92
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 15:18:56 2017 -0400

    Update README.md (#165)

commit f552383e1605388221c53d813e1a120d60d1f676
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 14:59:06 2017 -0400

    Add example taint usage (#161)
    
    * Add example taint usage
    
    - use new_symbolic_value API instead, because it's making an int symbolic
    - add every instruction hook that checks for tainted data in operands
    
    * update readme with taint example

commit 130b4dc739420e9dcc60619c603b8e261fc009a4
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Apr 21 12:21:05 2017 -0500

    allow multiple --env arguments (#158)

commit 8c5cc6d4b0b8cefa1c4c2276bac5b00410d7657a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Apr 21 13:00:41 2017 -0400

    Add links to eric's writeup in readme (#157)
    
    * Update README.md
    
    * Update README.md

commit 54bfdf163b993b179d8ca29f3113f737fdba3c7f
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Apr 20 21:29:28 2017 -0500

    remove procs limit (#155)

commit a52be7459d8d03dced30a16e91d728e0147bedc3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 20 15:30:50 2017 -0400

    Arm add vldmia (#154)
    
    * Add VLDMIA
    
    * Add vldmia tests

commit 5ae5daa5c4f22cbe17ff951c8c52ce106461eaa1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 20 15:05:08 2017 -0400

    Fix arm offset calculation (#152)
    
    * Fix offset calculation
    
    .subtracted is unreliable, and .disp has the sign anyway
    
    * Use .subtracted for reg offsets

commit 4ad028b0df5472b2b29ed5eacff775f6afbb3dda
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 20 14:03:35 2017 -0400

    Fix arm/x86(32) linux stat (#153)
    
    * Fix sys_fstat
    
    i'm pretty sure it was totally wrong before, in terms of how it laid
    out the struct
    
    I'm based this on using arm-linux-gnueabi-gcc -E
    which shows me this struct:
    
    struct stat
      {
        __dev_t st_dev;
        unsigned short int __pad1;
    
        __ino_t st_ino;
    
        __mode_t st_mode;
        __nlink_t st_nlink;
        __uid_t st_uid;
        __gid_t st_gid;
        __dev_t st_rdev;
        unsigned short int __pad2;
    
        __off_t st_size;
    
        __blksize_t st_blksize;
    
        __blkcnt_t st_blocks;
    # 72 "/usr/arm-linux-gnueabi/include/bits/stat.h" 3
        struct timespec st_atim;
        struct timespec st_mtim;
        struct timespec st_ctim;
    # 87 "/usr/arm-linux-gnueabi/include/bits/stat.h" 3
        unsigned long int __glibc_reserved4;
        unsigned long int __glibc_reserved5;
    
      };
    
    * Add stat32
    
    * Minor

commit 87073d9985c4ca445217b7b135a6af0a51044b21
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 19 15:06:31 2017 -0400

    rm files (#151)
    
    * rm
    
    * bye

commit 9ca1f4a43aeb53ed3b146a37f4688d6c9a6acbaa
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Apr 19 14:28:46 2017 -0400

    Clean up output (#150)
    
    * Quiet down some error messages
    * Address comments

commit 1171b3a37f3e73a89d26dfaba04f07362fb49f4e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 19 14:23:36 2017 -0400

    Update README.md: restructure, z3 install (#149)
    
    * Update README.md
    
    * Remove FAQ -> plan to move to wiki
    
    * Rough cut
    
    * Moved quickstart a little lower, but still above the fold
    * Added more complete list of requirements
    * Added full instructions to quickstart
    * Clarified Installation instruction options
    * Moved extra details about why requirements are what they are to FAQ
    
    * less is more
    
    * Minor updates

commit daab8a58241c83522bb4c9f05d03dc72fea1e636
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Apr 19 14:12:58 2017 -0400

    Add examples (#145)
    
    * intermediate example commit
    * Added more state_explore examples (w/ new_symbolic_buffer)
    * Actually comment out verbosity
    * rename
    * Add comment mentioning symbolicate_buffer
    * Update comments
    * Fix issue with limited exploration
    * Clear up wording
    * Update descriptions
    * Remove reference to symbolicate_buffer
    * Clean up state_explore.c header
    * move .c to src/

commit 648ddf10abf96d7b1c2e8f2ff5a6b69f502af001
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Apr 19 14:19:15 2017 -0300

    Capstone operand type cornered to one function (#107)
    
    * begin refactoring logging to use manticore object
    
    * fix verbosity things
    
    * fix logging when in scripts
    
    * remove m.log_file now that it's no longer used
    
    * remove unnecessary init_logging usage and unused log_debug variable
    
    * accidentally deleted the wrong line
    
    * re-hide init_logging
    
    * remove old log_debug
    
    * remove unnecessary API stuff and refactor around that
    
    * Capstone operand type cornered to one function
    
    * Un-inline type_map
    
    * Immediate fix to lacking immediate
    
    * Add FAQ about relationship to CRS
    
    * add link to Grr
    
    * reorder instructions
    
    * passive voice
    
    * add slack badge
    
    * begin refactoring logging to use manticore object
    
    * fix verbosity things
    
    * fix logging when in scripts
    
    * remove m.log_file now that it's no longer used
    
    * remove unnecessary init_logging usage and unused log_debug variable
    
    * accidentally deleted the wrong line
    
    * re-hide init_logging
    
    * remove old log_debug
    
    * remove unnecessary API stuff and refactor around that
    
    * Capstone operand type cornered to one function
    
    * Un-inline type_map
    
    * Immediate fix to lacking immediate
    
    * Add FAQ about relationship to CRS
    
    * add link to Grr
    
    * reorder instructions
    
    * passive voice
    
    * add slack badge
    
    * Rebasing noise
    
    * rebase noise
    
    * Operand.reg moved up to Operand

commit b6123321326764c44898011d31f4c764a4a0abe7
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Apr 19 11:50:17 2017 -0400

    Spelling fixes (#148)
    
    * Spelling fixes

commit 3e81cba8fb0476ba18d0b2562a00db740cd57b5f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Apr 19 10:29:05 2017 -0400

    Fix linter issues on cpu (#144)
    
    * quick linter stuff
    
    * Fix cpu init in tests
    
    * update cpu name

commit e32701f97892f9dd30994a7718df18baa44e366a
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Apr 19 01:21:14 2017 -0500

    Refactor logging (#140)
    
    * begin refactoring logging to use manticore object
    
    * fix verbosity things
    
    * fix logging when in scripts
    
    * remove m.log_file now that it's no longer used
    
    * remove unnecessary init_logging usage and unused log_debug variable
    
    * accidentally deleted the wrong line
    
    * re-hide init_logging
    
    * remove old log_debug
    
    * remove unnecessary API stuff and refactor around that
    
    * re-introduce logging PR
    
    * fix Popen
    
    * lost a line in merge
    
    * fix test_binaries
    
    * Log to stdout instead of stderr
    
    * implement mark's changes

commit 65df1cbe35781ed953ce1016d7b26a8aad11cfe2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 18:56:58 2017 -0400

    Fix bad reference to args (#146)

commit a9711cf11969cf2c40756b911f12245bc0db529b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Apr 18 18:40:06 2017 -0300

    Graceful fallback if Z3 doesn't support optimization queries (#135)
    
    * Configure Z3 depending on installed version
    
    * Mocking for subprocess.check_output
    
    * change get_value_fmt to private attribute _get_value_fmt
    
    * Move memoized to utils
    
    * Remove minimal version and simplify
    
    * Re-add invalid versions/sanity checks
    
    * Z3 version format checked on github
    
    * New tests. Version is future proof
    
    * Better logging

commit f6f20b5210dbbfb04d7378c3cf6bff6a8fb88618
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 16:21:28 2017 -0400

    Register stat64 for 32bit syscalls (#142)

commit d8335dcd97d18e70cc5934a7ca115b57bc68e908
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 15:39:04 2017 -0400

    track sys_writev32 (#143)

commit 531f24581796a22735233559d22c99727b729c3f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 18 14:00:13 2017 -0400

    Fix arm PUSH (#141)
    
    If sp is in the list, it gets pushed incorrectly because it gets
    updated by the stack_pushes for registers that occur before it

commit 398e4d251070c042f47314ef19212b2a6ae70994
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 17 16:58:34 2017 -0400

    README + Output updates (#139)
    
    * Importing Dan's README
    * Reintroduce etcd's pr

commit 05b7c1138bc059aeb0ba7ff2c1a6d52b82ea06df
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Apr 13 18:45:18 2017 -0400

    Fix memory._ceil, Fix linux.load (#134)
    
    * Reimplement ceil so page aligned addresses are unaffected
    
    * Lingering fix
    
    * Fixup users of _ceil
    
    * Correct memory tests

commit bbfb234cca87ff985ca532594eea2900c3a02e38
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Apr 13 19:22:04 2017 -0300

    Dev fix amd64 emulation bugs (#136)
    
    * Failing tests
    
    * Tha Fix
    
    * Fix auto test
    
    * PSLLDQ for 32b python?
    
    * More descriptive temporary variable

commit 43d766925292353ecbcc4d162898a5e1dd613e64
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 11 14:21:18 2017 -0400

    Create stderr file, also watch sys_writev (#129)

commit ebd0a8be72d6e52c1baead07bb80c9028eb844fe
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Apr 11 09:47:05 2017 -0400

    Fix linter bugs from model (#122)
    
    * liux
    
    * easy
    
    * fix
    
    * more
    
    * import

commit b02b551911db14ca9ca20217468192b722687e59
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 10 17:22:02 2017 -0400

    Update README/travis (#126)
    
    * Update travis install to match README
    
    * Fix README error
    
    Placement of the -e is important, apparently

commit 5870211b1eff13ddb397095e499d2f837feda800
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 10 17:10:40 2017 -0400

    More gracefully handle uninstalled z3 (#127)
    
    * More gracefully handle uninstalled z3
    
    * Use better error

commit 801e20aa4cfa997ee85603d654f23e528cfd2b1f
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 10 17:06:47 2017 -0400

    Update docstrings to sphinx format (#119)
    
    * Update docstrings to sphinx format
    * Update various docstrings
    * Add more docstrings and update sphinx docs
    * fix trailing colons on returns

commit 5c112e56f3352224beb25c6625e52816c7a4f045
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 10 14:31:51 2017 -0400

    Add brief example descriptions to README (#120)
    
    * Added brief example descriptions to README
    * Update config script
    * Update sym.py API usage
    * Remove individual example descriptions
    * fix mcore init
    * consistently document examples
    * make basic_sym runnable
    * More path fixes
    * cleanup; update api

commit a41eb6febaf4705a607ec934c7ffc73050f17389
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Apr 10 12:40:45 2017 -0500

    Fix typo in linux.py (#116)

commit 99a3327b8d10fa9b6c6fd96b39483ced891d2491
Author: Dan Guido <dan@trailofbits.com>
Date:   Sat Apr 8 16:24:45 2017 -0400

    Condense some of the instructions, add slack badge

commit 1bcadfed4d1038a6e9b2ca81a4b8cf2606885cf4
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Apr 6 10:39:45 2017 -0500

    Add memory corruption example (#124)
    
    * add memory corruption example
    
    * put binary in proper folder

commit ccd473b88e0e79294eb82ba26cd73b14013527af
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Apr 6 09:39:07 2017 -0500

    add partial solves for multiple-styles (#123)

commit 0b850dba406a49dbb388394dd04a36540b33ed8b
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Apr 3 16:00:49 2017 -0400

    Make unicorn be pull-based (#97)
    
    * Enable simple ARM register concretization for Unicorn
    
    * Add canonical_registers property to abstractcpu
    
    * cpu to self
    
    * Check for regs_access better
    
    * Emulate a single instruction
    
    * Bypass capstone 3.0.4 arm bug
    
    * Dealing with capstone
    
    * Temporary disable ASR and remobe BitVec.Bool from test
    
    * WIP WIP debug prints WIP WIP
    
    * Unicorn fallback working (using unicorn master)
    
    * HAck to support unicorn 1.0.0
    
    * WIP
    
    * Unicorn hack to handle PC updates
    
    * [WIP] do not do anything with this commit; for debugging only
    
    * Adding before clean up
    
    * emulation more or less works; need to work out more unicorn bugs
    
    * clean up emulate() caller code
    
    * move hooks to methods; cleanup
    
    * Concretize memory when emulating
    
    * Re-add Bool()
    
    * Update tests to start at offset 4
    
     When an instruction branches to the previous instruction,
    Unicorn attempts to dereference that memory. We'd like to use
    unit tests to also make sure Unicorn emulation is in line with
    our own semantics. If we start all tests at offset 4, we can
    jump to a previous instruction and not fault when Unicorn
    dereferences it.
    
    * Fix concretization
    
    * Clean up test imports; upper-case Cpu
    
    * Unicorn tests
    
     * Add tests for all the ARM semantics, but make sure they're equivalent
       on unicorn.
     * Add a few tests to make sure unicorn correctly concretizes the memory
       it references
    
    * Fix broken import
    
    * Add symbolic register tests
    
    * Re-introduce the unicorn hack
    
    * Add the 'ONE' concretization policy
    
    * Rm unused function
    
    * Update concretization; add comments
    
    * Add ONE policy test
    
    * Create a base class for all concretization exceptions
    
    * Remove Armv7Cpu._concretize_registers
    
    * Check for enabled logging in a more idiomatic way
    
    * [wip] intermediate testing commit
    
    * Reimplement hooks and execution with unicorn
    
    * Add a DMB (mem barrier) instruction; nop
    
    * simplify instruction resolution
    
    * improve unicorn error handling
    
    * explicitly delete emu
    
    * Handle ARM helpers inline
    
    * map fetched memory
    
    * Narrow exception handling
    
    * Update DMB docs; make __kuser_dmb match real implementation
    
    * Fix typo; add comment; remove extraneous parameter
    
    * typos++

commit 0ad327522bc8b4c3bfca0d34d7b3d53d47d5b5a8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Apr 3 14:41:06 2017 -0400

    Update readme (#117)
    
    * Update readme
    
    - eliminate duplicated install instructions
    - document pip version
    - explicitly add capstone/keystone workarounds
    
    * Update
    
    * spelling

commit ffe758f5f37a2bed71a0c9069a5779acc6427760
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 31 13:22:59 2017 -0400

    Fix interpreter loader (#115)
    
    * Correctly compute total interp size
    
    * Rename
    
    * Make staticmethod
    
    * Add basic loading test

commit 83cb4de82535f51aca452ef9f26aea174b4c036c
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 28 15:45:08 2017 -0300

    Dev fix load interpreter (#96)
    
    * Fix interpreter load
    
    * turn off some debug
    
    * cuack
    
    * Correct loader condition (#111)
    
    * Rm unnecessary condition
    
    We always want to run this code if there is an interpreter present, not
    just if the exe is ET_DYN
    
    * Add correct interp header type check

commit dbb63cfa344148f02ad2f883bbec85668358f1bb
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 28 14:48:23 2017 -0300

    Dev stoping criteria (#108)
    
    * no-mp not uset and redundant
    
    * Add timeout
    
    * Unused args reremoved timeout readded
    
    * no-mp not uset and redundant
    
    * Add timeout
    
    * Unused args reremoved timeout readded
    
    * Move import to the top op op op

commit db6370bf87a06864c012f077a35e360b433c92c3
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Mar 28 12:16:41 2017 -0500

    Remove redundant pstats import (#113)

commit 1ad9a8803249f2c217085a1095a192b0900ad6ff
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Tue Mar 28 11:12:36 2017 -0500

    Add basic benchmarking script (#83)
    
    * add basic benchmarking script
    
    * add results class, collect more information, and fix check for no args
    
    * fix indentation
    
    * we don't have logger here
    
    * use argv[0] for name of program
    
    * allow dumping of stats from the API and use .format()
    
    * add ProfilingResults class
    
    * bugfixes

commit e3f6c8e4baa9569a9b567db1f72ac550991e4b5c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 27 17:52:36 2017 -0400

    Force uninstall Manticore in case of cache (#112)

commit 1047fa42e3d862ede862238409ff8723739d136b
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 27 15:03:42 2017 -0400

    Document state, cpu, issymbolic (#101)
    
    * Add unstable warning
    
    * verbosity docs
    
    * Add State and Cpu to docs
    
    * Add State docs
    
    * Add cpu docs
    
    * Add select cpu docs
    
    * Add issymbolic helper doc
    
    * Rm double docstring
    
    * Update write_bytes docstring
    
    * Update Cpu docstr
    
    * Document cpu reg interfaces
    
    * Fix rebase mistakes

commit 6b1c69cb28251e540b2b46185d96a264d953945e
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Mar 24 19:10:33 2017 -0300

    Dev fix decree (#98)
    
    * Re enable skipped test
    
    * Re enable skipped test
    
    * Hack so we can use upstream Elftool
    
    * pr comments
    
    * pr comments - staticmethod
    
    * pr comments - implicit > explicit

commit f0a6f66d77ad2db3e648bf0601c2846b4a7381e0
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Mar 24 17:55:24 2017 -0400

    Update MOV implementation (carry) (#105)
    
    * Update MOV implementation wrt carry
    * Remove intermediate flags dict
    * Fix register reference
    * Document MOV to conform with current standard

commit 7dd08799180501315580f827641a6d124e5ef75b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Fri Mar 24 14:44:24 2017 -0300

    Dev arm regfile refactor (#57)
    
    * RegisterFile refactor everywhere
    
    * Update arm_rf tests
    
    * Refactor Operand in both x86 and arm
    
    * Add APSR support (#53)
    
    * Add APSR support
    
    * #issuecomment-284826572
    
    * APSR tests
    
    * cspr to aspr
    
    * RegisterFile refactor everywhere
    
    * Update arm_rf tests
    
    * Refactor Operand in both x86 and arm
    
    * Rebased and NotImplementedError fix
    
    * ARM register initialization compressed
    
    * Fix merging bugs
    
    * Assimilate PR comments
    
    * Assimilate PR comments2
    
    * The new style. future is now
    
    * WIP
    
    * Improve quick start ,add asciinema (#58)
    
    * Towards a helloworld world
    
    * Rm requirements.txt (#56)
    
    * Print workspace dir by default (#55)
    
    * Print workspace dir by default
    
    * Change initial cli output
    
    * refactor or or or
    
    * WIP
    
    * Add arm rf testcase
    
    * ARM aliases fix
    
    * debug print removed
    
    * fix tests
    
    * Remove unicorn script from travis build (#64)
    
    * remove unicorn script from travis build
    
    * remove unicorn script entirely
    
    * Rename test -> tests (#66)
    
    * rename test -> tests
    
    * re-add ignored tests
    
    * Switch instructions to prefer virtualenv (#65)
    
    * switch instructions to prefer virtualenv
    
    * document use of virtualenvwrapper
    
    * Make cpuid more forgiving (#67)
    
    * Make cpuid more forgiving
    
    * error() to warning()
    
    * Add CPUID EAX=0xd ECX=0,1
    
    * Let logger handle the format string iff needed
    
    * to hex
    
    * Rm unused files (#76)
    
    * Move state into own file (#75)
    
    * Move State from executor.py
    
    * Fix import
    
    * relative import
    
    * Rm unnecessary code (#80)
    
    * Add example crackme (#77)
    
    * add example crackme
    
    * make filename and directory structure more accurate
    
    * Fix state.branches (#74)
    
    * init
    
    * rm old code
    
    pretty sure it's wrong
    
    * Clean
    
    * rm
    
    * Rename record_fork, move to ConcretizeRegister exception handler
    
    It doesn't need to be in fork() because it's only relevant for when
    we fork due to PC.
    
    * Add test for record_branches
    
    * Add back record_branches which got removed in rebase
    
    Rebase went oddly because State got moved to a new file
    
    * unnecesary tuple()
    
    * necesary tuple
    
    * remove unnecessary keys()
    
    * Use OrderedDict (#84)
    
    It can be useful to know elements in `branches` towards the end are
    more recently discovered branches
    
    * arm: Fix broken dynamic APSR (#78)
    
    * Refactor Register (#82)
    
    * Fix register read bug
    
    If we store a BitVec, we do NOT want to return bool() of it, which
    returns True, which is totally incorrect. We do however, want to return
    a symbolic Bool of it, if it is a 1 bit register (flag).
    
    * Improve
    
    * Raise error
    
    * Fix register tests
    
    Changed the interfaces:
    - removed nbits param (never used)
    - no longer raise AssertionError when overflowing a flag reg, just
      truncate
    - rename test funcs to be more descriptive
    
    * rm unused import
    
    * Add symbolic tests
    
    * Rm no longer applicable test
    
    * Add docs (#61)
    
    * Add sphinx-quickstart generated docs
    
    * Add api.rst
    
    * Edit index.rst
    
    * Add autodocumenting Manticore class
    
    * Update Manticore docstring
    
    * Doc verbosity
    
    * Doc hook and add_hook
    
    * More docs
    
    * Add Sphinx dev dep
    
    For building docs
    
    * RegisterFile refactor everywhere
    
    * Update arm_rf tests
    
    * Refactor Operand in both x86 and arm
    
    * RegisterFile refactor everywhere
    
    * Refactor Operand in both x86 and arm
    
    * Rebased and NotImplementedError fix
    
    * ARM register initialization compressed
    
    * Fix merging bugs
    
    * Assimilate PR comments
    
    * Assimilate PR comments2
    
    * The new style. future is now
    
    * WIP
    
    * Towards a helloworld world
    
    * refactor or or or
    
    * WIP
    
    * Add arm rf testcase
    
    * ARM aliases fix
    
    * debug print removed
    
    * fix tests
    
    * unnecesary tuple()
    
    * necesary tuple
    
    * remove unnecessary keys()
    
    * rebased
    
    * Remove test
    
    * https://github.com/trailofbits/manticore/pull/57#pullrequestreview-27971778
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107820815, https://github.com/trailofbits/manticore/pull/57#discussion_r107820331
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107821090
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107821066
    
    * https://github.com/trailofbits/manticore/pull/57#discussion_r107821919
    
    * OOps search and replace
    
    * (invalid) -> None
    
    * The (invalid) -> None
    
    * None vs. invalid
    
    * In armpy we know that STACK is SP so lets try to eliminate cpu.STACK in favor of x.SP
    
    * remove ugly hex
    
    * Removed redundant import and comment

commit a12aae80d10c59cd39a88bbffd78ee9c45b60e24
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 23 14:25:46 2017 -0400

    Move stats.py to scripts/ (#100)

commit 053cc5ff8d9f07dde5c250d614333ae6c7a470b6
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Thu Mar 23 09:52:39 2017 -0500

    Fix run_simple.py (#102)
    
    `Manticore(None, path)` throws an error

commit f016b7635a61f0c91daa0143731063493b886ba5
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Mar 22 20:45:14 2017 -0300

    Heads removed (#99)

commit ebe7f8268b14e6cceacc5485dddbd01734dd44aa
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 22 15:44:03 2017 -0400

    Add docs (#61)
    
    * Add sphinx-quickstart generated docs
    
    * Add api.rst
    
    * Edit index.rst
    
    * Add autodocumenting Manticore class
    
    * Update Manticore docstring
    
    * Doc verbosity
    
    * Doc hook and add_hook
    
    * More docs
    
    * Add Sphinx dev dep
    
    For building docs

commit d0f2c0116e44d08b4f397ceb764d328792e97dfa
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Mar 21 16:50:39 2017 -0400

    Refactor Register (#82)
    
    * Fix register read bug
    
    If we store a BitVec, we do NOT want to return bool() of it, which
    returns True, which is totally incorrect. We do however, want to return
    a symbolic Bool of it, if it is a 1 bit register (flag).
    
    * Improve
    
    * Raise error
    
    * Fix register tests
    
    Changed the interfaces:
    - removed nbits param (never used)
    - no longer raise AssertionError when overflowing a flag reg, just
      truncate
    - rename test funcs to be more descriptive
    
    * rm unused import
    
    * Add symbolic tests
    
    * Rm no longer applicable test

commit d50b3da9a8ee0194ed38d4efc859c74404b6ad3f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Mar 21 16:47:52 2017 -0400

    arm: Fix broken dynamic APSR (#78)

commit ca396d8d1368aa76790552ab4d0792b0c5ab1aea
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Mar 21 16:47:40 2017 -0400

    Use OrderedDict (#84)
    
    It can be useful to know elements in `branches` towards the end are
    more recently discovered branches

commit 5368716e424c2e950b6e0fae3a6eaf1c5d574587
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 20 17:56:25 2017 -0400

    Fix state.branches (#74)
    
    * init
    
    * rm old code
    
    pretty sure it's wrong
    
    * Clean
    
    * rm
    
    * Rename record_fork, move to ConcretizeRegister exception handler
    
    It doesn't need to be in fork() because it's only relevant for when
    we fork due to PC.
    
    * Add test for record_branches
    
    * Add back record_branches which got removed in rebase
    
    Rebase went oddly because State got moved to a new file

commit e77628bfe7ab0bf54f1b0fa5e70f4549eaab4443
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Fri Mar 17 14:43:06 2017 -0500

    Add example crackme (#77)
    
    * add example crackme
    
    * make filename and directory structure more accurate

commit 7742df6b67cac21914bde41239fff03e893c59f7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 17 14:10:48 2017 -0400

    Rm unnecessary code (#80)

commit e920b73e146b1e888344be83e80ef3546651cb04
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 16 14:43:17 2017 -0400

    Move state into own file (#75)
    
    * Move State from executor.py
    
    * Fix import
    
    * relative import

commit 4464b2e8423a992999dcaed74a6ca3cdaf46a37c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 16 12:02:29 2017 -0400

    Rm unused files (#76)

commit 963669f3f2216ee41ae7e89a5a18b8563eff5055
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Tue Mar 14 13:39:06 2017 -0300

    Make cpuid more forgiving (#67)
    
    * Make cpuid more forgiving
    
    * error() to warning()
    
    * Add CPUID EAX=0xd ECX=0,1
    
    * Let logger handle the format string iff needed
    
    * to hex

commit 5d2ca049577244ea18f00edd31f17315202887df
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Mar 13 16:14:18 2017 -0500

    Switch instructions to prefer virtualenv (#65)
    
    * switch instructions to prefer virtualenv
    
    * document use of virtualenvwrapper

commit ca0bee23774e6855f9b8efbc486d6aeeeba53811
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Mar 13 14:06:36 2017 -0500

    Rename test -> tests (#66)
    
    * rename test -> tests
    
    * re-add ignored tests

commit dd24878724c60946f3e213499ce2249b527b45c0
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Mar 13 10:51:49 2017 -0500

    Remove unicorn script from travis build (#64)
    
    * remove unicorn script from travis build
    
    * remove unicorn script entirely

commit 296f4abb34c20c5ea33076124491e9b74c89410b
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 10 10:49:31 2017 -0500

    Print workspace dir by default (#55)
    
    * Print workspace dir by default
    
    * Change initial cli output

commit 88456a4ef8fef338587f112a1229493f57d651d8
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 9 13:01:26 2017 -0500

    Rm requirements.txt (#56)

commit d527d9239bfdf4520206246d2aab0e34b67e498e
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 8 17:51:07 2017 -0500

    Improve quick start ,add asciinema (#58)

commit 1cc66f16ca33f96dbfd6503019a3f88dd3c3c66b
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Wed Mar 8 17:17:05 2017 -0300

    Add APSR support (#53)
    
    * Add APSR support
    
    * #issuecomment-284826572
    
    * APSR tests
    
    * cspr to aspr

commit ef6e21b86570598bea5eb5aaf202847f499af7ee
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 6 18:39:31 2017 -0500

    Fix stdin/stdout linux file generation, add test (#50)
    
    * Support linux read/write in stdout/stdin files
    
    * Add basic binary
    
    * Add basic integration test
    
    * Skip
    
    * Update skip message
    
    * Add github issue

commit be59812a891f495de2a4d1dbff528e3ecbaa13ac
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Mar 6 16:08:49 2017 -0500

    Support linux read/write in stdout/stdin files (#51)

commit 1f838736a57bfd2eb64d07bcfc8b87967a6d8194
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Mon Mar 6 15:31:24 2017 -0300

    Add capstone ASR special case (#42)
    
    * Add capstone ASR special case
    
    * Fix capstone install (#43)
    
    * Add arm asr, abstract SR type insns (#44)
    
    * tmp
    
    * Fix bug
    
    * test m.hook typerror (#41)
    
    * Use setuptool extras for dev deps (#40)
    
    * Add extra deps to setup.py
    
    * Fix nose dep
    
    * lol wrong keystone
    
    * Fix readme
    
    * Update travis
    
    * Workaround capstone install bug
    
    * Use --no-binary in only pip install line
    
    * Fix another readme regression
    
    * Not again
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md
    
    * Update travis token, reformat (#46)
    
    the travis cli tool auto reformatted the yaml
    
    * Remove embedded ply (#47)
    
    * rm ply
    
    * add ply dep
    
    * Refactor `new_symbolic_value` (#48)
    
    * Use default params instead of dict, add taint
    
    * Update docstring
    
    * Add capstone ASR special case

commit ab0abf7f72ad2b80dab37a7b1c912650bcc1a02c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 3 18:22:04 2017 -0500

    Refactor `new_symbolic_value` (#48)
    
    * Use default params instead of dict, add taint
    
    * Update docstring

commit e49341c5065d023e56d4d2bec291276f83e9afeb
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 3 17:21:33 2017 -0500

    Remove embedded ply (#47)
    
    * rm ply
    
    * add ply dep

commit ad3a438e053151a2960dc35eab62566a952bf5b2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Mar 3 15:39:28 2017 -0500

    Update travis token, reformat (#46)
    
    the travis cli tool auto reformatted the yaml

commit bff9376308eaa5dcbaa17d2fa949482b4947966a
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:53:18 2017 -0500

    Update README.md

commit 2cbac6b424d186a49bb1f7ab1588a46a3dfe81b5
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:50:20 2017 -0500

    Update README.md

commit 8e2bab90ff6104861c07de3d7ad30e6274624216
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:48:19 2017 -0500

    Update README.md

commit 96d08cef2dc1030ec65280d66859f30150b96acc
Author: Dan Guido <dan@trailofbits.com>
Date:   Thu Mar 2 17:33:35 2017 -0500

    Update README.md

commit d2a01659589a5a9b581f98819ade8e72f592a0c0
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 17:31:06 2017 -0500

    Use setuptool extras for dev deps (#40)
    
    * Add extra deps to setup.py
    
    * Fix nose dep
    
    * lol wrong keystone
    
    * Fix readme
    
    * Update travis
    
    * Workaround capstone install bug
    
    * Use --no-binary in only pip install line
    
    * Fix another readme regression
    
    * Not again

commit 7412b2a374870d612027081fefb54e360766b2bb
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 17:19:36 2017 -0500

    test m.hook typerror (#41)

commit fed00af160a3665e79b4ef26e9f12bfe31d5ddde
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 16:33:04 2017 -0500

    Add arm asr, abstract SR type insns (#44)
    
    * tmp
    
    * Fix bug

commit 259eab71e04c8b9ed0760e252ded1bb5938952ab
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Mar 2 15:35:45 2017 -0500

    Fix capstone install (#43)

commit 61ccfc1b1423862acf097d87f986aa0ba0cad6be
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Mar 2 16:37:25 2017 -0300

    OOps

commit f5515df4ff016e145b8439a611becde81ed3c311
Author: feliam <felipe.andres.manzano@gmail.com>
Date:   Thu Mar 2 16:33:58 2017 -0300

    Add capstone ASR special case

commit 04d95735ac77d063fd9b315abf18bc9271e19cc7
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:47:55 2017 -0500

    Fix empty trace file (#39)
    
    * Improve .trace generation
    
    * Rm unused self.trace stuff

commit f0069792c386a6f53d92fa63b908fd563e3fe6be
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:47:46 2017 -0500

    Misc cleanup: Rm old script, unused executor hooking functions (#38)
    
    * Rm old irrelevant example script
    
    * Make this easier to copy and paste
    
    * Rm old unused executor hooking

commit 275a85e08eec9caf1fb9538fd6c074b2a9a0f282
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:47:35 2017 -0500

    Clean CGC artifacts from linux model (#36)
    
    * Use errno instead of CGC constants for linux
    
    * Rm linux.sys_allocate
    
    * Rm linux.sys_deallocate
    
    * Rm linux.sys_fdwait
    
    * Rm comments
    
    * Clean sys_read
    
    * Clean sys_write
    
    * Fix syscall trace spots
    
    * Clean exit_group

commit 16f9bba9b58a89eb95d0f642e3ac626870c8eb0b
Author: Mark Mossberg <mark@trailofbits.com>
Date:   Wed Mar 1 13:44:50 2017 -0500

    Add readme for devs

commit a6b81c0464545b7dc93be0687472e5eba63560d2
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 13:30:37 2017 -0500

    Update README.md (#33)
    
    * Update README.md
    
    * Add quick start
    
    * Update README.md
    
    * Update README.md
    
    * Update README.md

commit ca158dd5b41a11dfaf1aab8ebaf3308cc2fbe88c
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Mar 1 11:06:32 2017 -0600

    remove alternate solver support (#35)

commit a4576009de02871ad5b1c7c966cb625222b15b24
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Wed Mar 1 11:06:25 2017 -0600

    switch pse_ prefix to mcore_ (#34)

commit b591f2a83a3066581124cbb9f4d7f07fe33f1563
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Mar 1 11:22:04 2017 -0500

    Add unicorn to required deps (#31)
    
    * Add unicorn to python deps
    
    * Update readme
    
    * Add deps to setup.py
    
    * test letting pip install install deps in travis

commit d052d3b2d7ce09ba9283d3a42796ee2dc9edbd62
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Feb 27 14:45:12 2017 -0600

    Fix the --stats flag (#26)
    
    * start re-integrating profiling functionality
    
    * profiling works
    
    * rename X class
    
    * make profile a private attribute
    
    * nomenclature fixes
    
    * profiling -> profile
    
    * remove _dump stats
    
    * always initialize self._profile
    
    * remove extra setting of profiling

commit d6393cc8a6522b7960cfc94d737fbcf7e802829c
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Feb 27 15:44:33 2017 -0500

    Add hook decorator (#28)
    
    * Add m.add_hook test
    
    * Add @m.hook test
    
    * Add `hook` decorator for convenience
    
    * Update readme and examples
    
    * Update run_callback
    
    * Improve `add_hook` docstring
    
    expound on callback structure
    
    * Rm debug print
    
    * Improve docstring

commit 98567efeaaf7ebd167621e56a2bd272c4ec1ebd4
Author: JP Smith <jp.smith@ilstu.edu>
Date:   Mon Feb 27 14:25:18 2017 -0600

    Force pc argument to add_hook to be an int or None (#30)
    
    * force pc to be an int or None
    
    * follow pep8 more closely
    
    * change debug message to an error
    
    * use format and isinstance

commit bbc36a2b2e1be545f138be44c9c1be1764f2551d
Author: Yan <yan@users.noreply.github.com>
Date:   Fri Feb 24 15:56:46 2017 -0500

    Use issymbolic() throughout Manticore (#22)
    
    * Use issymbolic() throughout Manticore
    
    * Add a missed import
    
    * absolute -> relative import
    
    * Import issymbolic from helpers
    
    * Missing import

commit 103d32c0a7ea14ee50937a1e9fcb90ed5248e1e1
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 24 15:21:37 2017 -0500

    Make m.verbosity=2 work (#24)
    
    * Make each model get "MODEL" logger instead of unique name
    
    This makes implementing `manticore.verbosity` actually work for level
    2
    
    * Replace model names with 'MODEL'

commit 9d3dfec08bd99c17428c4fc2b55c2a29434fcac5
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Fri Feb 24 15:21:28 2017 -0500

    Rm helloworld in `make clean` (#27)

commit 44bf8745a1e5d1627137de089e22ac429112cb70
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 22 10:08:35 2017 -0500

    m.start -> m.run (#25)

commit f51227acd55991b07bba706fcb35253743cd580f
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 21 11:41:15 2017 -0500

    Control memory logging with `verbosity` (#23)

commit 065266ba7f767fcf18da53c6f09b82d484eeeafd
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Thu Feb 16 16:41:24 2017 -0500

    Refactor symbolic syscall handling to be arch indep (#19)

commit 5a432b8957e4499a971a50ec2e518b1ca0d33caa
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Feb 15 17:25:56 2017 -0500

    Update README snippet (#17)

commit 724db789072da4ae71f58c321771aeef582e99b0
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Feb 15 14:48:55 2017 -0500

    Assign context object to Manticore itself (#13)
    
    * Make Manticore behave like a dict; slim callback
    * Update all sample scripts to not take a context
    * Add a sample script (count_instructions.py)
    * We no longer need to close over Manticore state; add callback directly
    * Move Manticore's context to a public attribute

commit da81e355b80a613aa843ca00ad61ed28cbbd1b42
Author: Yan <yan@users.noreply.github.com>
Date:   Wed Feb 15 13:35:40 2017 -0500

    Fix symbolic argv (#12)
    
    * Proxy ArrayStore's 'name' property to the underlying Array
    * Make setup_stack() repeatable
    * Re-initialize the stack if any of the environment was symbolicated
    * Encorporate name proxy test to ArrayStore
    * Use issymbolic()

commit b86808777e46ae3760468016f850b27e8d0aa2ff
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 15 13:06:49 2017 -0500

    Replace travis opt in with travis opt out (#11)
    
    * Use `wip` branch prefix to opt out of travis, instead of dev- to opt in
    
    * Add dash

commit 6577df9f0dd3c0a63b5948d137b1f026f163cbb3
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 15 13:00:33 2017 -0500

    Fix travis cache (#14)
    
    Travis seems to have updated their python version

commit 05f5fcf045b0ca3bf83a222743d13b6886be8054
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Wed Feb 15 12:32:08 2017 -0500

    Port to real python package structure (#6)
    
    * Initial moving
    
    * Initial package __init__.py
    
    * Use relative imports
    
    * Correct imports for tests
    
    * Rename main.py -> __main__.py
    
    * Use relative imports in main
    
    * Refactor cli to be used with setuptools
    
    * Add basic setup.py
    
    * Fix test_memory import
    
    * Fix test_cpu_manual imports
    
    * Correct iterpickle import
    
    * Use manticore console_script installed by setuptools
    
    * Make travis install our package for integration cli tests
    
    * Refactor model hooks dynamic import for being in pkg
    
    * Correct import
    
    * Rm empty line
    
    * Fix coverage test paths

commit 8f51362734ddfba140efd94a93bcc534d274445a
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Tue Feb 14 16:42:09 2017 -0500

    Port @japesinator's dynamic FLAGS refactor from old repo (#10)

commit e539ae4139a0e7b97b78642033f855df3c1bd165
Author: Yan <yan@users.noreply.github.com>
Date:   Tue Feb 14 16:06:10 2017 -0500

    Bring in tests to symbolicate PR (#3)

commit dde79a0babdb255ef9ac78d4b113170d41973d44
Author: Yan <yan@users.noreply.github.com>
Date:   Tue Feb 14 14:54:52 2017 -0500

    Remove ManticoreControl object [#180] (#4)
    
    * Remove ManticoreControl object
    * Some changes were brought in from dev-symbolicate-api
    * Add Manticore.terminate()
    * Add State.abandon()
    * Update sample scripts
    * Remove ctl from README
    * Fix tests
    * Bring in changes from dev-symbolicate-api
    * Lower-case wildcard
    * string -> cstring
    * abandon() docstring
    * Rename "name" to "label"
    * Remove obsolete comment
    * Make NUL a possible value for the last byte of a cstring
    * Fix AbandonState and add example binary&script
    * name -> label in tests, manticore.py
    * Ignore .DS_Store
    * Update symbolicate_buffer docstring

commit 406918a9fc52fb9af437fabe5e46ef437f5aece7
Author: Yan <yan@users.noreply.github.com>
Date:   Mon Feb 13 18:30:25 2017 -0500

    Add LICENSE file (#5)
    
    * Add LICENSE [ASL2]
    
    * Bump year

commit 77c4905cbc76287ad3ee43b7d330e1694a9e58cc
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Feb 13 16:57:55 2017 -0500

    Update README.md (#2)
    
    * Update README.md
    
    * Remove deps list

commit 38141ee006f5e8a68ce6c1b3af3ad0a9ada49139
Author: Mark Mossberg <mark.mossberg@gmail.com>
Date:   Mon Feb 13 14:51:05 2017 -0500

    Remove embedded elftools, use proper dependency (#1)
    
    * Import elftools properly
    
    * Add pyelftools as dep
    
    * Use elftools dep
    
    * Rm embedded elftools
    
    * Make travis use requirements.txt
    
    * Workaround capstone install bug
    
    https://github.com/aquynh/capstone/issues/445

commit badf1ab28ee3b6dce39b1ebd1de9036dc13146f0
Author: yan <rottled@gmail.com>
Date:   Mon Feb 13 12:04:15 2017 -0500

    Initial import
