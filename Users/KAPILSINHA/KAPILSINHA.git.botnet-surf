======================: FILES :======================
======================: README CONTENT :======================
# botnet-surf
This repo allow us to read in PCap Files and outputs a GUI representing it as a graph/network with various other functions. It also creates a neural network that uses graph characteristics to identify nodes as malicious or non-malicious.

## Getting Started

### Prerequisites
```
Python 2.7
```
### Installing
#### Reading in PCap files and Displaying the GUI
Install pcapfile (necessary to read pcap files):
```
pip install pypcapfile
```
Install PyGObject (necessary to run the GUI, which is built on GTK) for Ubuntu:
```
apt-get install python-gi
```
Install Numpy (necessary for some of the filters implemented in the GUI):
```
apt-get install python-numpy
```
You will next need to install graph-tool, which is a Python wrapper around C++.
Follow https://git.skewed.de/count0/graph-tool/wikis/installation-instructions based on your operating system. Note that installation may be problematic if you run Windows (I followed the instructions for Ubuntu 16.04)

#### Machine Learning
You will need TensorFlow for the machine learning component. Follow https://www.tensorflow.org/install/

Optional: To convert pcap-ng files (which is often the file format in datasets) to pcap files, install Wireshark:
```
sudo apt-get install wireshark-common
```

Install Keras (which operates over TensorFlow)
```
pip install keras
```

Install Sci-Kit Learn (required to generate ROC curves to test the model)
```
pip install -U scikit-learn
```

Install h5py (used to save models generated by Keras and TensorFlow):
```
pip install h5py
```

## Authors
Kapil Sinha
====================== GIT HISTORY: ======================
b08dcad HEAD@{0}: clone: from https://github.com/kapilsinha/botnet-surf
commit b08dcad13aa26636037084012324fcc342ef3a88
Author: lxd <1171866049@qq.com>
Date:   Tue May 31 20:40:56 2022 +0800

    Update prep_time_series_input.py (#1)
    
    There is an error here

commit 1399135e3ade0bf0eb5451472eea272e80603111
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Mon May 6 03:34:56 2019 -0700

    Update README.md

commit 3cc0bab4f99c2fec8f9b2685a8456e66f33dd508
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Tue Aug 29 17:35:06 2017 -0700

    Updated prep_my_visualization. Previously I needed to have both the LSTM and regular (not time-series) input files to run this program, which is redundant. Now it just requires the LSTM (NOT NORMALIZED) input files. The previous prep_my_visualization has been placed in old_files

commit ce6b5bf330d81a30b9451f210ae4859d73efed5f
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Mon Aug 28 20:46:05 2017 -0700

    Rename neural_network_som_over_time.py to old_files/Netgram_Tool/neural_network_som_over_time.py

commit 8f2fb8a14c53bf4a8e14581464bfa84b70905761
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:33:44 2017 -0700

    Removed installation directions for Netgram

commit 03f22617a66f71b885dfaef2f33399cc50b75fff
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:31:20 2017 -0700

    Added the files for my new visualization tool - which I mostly wrote by myself (except for graphics.py, which I found online).

commit 57d6544593de282968e0091351ffe19eff4fdfaa
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:29:31 2017 -0700

    Cleaned up the moving of Netgram Tool to old_files. Also added some modified versions of lstm_keras_stateless (the modifications are slight so ideally I could just import the similar parts from a common file and have the differences in separate files

commit f6a0dac261c74bafc7ce5ccc61cefa34bae355f7
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:23:35 2017 -0700

    Forgot to move this...

commit 81c81759c633f747a1afb01c2f75a8d0028e978c
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:22:12 2017 -0700

    Moved Netgram tool folder to old_stuff

commit 988b51196078fa757cf90dda409de5eaddca97f8
Merge: 2cfc30b 78e8ef9
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:20:24 2017 -0700

    Merge branch 'master' of https://github.com/kapilsinha/botnet-surf

commit 2cfc30b1ba2795fe95c6fa8000d0599de3c53518
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 28 20:19:16 2017 -0700

    Added some files to this folder (including files involving the Netgram tool, which I ultimately decided to discard) - they won't be used anymore.

commit 78e8ef9bdc2c90376cdc19d21aad1cc963aaa414
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Mon Aug 28 20:14:41 2017 -0700

    Rename old_neural_network_som_over_time.py to old_files/old_neural_network_som_over_time.py

commit 4680afdfa5a63884120ba1ec6a4331947cf09066
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Fri Aug 18 15:23:10 2017 -0700

    Added information from scenario 6, 7, and 13 to scenario_info so that their pcap files can be used for data (and neural networks) now.

commit 66bded17dae93c39f189481f169ed87c126346d3
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Thu Aug 17 19:56:24 2017 -0700

    Added 16 'function' features to the original 12 graph features - required adding to the create_graph and prep_input and prep_time_series_input files. Also made very minor changes to the neural network implementation files

commit 76832ee0e0c5ce68d06d9f1f2607de2e082bdec2
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Tue Aug 15 21:25:08 2017 -0700

    Basic implementation of a random forest using sci-kit learn. Quickly gave okay results (80% accuracy) but not very promising now...

commit 75940316502b87f944b6e77930f402a315d2d7ec
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Mon Aug 14 16:01:18 2017 -0700

    Cleaned up the neural network file so that a lot of its functions are imported from other files (similar to the time-series neural network format). I haven't tested if it still works but it should...

commit adbdd04b1a7e84757212deee0cb8516d8227a2d6
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Fri Aug 11 19:39:04 2017 -0700

    I forgot to add the visualization som file - it generates the .mat file that is then inputted into the run visualization file. The prep time series input has a very minor change of the settings. The LSTM with som training files use an SOM to cluster all the nodes so that instead of randomly selecting samples from the entire group, I can select from the individual clusters (i.e. stratified sampling). I haven't figured out if this is very helpful yet but it at least lays the foundation for some testing and experimentation

commit f376b14e8b92a4f35be2631cb43dc0f10e64b1a6
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Fri Aug 11 19:08:50 2017 -0700

    Modified the core file to account for start of the botnet nodes i.e. for a botnet node's (the node is malicious at some point in the dataset) time window, if it is before the time that the node was infected, we mark it with a 0 for non-malicious. This is different from what we had before since earlier we did not account for the time that the node was infected (which made the detection problem unnecessarily difficult)...this actually seemed to better results significantly!

commit 43ac99d5863e86cc35181e2f0fb71dcb2a084d7a
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Tue Aug 8 15:14:05 2017 -0700

    Updated README.md
    
    Updated the README file with information on installing the cluster evolution visualization package (exported from MATLAB for Python).

commit 1d3a0c4722a1b684d5fe670956449dbd726dd2ca
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Tue Aug 8 15:06:33 2017 -0700

    The main addition is the cluster evolution visualization tool. All credit for the development of the tool goes to the authors of Netgram (http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0137502) with MATLAB software available at http://www.esat.kuleuven.be/stadius/ADB/mall/softwareNetgram.php. I simply adapted the tool for my purposes and exported it as a Python package for compatibility with the rest of my code. The som_over_time files use the LSTM inputs to calculate with an SOM the clusters for each time interval. Both recalculate the SOM for each time cluster due to my effort to make it 'real-time'. I am currently working on a version that computes all the clusters beforehand and simply matches the nodes in each time interval to the appropriate cluster, which should be more informative

commit e6919b97fb40f8744de11e35aabc0c94ff70e48e
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Sun Jul 30 12:50:43 2017 -0700

    Cleaned up the code by placing parts I'm reusing often in a different file

commit 023dca3342ea8ce5eca40dab3c01015285e65c98
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Wed Jul 26 19:37:22 2017 -0700

    Added to installation details
    
    Added the command to install Sci-Kit Learn (necessary for ROC curves)

commit 5c8285d7ef7432eeec7fec07373d89a5b74a13b0
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Wed Jul 26 19:33:37 2017 -0700

    Renamed lstm_keras to lstm_kerass_stateless. I added a stateful LSTM in addition to the aforementioned stateless LSTM.

commit c3b5aec8f56bc33da46f38a9850cc3381a013191
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Tue Jul 25 05:31:51 2017 -0700

    Added an implementation of an SOM as well as an LSTM. Metrics contain some of the metrics used in the neural networks. roc_curves contains some of the ROC curves I made while experimenting with parameters for the regular neural network

commit 4809bfadaca10a5867c684da7b3f8555076ce0d6
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Tue Jul 25 05:28:01 2017 -0700

    Minor changes to the regular neural network

commit 1074225ccd467db46512137760ab5e434be50c72
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Tue Jul 18 21:20:15 2017 -0700

    I changed the loss function from binary cross-entropy to a weighted mean square error (to increase the importance of detecting malicious nodes). For the training set, I maintain a 5:1 non-malicious to malicious node proportion by including all the malicious arrays and randomly selecting five times as many non-malicious nodes. Also I added code to generate an ROC curve to better visualize the model's accuracy. These changes have improved the model at least to the point that it doesn't just mark all nodes as non-malicious now

commit c4a973124f6fe4e978f86fe0da9d74298f8e5a35
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Thu Jul 13 14:51:35 2017 -0700

    A few minor changes, including the addition of a function that makes testing on different scenarios easier

commit 843eb774ad75b0ac5f9c534adba0b054637995d6
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Thu Jul 13 01:48:37 2017 -0700

    Updated the neural network, largely just by normalizing it and setting an upper bound on the number of iterations on the eigenvector centrality calculation. There were a few intermediate files, placed in the old_neural_networks file

commit c147bd1207cfb4f6cea1732bf20e9cf270f6789f
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Wed Jul 12 15:52:48 2017 -0700

    Created a basic neural network using Keras and TensorFlow to classify nodes as malicious or non-malicious. I've done some testing but I need to experiment more with its parameters and the datsets

commit 5541df42f7308ce46b11c7d45e442541aa840ece
Merge: bca7a7b c13401e
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Sun Jul 9 16:00:31 2017 -0700

    Merge branch 'master' of https://github.com/kapilsinha/botnet-surf

commit bca7a7b02ad6a6ca50e41c172350540587e0ec1d
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Sun Jul 9 16:00:05 2017 -0700

    Moved old graph files to the old_files since the new GUI can only read in pcap files and not graph files (since we have new graphs for every time step

commit c13401e4c415bc649e45ceab34372e7ecb8c309a
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Sun Jul 9 15:53:43 2017 -0700

    Removed old/incorrect comments

commit 79b5ce145820673509445e786675523f34be3d36
Merge: 503269e dda448e
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Sun Jul 9 15:52:01 2017 -0700

    Merge branch 'master' of https://github.com/kapilsinha/botnet-surf

commit 503269ea50f7aa49b4358b3878b21fd0bcecf212
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Sun Jul 9 15:50:34 2017 -0700

    Updated and made several changes to the previous GUI (in old_files). Now instead of reading in the entire pcap file at once, we read it in part by part. This allows us to view and work with large pcap files without needing to wait for the entire file to load - I used a generator (instead of the iterator I used before) to do this. This required several changes so now create_graph.py contains what the previous process_pcap_file.py and create_graph.py contains; hence the GUI now just requries this create_graph.py and the graph_gui.py files. Also there is a big difference in the way I handle time changes. Previously I loaded the entire graph into the program and then filtered out the ones not in the current time range. Now I only load in the nodes and edges in the time range (no filter required). This is somewhat less convenient in that I cannot jump to a certain time and instead need to step through it, but this is necessary to be able to handle large pcap files as described above. The step button previously calculated percent of the entire file that I wanted to step through; obviously this is not possible if I read the file bit by bit and isn't very useful for our purposes. Thus I replaced it with seconds (such that the default step option is to have a 300 second interval and 150 second steps; this can be adjusted). The step button deletes the window and adds the updated widgets - this is not ideal since it is pretty inefficient and is not clean in terms of design, but I couldn't get the program to work when I tried to delete and add individual widgets. I also implemented a run button that calls the step function every 4 seconds; I also have a pause button that stops this run function. Note that for very dense graphs, 4 seconds may not be enough to load the graph and so the program may freeze; if this is the case, increase the 'sleep_time' to allow more time for the graph to load - a more robust solution for this would be nice.

commit dda448ef86ba31ad4a11176cec1388ded8b995fa
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Sat Jul 1 14:22:47 2017 -0700

    Update README.md

commit 1eb0a6fdfa10b9ab173d7b3f2e6f27fd950eac3e
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Sat Jul 1 14:03:27 2017 -0700

    Update README.md

commit 8a117d2ac77e4bbe02bf0aa2f13d7a190815b2c3
Author: kapilsinha <ksinha1999@gmail.com>
Date:   Fri Jun 30 15:01:57 2017 -0700

    Update README.md

commit 95f4c345de11d88831403929726675130e546a70
Author: Kapil Sinha <ksinha@caltech.edu>
Date:   Fri Jun 30 14:44:32 2017 -0700

    The first working version of a GUI that reads in pcap files and outputs a graph (plus other functionality)
